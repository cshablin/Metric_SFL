{"artifactresolutionresult": {"distance": 0.9167, "methods": ["org.apache.maven.artifact.resolver.artifactresolutionresult.getartifactresolutionnodes()", "org.apache.maven.artifact.resolver.artifactresolutionresult.getartifacts()", "org.apache.maven.artifact.resolver.artifactresolutionresult.setartifactresolutionnodes(set)", "org.apache.maven.artifact.resolver.artifactresolutionresult.hasversionrangeviolations()", "org.apache.maven.artifact.resolver.artifactresolutionresult.hascirculardependencyexceptions()", "org.apache.maven.artifact.resolver.artifactresolutionresult.addversionrangeviolation(exception)", "org.apache.maven.artifact.resolver.artifactresolutionresult.listoriginatingartifact(artifact)", "org.apache.maven.artifact.resolver.artifactresolutionresult.hasmetadataresolutionexceptions()", "org.apache.maven.artifact.resolver.artifactresolutionresult.initlist(list)", "org.apache.maven.artifact.resolver.artifactresolutionresult.artifactresolutionresult()"]}, "artifactrepositorypolicy": {"distance": 1.05, "methods": ["org.apache.maven.artifact.repository.artifactrepositorypolicy.artifactrepositorypolicy()", "org.apache.maven.artifact.repository.artifactrepositorypolicy.isenabled()", "org.apache.maven.artifact.repository.artifactrepositorypolicy.setchecksumpolicy(string)", "org.apache.maven.artifact.repository.artifactrepositorypolicy.artifactrepositorypolicy(boolean;string;string)", "org.apache.maven.artifact.repository.artifactrepositorypolicy.checkoutofdate(date)", "org.apache.maven.artifact.repository.artifactrepositorypolicy.getchecksumpolicy()"]}, "legacyrepositorylayout": {"distance": 1.5, "methods": ["org.apache.maven.artifact.repository.layout.legacyrepositorylayout.pathofremoterepositorymetadata(artifactmetadata)", "org.apache.maven.artifact.repository.layout.legacyrepositorylayout.pathofrepositorymetadata(artifactmetadata;string)", "org.apache.maven.artifact.repository.layout.legacyrepositorylayout.pathof(artifact)", "org.apache.maven.artifact.repository.layout.legacyrepositorylayout.legacyrepositorylayout()"]}, "defaultmaventools": {"distance": 0.8889, "methods": ["org.apache.maven.defaultmaventools.defaultmaventools()"]}, "comparableversion$stringitem": {"distance": 1.0, "methods": ["org.apache.maven.artifact.versioning.comparableversion$stringitem.compareto(item)", "org.apache.maven.artifact.versioning.comparableversion$stringitem.comparablequalifier(string)", "org.apache.maven.artifact.versioning.comparableversion$stringitem.tostring()", "org.apache.maven.artifact.versioning.comparableversion$stringitem.isnull()", "org.apache.maven.artifact.versioning.comparableversion$stringitem.comparableversion$stringitem(string;boolean)", "org.apache.maven.artifact.versioning.comparableversion$stringitem.<clinit>()"]}, "build": {"distance": 0.9333, "methods": ["org.apache.maven.profiles.build.defaultprofileadvisor.defaultprofileadvisor()", "org.apache.maven.model.build.getextensions()", "org.apache.maven.model.build.build()"]}, "warningresolutionlistener": {"distance": 1.1, "methods": ["org.apache.maven.artifact.resolver.warningresolutionlistener.endprocesschildren(artifact)", "org.apache.maven.artifact.resolver.warningresolutionlistener.warningresolutionlistener(logger)", "org.apache.maven.artifact.resolver.warningresolutionlistener.testartifact(artifact)", "org.apache.maven.artifact.resolver.warningresolutionlistener.startprocesschildren(artifact)", "org.apache.maven.artifact.resolver.warningresolutionlistener.includeartifact(artifact)"]}, "snapshottransformation": {"distance": 1.1667, "methods": ["org.apache.maven.artifact.transform.snapshottransformation.transformforresolve(artifact;list;artifactrepository)", "org.apache.maven.artifact.transform.snapshottransformation.transformforinstall(artifact;artifactrepository)", "org.apache.maven.artifact.transform.snapshottransformation.snapshottransformation()", "org.apache.maven.artifact.transform.snapshottransformation.<clinit>()"]}, "defaultartifactrepository": {"distance": 0.9, "methods": ["org.apache.maven.artifact.repository.defaultartifactrepository.getsnapshots()", "org.apache.maven.artifact.repository.defaultartifactrepository.defaultartifactrepository(string;string;artifactrepositorylayout;artifactrepositorypolicy;artifactrepositorypolicy)", "org.apache.maven.artifact.repository.defaultartifactrepository.pathofremoterepositorymetadata(artifactmetadata)", "org.apache.maven.artifact.repository.defaultartifactrepository.getkey()", "org.apache.maven.artifact.repository.defaultartifactrepository.pathoflocalrepositorymetadata(artifactmetadata;artifactrepository)", "org.apache.maven.artifact.repository.defaultartifactrepository.isblacklisted()", "org.apache.maven.artifact.repository.defaultartifactrepository.pathof(artifact)", "org.apache.maven.artifact.repository.defaultartifactrepository.defaultartifactrepository(string;string;artifactrepositorylayout)", "org.apache.maven.artifact.repository.defaultartifactrepository.getlayout()", "org.apache.maven.artifact.repository.defaultartifactrepository.setblacklisted(boolean)", "org.apache.maven.artifact.repository.defaultartifactrepository.getreleases()"]}, "abstractartifactresolutionexception": {"distance": 1.0, "methods": ["org.apache.maven.artifact.resolver.abstractartifactresolutionexception.constructartifactpath(list;string)", "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.abstractartifactresolutionexception(string;artifact;list)", "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.abstractartifactresolutionexception(string;string;string;string;string;string;list;list;throwable)", "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.constructmissingartifactmessage(string;string;string;string;string;string;string;string;list)", "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.constructmessagebase(string;string;string;string;string;list;list)", "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.abstractartifactresolutionexception(string;artifact;list;throwable)"]}, "defaultartifact": {"distance": 0.9526, "methods": ["org.apache.maven.artifact.defaultartifact.setresolvedversion(string)", "org.apache.maven.artifact.defaultartifact.getversionrange()", "org.apache.maven.artifact.defaultartifact.defaultartifact(string;string;versionrange;string;string;string;artifacthandler;boolean)", "org.apache.maven.artifact.defaultartifact.hashcode()", "org.apache.maven.artifact.defaultartifact.setdependencytrail(list)", "org.apache.maven.artifact.defaultartifact.selectversionfromnewrangeifavailable()", "org.apache.maven.artifact.defaultartifact.empty(string)", "org.apache.maven.artifact.defaultartifact.getdependencyconflictid()", "org.apache.maven.artifact.defaultartifact.setversion(string)", "org.apache.maven.artifact.defaultartifact.getscope()", "org.apache.maven.artifact.defaultartifact.isrelease()", "org.apache.maven.artifact.defaultartifact.getfile()", "org.apache.maven.artifact.defaultartifact.getavailableversions()", "org.apache.maven.artifact.defaultartifact.getartifactid()", "org.apache.maven.artifact.defaultartifact.getversion()", "org.apache.maven.artifact.defaultartifact.updateversion(string;artifactrepository)", "org.apache.maven.artifact.defaultartifact.getgroupid()", "org.apache.maven.artifact.defaultartifact.getartifacthandler()", "org.apache.maven.artifact.defaultartifact.getrepository()", "org.apache.maven.artifact.defaultartifact.isoptional()", "org.apache.maven.artifact.defaultartifact.setbaseversioninternal(string)", "org.apache.maven.artifact.defaultartifact.isresolved()", "org.apache.maven.artifact.defaultartifact.setscope(string)", "org.apache.maven.artifact.defaultartifact.getbaseversioninternal()", "org.apache.maven.artifact.defaultartifact.getclassifier()", "org.apache.maven.artifact.defaultartifact.hasclassifier()", "org.apache.maven.artifact.defaultartifact.appendartifacttypeclassifierstring(stringbuffer)", "org.apache.maven.artifact.defaultartifact.getmetadatalist()", "org.apache.maven.artifact.defaultartifact.getdependencyfilter()", "org.apache.maven.artifact.defaultartifact.equals(object)", "org.apache.maven.artifact.defaultartifact.gettype()", "org.apache.maven.artifact.defaultartifact.isselectedversionknown()", "org.apache.maven.artifact.defaultartifact.getdependencytrail()", "org.apache.maven.artifact.defaultartifact.setfile(file)", "org.apache.maven.artifact.defaultartifact.getselectedversion()", "org.apache.maven.artifact.defaultartifact.setresolved(boolean)", "org.apache.maven.artifact.defaultartifact.validateidentity()", "org.apache.maven.artifact.defaultartifact.addmetadata(artifactmetadata)", "org.apache.maven.artifact.defaultartifact.getid()", "org.apache.maven.artifact.defaultartifact.issnapshot()", "org.apache.maven.artifact.defaultartifact.tostring()", "org.apache.maven.artifact.defaultartifact.setavailableversions(list)", "org.apache.maven.artifact.defaultartifact.getbaseversion()", "org.apache.maven.artifact.defaultartifact.setdependencyfilter(artifactfilter)", "org.apache.maven.artifact.defaultartifact.setversionrange(versionrange)", "org.apache.maven.artifact.defaultartifact.getdownloadurl()", "org.apache.maven.artifact.defaultartifact.selectversion(string)"]}, "defaultupdatecheckmanager": {"distance": 1.1111, "methods": ["org.apache.maven.artifact.manager.defaultupdatecheckmanager.getmetadatakey(artifactrepository;file)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.ispomupdaterequired(artifact;artifactrepository)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.defaultupdatecheckmanager(logger)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.touch(artifact;artifactrepository)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.gettouchfile(repositorymetadata;file)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.isupdaterequired(repositorymetadata;artifactrepository;file)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.readlastupdated(file;string)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.isupdaterequired(artifact;artifactrepository)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.gettouchfile(artifact)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.writelastupdated(file;string)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.isupdaterequired(artifact;artifactrepository;artifactrepositorypolicy)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.readlastupdated(repositorymetadata;artifactrepository;file)", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.defaultupdatecheckmanager()", "org.apache.maven.artifact.manager.defaultupdatecheckmanager.touch(repositorymetadata;artifactrepository;file)"]}, "mavenmetadatasource": {"distance": 1.0714, "methods": ["org.apache.maven.project.artifact.mavenmetadatasource.createartifacts(artifactfactory;list;string;artifactfilter;mavenproject)"]}, "defaultartifacthandler": {"distance": 0.9643, "methods": ["org.apache.maven.artifact.handler.defaultartifacthandler.defaultartifacthandler(string)", "org.apache.maven.artifact.handler.defaultartifacthandler.getextension()", "org.apache.maven.artifact.handler.defaultartifacthandler.getpackaging()", "org.apache.maven.artifact.handler.defaultartifacthandler.getdirectory()", "org.apache.maven.artifact.handler.defaultartifacthandler.defaultartifacthandler()", "org.apache.maven.artifact.handler.defaultartifacthandler.getclassifier()"]}, "buildbase": {"distance": 0.9474, "methods": ["org.apache.maven.model.buildbase.getfinalname()", "org.apache.maven.model.buildbase.setdirectory(string)", "org.apache.maven.model.buildbase.getdirectory()", "org.apache.maven.model.buildbase.setfinalname(string)", "org.apache.maven.model.buildbase.buildbase()"]}, "mojodescriptor": {"distance": 0.9852, "methods": ["org.apache.maven.plugin.descriptor.mojodescriptor.getplugindescriptor()", "org.apache.maven.plugin.descriptor.mojodescriptor.mojodescriptor()", "org.apache.maven.plugin.descriptor.mojodescriptor.setgoal(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.setplugindescriptor(plugindescriptor)"]}, "resolutiongroup": {"distance": 1.0, "methods": ["org.apache.maven.artifact.metadata.resolutiongroup.resolutiongroup(artifact;set;list)", "org.apache.maven.artifact.metadata.resolutiongroup.getartifacts()", "org.apache.maven.artifact.metadata.resolutiongroup.getresolutionrepositories()"]}, "defaultartifactcollector": {"distance": 0.875, "methods": ["org.apache.maven.artifact.resolver.defaultartifactcollector.collect(set;artifact;artifactrepository;list;artifactmetadatasource;artifactfilter;list)", "org.apache.maven.artifact.resolver.defaultartifactcollector.recurse(artifactresolutionresult;resolutionnode;map;managedversionmap;artifactrepository;list;artifactmetadatasource;artifactfilter;list;list)", "org.apache.maven.artifact.resolver.defaultartifactcollector.manageartifact(resolutionnode;managedversionmap;list)", "org.apache.maven.artifact.resolver.defaultartifactcollector.getmanagedversionsmap(artifact;map)", "org.apache.maven.artifact.resolver.defaultartifactcollector.fireevent(int;list;resolutionnode;artifact;versionrange)", "org.apache.maven.artifact.resolver.defaultartifactcollector.defaultartifactcollector()", "org.apache.maven.artifact.resolver.defaultartifactcollector.collect(set;artifact;map;artifactrepository;list;artifactmetadatasource;artifactfilter;list;list)", "org.apache.maven.artifact.resolver.defaultartifactcollector.enablelogging(logger)", "org.apache.maven.artifact.resolver.defaultartifactcollector.collect(set;artifact;map;artifactrepository;list;artifactmetadatasource;artifactfilter;list)", "org.apache.maven.artifact.resolver.defaultartifactcollector.fireevent(int;list;resolutionnode)", "org.apache.maven.artifact.resolver.defaultartifactcollector.fireevent(int;list;resolutionnode;artifact)", "org.apache.maven.artifact.resolver.defaultartifactcollector.checkscopeupdate(resolutionnode;resolutionnode;list)"]}, "defaultmavenexecutionrequest": {"distance": 0.9858, "methods": ["org.apache.maven.execution.defaultmavenexecutionrequest.setgoals(list)", "org.apache.maven.execution.defaultmavenexecutionrequest.setlocalrepository(artifactrepository)", "org.apache.maven.execution.defaultmavenexecutionrequest.setbasedirectory(file)", "org.apache.maven.execution.defaultmavenexecutionrequest.defaultmavenexecutionrequest()", "org.apache.maven.execution.defaultmavenexecutionrequest.getlocalrepository()", "org.apache.maven.execution.defaultmavenexecutionrequest.setstarttime(date)", "org.apache.maven.execution.defaultmavenexecutionrequest.setproperties(properties)"]}, "plugindescriptor": {"distance": 0.9576, "methods": ["org.apache.maven.plugin.descriptor.plugindescriptor.getartifactid()", "org.apache.maven.plugin.descriptor.plugindescriptor.setartifactid(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.setgroupid(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.getartifacts()", "org.apache.maven.plugin.descriptor.plugindescriptor.getartifactmap()", "org.apache.maven.plugin.descriptor.plugindescriptor.setartifacts(list)", "org.apache.maven.plugin.descriptor.plugindescriptor.plugindescriptor()", "org.apache.maven.plugin.descriptor.plugindescriptor.setversion(string)"]}, "metadata": {"distance": 0.9286, "methods": ["org.apache.maven.artifact.repository.metadata.metadata.setversion(string)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.read(reader;boolean)", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.getbaseversion()", "org.apache.maven.artifact.repository.metadata.versioning.setversions(list)", "org.apache.maven.artifact.repository.metadata.snapshot.setlocalcopy(boolean)", "org.apache.maven.artifact.repository.metadata.metadata.merge(metadata)", "org.apache.maven.artifact.repository.metadata.versioning.versioning()", "org.apache.maven.artifact.repository.metadata.metadata.metadata()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.getartifactid()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3writer.writemetadata(metadata;string;xmlserializer)", "org.apache.maven.artifact.repository.metadata.metadata.getversioning()", "org.apache.maven.artifact.repository.metadata.versioning.getlatest()", "org.apache.maven.artifact.metadata.resolutiongroup.resolutiongroup(artifact;set;list)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.getmetadata()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.storedinartifactversiondirectory()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.getgroupid()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.storedingroupdirectory()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.parsemetadata(string;xmlpullparser;boolean)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3writer.write(writer;metadata)", "org.apache.maven.artifact.repository.metadata.versioning.addversion(string)", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.getgroupid()", "org.apache.maven.artifact.repository.metadata.versioning.setlastupdated(string)", "org.apache.maven.artifact.metadata.resolutiongroup.getartifacts()", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.mergemetadata(repositorymetadata;list;artifactrepository)", "org.apache.maven.artifact.repository.metadata.versioning.setsnapshot(snapshot)", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.install(artifactmetadata;artifactrepository)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.getremotefilename()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.storedinartifactversiondirectory()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.getkey()", "org.apache.maven.artifact.repository.metadata.metadata.setgroupid(string)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.merge(artifactmetadata)", "org.apache.maven.artifact.repository.metadata.versioning.getlastupdated()", "org.apache.maven.artifact.repository.metadata.versioning.setlastupdatedtimestamp(date)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.metadataxpp3reader()", "org.apache.maven.artifact.metadata.resolutiongroup.getresolutionrepositories()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.artifactrepositorymetadata(artifact;versioning)", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.getkey()", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.createmetadata(artifact;versioning)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.updaterepositorymetadata(artifactrepository;artifactrepository)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.abstractrepositorymetadata(metadata)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.tostring()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.issnapshot()", "org.apache.maven.artifact.repository.metadata.metadata.setversioning(versioning)", "org.apache.maven.artifact.repository.metadata.metadata.getplugins()", "org.apache.maven.artifact.repository.metadata.metadata.setartifactid(string)", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.artifactrepositorymetadata(artifact)", "org.apache.maven.artifact.repository.metadata.versioning.getversions()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.issnapshot()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.gettrimmedvalue(string)", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.defaultrepositorymetadatamanager()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.parseversioning(string;xmlpullparser;boolean)", "org.apache.maven.artifact.repository.metadata.versioning.getrelease()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3writer.metadataxpp3writer()", "org.apache.maven.artifact.repository.metadata.snapshot.islocalcopy()", "org.apache.maven.artifact.repository.metadata.snapshot.snapshot()", "org.apache.maven.artifact.repository.metadata.versioning.updatetimestamp()", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.updatesnapshotmetadata(repositorymetadata;map;artifactrepository;artifactrepository)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3writer.writeversioning(versioning;string;xmlserializer)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.getlocalfilename(artifactrepository)", "org.apache.maven.artifact.repository.metadata.metadata.getmodelencoding()", "org.apache.maven.artifact.repository.metadata.versioning.getsnapshot()", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.resolve(repositorymetadata;list;artifactrepository)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.storeinlocalrepository(artifactrepository;artifactrepository)", "org.apache.maven.artifact.repository.metadata.metadata.getartifactid()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.snapshotartifactrepositorymetadata(artifact)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.setmetadata(metadata)", "org.apache.maven.artifact.repository.metadata.metadata.getversion()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.storedingroupdirectory()", "org.apache.maven.artifact.repository.metadata.metadata.getgroupid()", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.loadmetadata(repositorymetadata;artifactrepository;artifactrepository;map)", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.getartifactid()"]}, "reactormanager$projectsorter": {"distance": 0.8333, "methods": ["org.apache.maven.execution.reactormanager$projectsorter.reactormanager$projectsorter(list)"]}, "repository": {"distance": 0.8333, "methods": ["org.apache.maven.artifact.repository.defaultartifactrepository.getsnapshots()", "org.apache.maven.artifact.repository.metadata.metadata.setversion(string)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.read(reader;boolean)", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.getbaseversion()", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.formatasdirectory(string)", "org.apache.maven.artifact.repository.metadata.versioning.setversions(list)", "org.apache.maven.artifact.repository.metadata.snapshot.setlocalcopy(boolean)", "org.apache.maven.artifact.repository.metadata.metadata.merge(metadata)", "org.apache.maven.artifact.repository.metadata.versioning.versioning()", "org.apache.maven.artifact.repository.metadata.metadata.metadata()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.getartifactid()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3writer.writemetadata(metadata;string;xmlserializer)", "org.apache.maven.artifact.repository.artifactrepositorypolicy.artifactrepositorypolicy()", "org.apache.maven.artifact.repository.defaultartifactrepository.defaultartifactrepository(string;string;artifactrepositorylayout;artifactrepositorypolicy;artifactrepositorypolicy)", "org.apache.maven.artifact.repository.layout.legacyrepositorylayout.pathofremoterepositorymetadata(artifactmetadata)", "org.apache.maven.artifact.repository.defaultartifactrepository.pathofremoterepositorymetadata(artifactmetadata)", "org.apache.maven.artifact.repository.metadata.metadata.getversioning()", "org.apache.maven.artifact.repository.metadata.versioning.getlatest()", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.getmetadata()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.storedinartifactversiondirectory()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.getgroupid()", "org.apache.maven.artifact.repository.artifactrepositorypolicy.isenabled()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.storedingroupdirectory()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.parsemetadata(string;xmlpullparser;boolean)", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.pathofremoterepositorymetadata(artifactmetadata)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3writer.write(writer;metadata)", "org.apache.maven.artifact.repository.metadata.versioning.addversion(string)", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.getgroupid()", "org.apache.maven.artifact.repository.defaultartifactrepositoryfactory.createartifactrepository(string;string;artifactrepositorylayout;artifactrepositorypolicy;artifactrepositorypolicy)", "org.apache.maven.artifact.repository.metadata.versioning.setlastupdated(string)", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.mergemetadata(repositorymetadata;list;artifactrepository)", "org.apache.maven.artifact.repository.metadata.versioning.setsnapshot(snapshot)", "org.apache.maven.artifact.repository.defaultartifactrepository.getkey()", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.install(artifactmetadata;artifactrepository)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.getremotefilename()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.storedinartifactversiondirectory()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.getkey()", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.pathofrepositorymetadata(artifactmetadata;string)", "org.apache.maven.artifact.repository.metadata.metadata.setgroupid(string)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.merge(artifactmetadata)", "org.apache.maven.artifact.repository.metadata.versioning.getlastupdated()", "org.apache.maven.artifact.repository.metadata.versioning.setlastupdatedtimestamp(date)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.metadataxpp3reader()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.artifactrepositorymetadata(artifact;versioning)", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.getkey()", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.createmetadata(artifact;versioning)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.updaterepositorymetadata(artifactrepository;artifactrepository)", "org.apache.maven.artifact.repository.artifactrepositorypolicy.setchecksumpolicy(string)", "org.apache.maven.artifact.repository.layout.legacyrepositorylayout.pathofrepositorymetadata(artifactmetadata;string)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.abstractrepositorymetadata(metadata)", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.pathoflocalrepositorymetadata(artifactmetadata;artifactrepository)", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.defaultrepositorylayout()", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.tostring()", "org.apache.maven.artifact.repository.artifactrepositorypolicy.artifactrepositorypolicy(boolean;string;string)", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.issnapshot()", "org.apache.maven.artifact.repository.metadata.metadata.setversioning(versioning)", "org.apache.maven.artifact.repository.metadata.metadata.getplugins()", "org.apache.maven.artifact.repository.metadata.metadata.setartifactid(string)", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.artifactrepositorymetadata(artifact)", "org.apache.maven.artifact.repository.defaultartifactrepository.pathoflocalrepositorymetadata(artifactmetadata;artifactrepository)", "org.apache.maven.artifact.repository.metadata.versioning.getversions()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.issnapshot()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.gettrimmedvalue(string)", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.defaultrepositorymetadatamanager()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.parseversioning(string;xmlpullparser;boolean)", "org.apache.maven.artifact.repository.metadata.versioning.getrelease()", "org.apache.maven.artifact.repository.layout.legacyrepositorylayout.pathof(artifact)", "org.apache.maven.artifact.repository.defaultartifactrepository.isblacklisted()", "org.apache.maven.artifact.repository.defaultartifactrepository.pathof(artifact)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3writer.metadataxpp3writer()", "org.apache.maven.artifact.repository.metadata.snapshot.islocalcopy()", "org.apache.maven.artifact.repository.metadata.snapshot.snapshot()", "org.apache.maven.artifact.repository.metadata.versioning.updatetimestamp()", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.pathof(artifact)", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.updatesnapshotmetadata(repositorymetadata;map;artifactrepository;artifactrepository)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3writer.writeversioning(versioning;string;xmlserializer)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.getlocalfilename(artifactrepository)", "org.apache.maven.artifact.repository.metadata.metadata.getmodelencoding()", "org.apache.maven.artifact.repository.metadata.versioning.getsnapshot()", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.resolve(repositorymetadata;list;artifactrepository)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.storeinlocalrepository(artifactrepository;artifactrepository)", "org.apache.maven.artifact.repository.metadata.metadata.getartifactid()", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.snapshotartifactrepositorymetadata(artifact)", "org.apache.maven.artifact.repository.metadata.abstractrepositorymetadata.setmetadata(metadata)", "org.apache.maven.artifact.repository.layout.legacyrepositorylayout.legacyrepositorylayout()", "org.apache.maven.artifact.repository.metadata.metadata.getversion()", "org.apache.maven.artifact.repository.artifactrepositorypolicy.checkoutofdate(date)", "org.apache.maven.artifact.repository.defaultartifactrepository.defaultartifactrepository(string;string;artifactrepositorylayout)", "org.apache.maven.artifact.repository.metadata.snapshotartifactrepositorymetadata.storedingroupdirectory()", "org.apache.maven.artifact.repository.defaultartifactrepository.getlayout()", "org.apache.maven.artifact.repository.defaultartifactrepository.setblacklisted(boolean)", "org.apache.maven.artifact.repository.defaultartifactrepositoryfactory.defaultartifactrepositoryfactory()", "org.apache.maven.artifact.repository.metadata.metadata.getgroupid()", "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.loadmetadata(repositorymetadata;artifactrepository;artifactrepository;map)", "org.apache.maven.artifact.repository.defaultartifactrepository.getreleases()", "org.apache.maven.artifact.repository.metadata.artifactrepositorymetadata.getartifactid()", "org.apache.maven.artifact.repository.artifactrepositorypolicy.getchecksumpolicy()"]}, "mavenproject": {"distance": 0.9935, "methods": ["org.apache.maven.project.mavenproject.getparent()", "org.apache.maven.project.mavenproject.getdependencies()", "org.apache.maven.project.mavenproject.setfile(file)", "org.apache.maven.project.mavenproject.getprojectreferences()", "org.apache.maven.project.mavenproject.getbuild()", "org.apache.maven.project.mavenproject.getbuildextensions()", "org.apache.maven.project.mavenproject.setmodel(model)", "org.apache.maven.project.mavenproject.mavenproject(model)", "org.apache.maven.project.mavenproject.getartifactmap()", "org.apache.maven.project.mavenproject.getartifacts()", "org.apache.maven.project.mavenproject.setartifacts(set)", "org.apache.maven.project.mavenproject.getversion()", "org.apache.maven.project.mavenproject.getbuildplugins()", "org.apache.maven.project.mavenproject.getproperties()", "org.apache.maven.project.mavenproject.createartifacts(artifactfactory;string;artifactfilter)", "org.apache.maven.project.mavenproject.getreportplugins()", "org.apache.maven.project.mavenproject.getartifactid()", "org.apache.maven.project.mavenproject.getgroupid()", "org.apache.maven.project.mavenproject.replacewithactiveartifact(artifact)", "org.apache.maven.project.mavenproject.getmodelbuild()", "org.apache.maven.project.mavenproject.getfile()", "org.apache.maven.project.mavenproject.getmodel()"]}, "mojoexecution": {"distance": 0.8889, "methods": ["org.apache.maven.plugin.mojoexecution.getmojodescriptor()", "org.apache.maven.plugin.mojoexecution.mojoexecution(mojodescriptor)"]}, "defaultartifactinstaller": {"distance": 1.0, "methods": ["org.apache.maven.artifact.installer.defaultartifactinstaller.install(file;artifact;artifactrepository)", "org.apache.maven.artifact.installer.defaultartifactinstaller.defaultartifactinstaller()"]}, "reactormanager": {"distance": 0.9524, "methods": ["org.apache.maven.execution.reactormanager.reactormanager(list;string)"]}, "defaultmavenprojectbuilder": {"distance": 0.9722, "methods": ["org.apache.maven.project.defaultmavenprojectbuilder.defaultmavenprojectbuilder()"]}, "execution": {"distance": 0.8571, "methods": ["org.apache.maven.execution.mavensession.mavensession(plexuscontainer;mavenexecutionrequest;eventdispatcher;reactormanager)", "org.apache.maven.execution.defaultmavenexecutionrequest.setgoals(list)", "org.apache.maven.execution.mavensession.getlocalrepository()", "org.apache.maven.execution.defaultmavenexecutionrequest.setlocalrepository(artifactrepository)", "org.apache.maven.execution.defaultmavenexecutionrequest.setbasedirectory(file)", "org.apache.maven.execution.mavensession.getcurrentproject()", "org.apache.maven.execution.mavensession.getexecutionrootdirectory()", "org.apache.maven.execution.reactormanager$projectsorter.reactormanager$projectsorter(list)", "org.apache.maven.execution.reactormanager.reactormanager(list;string)", "org.apache.maven.execution.defaultmavenrealmmanagertest.setup()", "org.apache.maven.execution.defaultmavenexecutionrequest.defaultmavenexecutionrequest()", "org.apache.maven.execution.defaultmavenexecutionrequest.getlocalrepository()", "org.apache.maven.execution.defaultmavenexecutionrequest.setstarttime(date)", "org.apache.maven.execution.defaultmavenrealmmanagertest.defaultmavenrealmmanagertest()", "org.apache.maven.execution.defaultmavenexecutionrequest.setproperties(properties)"]}, "defaultartifactresolver": {"distance": 1.0556, "methods": ["org.apache.maven.artifact.resolver.defaultartifactresolver.getmirroredrepositories(list)", "org.apache.maven.artifact.resolver.defaultartifactresolver.resolvetransitively(set;artifact;map;artifactrepository;list;artifactmetadatasource;artifactfilter)", "org.apache.maven.artifact.resolver.defaultartifactresolver.resolve(artifact;list;artifactrepository;boolean)", "org.apache.maven.artifact.resolver.defaultartifactresolver.defaultartifactresolver()", "org.apache.maven.artifact.resolver.defaultartifactresolver.resolvetransitively(set;artifact;artifactrepository;list;artifactmetadatasource;artifactfilter)", "org.apache.maven.artifact.resolver.defaultartifactresolver.resolve(artifact;list;artifactrepository)", "org.apache.maven.artifact.resolver.defaultartifactresolver.resolvetransitively(set;artifact;list;artifactrepository;artifactmetadatasource)", "org.apache.maven.artifact.resolver.defaultartifactresolver.resolvetransitively(set;artifact;map;artifactrepository;list;artifactmetadatasource;artifactfilter;list;list)", "org.apache.maven.artifact.resolver.defaultartifactresolver.islocalcopy(artifact)", "org.apache.maven.artifact.resolver.defaultartifactresolver.resolvealways(artifact;list;artifactrepository)", "org.apache.maven.artifact.resolver.defaultartifactresolver.resolvetransitively(set;artifact;map;artifactrepository;list;artifactmetadatasource;artifactfilter;list)"]}, "defaultwagonmanager": {"distance": 0.9899, "methods": ["org.apache.maven.artifact.manager.defaultwagonmanager.contextualize(context)", "org.apache.maven.artifact.manager.defaultwagonmanager.getremotefile(artifactrepository;file;string;transferlistener;string;boolean)", "org.apache.maven.artifact.manager.defaultwagonmanager.addchecksumobserver(wagon;string)", "org.apache.maven.artifact.manager.defaultwagonmanager.isexternalrepo(artifactrepository)", "org.apache.maven.artifact.manager.defaultwagonmanager.getartifactmetadata(artifactmetadata;artifactrepository;file;string)", "org.apache.maven.artifact.manager.defaultwagonmanager.getwagon(string)", "org.apache.maven.artifact.manager.defaultwagonmanager.getartifact(artifact;list;boolean)", "org.apache.maven.artifact.manager.defaultwagonmanager.verifychecksum(checksumobserver;file;file;string;string;wagon)", "org.apache.maven.artifact.manager.defaultwagonmanager.isonline()", "org.apache.maven.artifact.manager.defaultwagonmanager.addmirror(string;string;string)", "org.apache.maven.artifact.manager.defaultwagonmanager.getwagon(repository)", "org.apache.maven.artifact.manager.defaultwagonmanager.getartifact(artifact;artifactrepository)", "org.apache.maven.artifact.manager.defaultwagonmanager.matchpattern(artifactrepository;string)", "org.apache.maven.artifact.manager.defaultwagonmanager.getmirrorrepository(artifactrepository)", "org.apache.maven.artifact.manager.defaultwagonmanager.addconfiguration(string;xpp3dom)", "org.apache.maven.artifact.manager.defaultwagonmanager.putremotefile(artifactrepository;file;string;transferlistener)", "org.apache.maven.artifact.manager.defaultwagonmanager.configurewagon(wagon;artifactrepository)", "org.apache.maven.artifact.manager.defaultwagonmanager.failifnotonline()", "org.apache.maven.artifact.manager.defaultwagonmanager.configurewagon(wagon;string;string)", "org.apache.maven.artifact.manager.defaultwagonmanager.setupdatecheckmanager(updatecheckmanager)", "org.apache.maven.artifact.manager.defaultwagonmanager.getartifact(artifact;artifactrepository;boolean)", "org.apache.maven.artifact.manager.defaultwagonmanager.defaultwagonmanager()", "org.apache.maven.artifact.manager.defaultwagonmanager.setdownloadmonitor(transferlistener)", "org.apache.maven.artifact.manager.defaultwagonmanager.releasewagon(string;wagon)", "org.apache.maven.artifact.manager.defaultwagonmanager.handlechecksumfailure(string;string;throwable)", "org.apache.maven.artifact.manager.defaultwagonmanager.setonline(boolean)", "org.apache.maven.artifact.manager.defaultwagonmanager.getmirror(artifactrepository)", "org.apache.maven.artifact.manager.defaultwagonmanager.disconnectwagon(wagon)", "org.apache.maven.artifact.manager.defaultwagonmanager.putartifact(file;artifact;artifactrepository)", "org.apache.maven.artifact.manager.defaultwagonmanager.getauthenticationinfo(string)"]}, "resolutionnode": {"distance": 0.9018, "methods": ["org.apache.maven.artifact.resolver.resolutionnode.filtertrail(artifactfilter)", "org.apache.maven.artifact.resolver.resolutionnode.getchildreniterator()", "org.apache.maven.artifact.resolver.resolutionnode.adddependencies(set;list;artifactfilter)", "org.apache.maven.artifact.resolver.resolutionnode.getdependencytrail()", "org.apache.maven.artifact.resolver.resolutionnode.resolutionnode(artifact;list;resolutionnode)", "org.apache.maven.artifact.resolver.resolutionnode.getkey()", "org.apache.maven.artifact.resolver.resolutionnode.getdepth()", "org.apache.maven.artifact.resolver.resolutionnode.isactive()", "org.apache.maven.artifact.resolver.resolutionnode.ischildofrootnode()", "org.apache.maven.artifact.resolver.resolutionnode.getremoterepositories()", "org.apache.maven.artifact.resolver.resolutionnode.isresolved()", "org.apache.maven.artifact.resolver.resolutionnode.gettrail()", "org.apache.maven.artifact.resolver.resolutionnode.disable()", "org.apache.maven.artifact.resolver.resolutionnode.resolutionnode(artifact;list)", "org.apache.maven.artifact.resolver.resolutionnode.getartifact()"]}, "plugincontainer": {"distance": 0.8095, "methods": ["org.apache.maven.model.plugincontainer.plugincontainer()"]}, "plugin": {"distance": 0.8571, "methods": ["org.apache.maven.plugin.pluginparameterexpressionevaluator.pluginparameterexpressionevaluator(mavensession;mojoexecution;pathtranslator;logger;mavenproject;properties)", "org.apache.maven.plugin.pluginparameterexpressionevaluator.<clinit>()", "org.apache.maven.plugin.descriptor.mojodescriptor.getplugindescriptor()", "org.apache.maven.plugin.descriptor.mojodescriptor.mojodescriptor()", "org.apache.maven.plugin.pluginparameterexpressionevaluator.striptokens(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.getartifactid()", "org.apache.maven.plugin.descriptor.plugindescriptor.setartifactid(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.setgoal(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.setgroupid(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.getartifacts()", "org.apache.maven.plugin.pluginparameterexpressionevaluator.pluginparameterexpressionevaluator(mavensession;mojoexecution;pathtranslator;logger;properties)", "org.apache.maven.plugin.descriptor.plugindescriptor.getartifactmap()", "org.apache.maven.plugin.mojoexecution.getmojodescriptor()", "org.apache.maven.plugin.descriptor.plugindescriptor.setartifacts(list)", "org.apache.maven.plugin.descriptor.plugindescriptor.plugindescriptor()", "org.apache.maven.plugin.descriptor.mojodescriptor.setplugindescriptor(plugindescriptor)", "org.apache.maven.plugin.descriptor.plugindescriptor.setversion(string)", "org.apache.maven.plugin.pluginparameterexpressionevaluator.evaluate(string)", "org.apache.maven.plugin.mojoexecution.mojoexecution(mojodescriptor)"]}, "defaultartifactrepositoryfactory": {"distance": 0.8571, "methods": ["org.apache.maven.artifact.repository.defaultartifactrepositoryfactory.createartifactrepository(string;string;artifactrepositorylayout;artifactrepositorypolicy;artifactrepositorypolicy)", "org.apache.maven.artifact.repository.defaultartifactrepositoryfactory.defaultartifactrepositoryfactory()"]}, "defaultrepositorylayout": {"distance": 1.5, "methods": ["org.apache.maven.artifact.repository.layout.defaultrepositorylayout.formatasdirectory(string)", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.pathofremoterepositorymetadata(artifactmetadata)", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.pathofrepositorymetadata(artifactmetadata;string)", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.pathoflocalrepositorymetadata(artifactmetadata;artifactrepository)", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.defaultrepositorylayout()", "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.pathof(artifact)"]}, "defaultartifactfactory": {"distance": 1.0909, "methods": ["org.apache.maven.artifact.factory.defaultartifactfactory.createdependencyartifact(string;string;versionrange;string;string;string;string;boolean)", "org.apache.maven.artifact.factory.defaultartifactfactory.createartifact(string;string;string;string;string;string;string)", "org.apache.maven.artifact.factory.defaultartifactfactory.createprojectartifact(string;string;string)", "org.apache.maven.artifact.factory.defaultartifactfactory.createdependencyartifact(string;string;versionrange;string;string;string;string)", "org.apache.maven.artifact.factory.defaultartifactfactory.createprojectartifact(string;string;string;string)", "org.apache.maven.artifact.factory.defaultartifactfactory.createdependencyartifact(string;string;versionrange;string;string;string)", "org.apache.maven.artifact.factory.defaultartifactfactory.createbuildartifact(string;string;string;string)", "org.apache.maven.artifact.factory.defaultartifactfactory.createartifact(string;string;string;string;string)", "org.apache.maven.artifact.factory.defaultartifactfactory.createartifactwithclassifier(string;string;string;string;string)", "org.apache.maven.artifact.factory.defaultartifactfactory.defaultartifactfactory()", "org.apache.maven.artifact.factory.defaultartifactfactory.createartifact(string;string;versionrange;string;string;string;string;boolean)", "org.apache.maven.artifact.factory.defaultartifactfactory.createartifact(string;string;versionrange;string;string;string;string)"]}, "abstractversiontransformation": {"distance": 1.5, "methods": ["org.apache.maven.artifact.transform.abstractversiontransformation.resolveversion(artifact;artifactrepository;list)", "org.apache.maven.artifact.transform.abstractversiontransformation.abstractversiontransformation()"]}, "defaultpathtranslator": {"distance": 1.3333, "methods": ["org.apache.maven.project.path.defaultpathtranslator.defaultpathtranslator()"]}, "mavensession": {"distance": 0.9091, "methods": ["org.apache.maven.execution.mavensession.mavensession(plexuscontainer;mavenexecutionrequest;eventdispatcher;reactormanager)", "org.apache.maven.execution.mavensession.getlocalrepository()", "org.apache.maven.execution.mavensession.getcurrentproject()", "org.apache.maven.execution.mavensession.getexecutionrootdirectory()"]}, "dependency": {"distance": 0.9217, "methods": ["org.apache.maven.model.dependency.settype(string)", "org.apache.maven.model.dependency.setartifactid(string)", "org.apache.maven.model.dependency.setscope(string)", "org.apache.maven.model.dependency.getclassifier()", "org.apache.maven.model.dependency.getexclusions()", "org.apache.maven.model.dependency.addexclusion(exclusion)", "org.apache.maven.model.dependency.getscope()", "org.apache.maven.model.dependency.setexclusions(list)", "org.apache.maven.model.dependency.getgroupid()", "org.apache.maven.model.dependency.getmanagementkey()", "org.apache.maven.model.dependency.getsystempath()", "org.apache.maven.model.dependency.setversion(string)", "org.apache.maven.model.dependency.getversion()", "org.apache.maven.model.dependency.dependency()", "org.apache.maven.model.dependency.getartifactid()", "org.apache.maven.model.dependency.setsystempath(string)", "org.apache.maven.model.dependency.isoptional()", "org.apache.maven.model.dependency.gettype()", "org.apache.maven.model.dependency.setgroupid(string)"]}, "defaultprofileadvisor": {"distance": 1.1, "methods": ["org.apache.maven.profiles.build.defaultprofileadvisor.defaultprofileadvisor()"]}, "snapshot": {"distance": 0.8571, "methods": ["org.apache.maven.artifact.repository.metadata.snapshot.setlocalcopy(boolean)", "org.apache.maven.artifact.repository.metadata.snapshot.islocalcopy()", "org.apache.maven.artifact.repository.metadata.snapshot.snapshot()"]}, "metadataxpp3reader": {"distance": 0.8889, "methods": ["org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.read(reader;boolean)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.parsemetadata(string;xmlpullparser;boolean)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.metadataxpp3reader()", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.gettrimmedvalue(string)", "org.apache.maven.artifact.repository.metadata.io.xpp3.metadataxpp3reader.parseversioning(string;xmlpullparser;boolean)"]}, "modelbase": {"distance": 0.9643, "methods": ["org.apache.maven.model.modelbase.modelbase()", "org.apache.maven.model.modelbase.setproperties(properties)", "org.apache.maven.model.modelbase.setdependencymanagement(dependencymanagement)", "org.apache.maven.model.modelbase.adddependency(dependency)", "org.apache.maven.model.modelbase.getreporting()", "org.apache.maven.model.modelbase.getproperties()", "org.apache.maven.model.modelbase.getdependencies()", "org.apache.maven.model.modelbase.getdependencymanagement()"]}, "model": {"distance": 0.9815, "methods": ["org.apache.maven.model.modelbase.modelbase()", "org.apache.maven.model.exclusion.getartifactid()", "org.apache.maven.model.buildbase.getfinalname()", "org.apache.maven.model.model.getversion()", "org.apache.maven.model.dependencymanagement.dependencymanagement()", "org.apache.maven.model.dependency.settype(string)", "org.apache.maven.model.model.getparent()", "org.apache.maven.model.model.setgroupid(string)", "org.apache.maven.model.dependency.setartifactid(string)", "org.apache.maven.model.dependency.setscope(string)", "org.apache.maven.model.dependency.getclassifier()", "org.apache.maven.model.buildbase.setdirectory(string)", "org.apache.maven.model.modelbase.setproperties(properties)", "org.apache.maven.model.dependency.getexclusions()", "org.apache.maven.model.dependency.addexclusion(exclusion)", "org.apache.maven.model.modelbase.setdependencymanagement(dependencymanagement)", "org.apache.maven.model.dependency.getscope()", "org.apache.maven.model.dependency.setexclusions(list)", "org.apache.maven.model.model.setversion(string)", "org.apache.maven.model.exclusion.setgroupid(string)", "org.apache.maven.model.exclusion.getgroupid()", "org.apache.maven.model.dependency.getgroupid()", "org.apache.maven.model.pluginconfiguration.pluginconfiguration()", "org.apache.maven.model.dependency.getmanagementkey()", "org.apache.maven.model.model.model()", "org.apache.maven.model.modelbase.adddependency(dependency)", "org.apache.maven.model.dependencymanagement.getdependencies()", "org.apache.maven.model.dependency.getsystempath()", "org.apache.maven.model.dependencymanagement.adddependency(dependency)", "org.apache.maven.model.dependency.setversion(string)", "org.apache.maven.model.buildbase.getdirectory()", "org.apache.maven.model.dependency.getversion()", "org.apache.maven.model.modelbase.getreporting()", "org.apache.maven.model.modelbase.getproperties()", "org.apache.maven.model.plugincontainer.plugincontainer()", "org.apache.maven.model.model.setbuild(build)", "org.apache.maven.model.build.getextensions()", "org.apache.maven.model.buildbase.setfinalname(string)", "org.apache.maven.model.model.getgroupid()", "org.apache.maven.model.modelbase.getdependencies()", "org.apache.maven.model.dependency.dependency()", "org.apache.maven.model.model.getartifactid()", "org.apache.maven.model.dependency.getartifactid()", "org.apache.maven.model.dependency.setsystempath(string)", "org.apache.maven.model.exclusion.setartifactid(string)", "org.apache.maven.model.model.setartifactid(string)", "org.apache.maven.model.modelbase.getdependencymanagement()", "org.apache.maven.model.buildbase.buildbase()", "org.apache.maven.model.build.build()", "org.apache.maven.model.model.getbuild()", "org.apache.maven.model.dependency.isoptional()", "org.apache.maven.model.exclusion.exclusion()", "org.apache.maven.model.dependency.gettype()", "org.apache.maven.model.dependency.setgroupid(string)"]}, "versioning": {"distance": 0.9333, "methods": ["org.apache.maven.artifact.versioning.versionrange.getselectedversion(artifact)", "org.apache.maven.artifact.versioning.versionrange.tostring()", "org.apache.maven.artifact.versioning.comparableversion$integeritem.comparableversion$integeritem()", "org.apache.maven.artifact.versioning.comparableversion$integeritem.isnull()", "org.apache.maven.artifact.repository.metadata.versioning.setversions(list)", "org.apache.maven.artifact.versioning.overconstrainedversionexception.overconstrainedversionexception(string;artifact;list)", "org.apache.maven.artifact.versioning.comparableversion$integeritem.compareto(item)", "org.apache.maven.artifact.repository.metadata.versioning.versioning()", "org.apache.maven.artifact.versioning.defaultartifactversion.compareto(object)", "org.apache.maven.artifact.versioning.comparableversion$listitem.tostring()", "org.apache.maven.artifact.versioning.versionrange.parserestriction(string)", "org.apache.maven.artifact.versioning.versionrange.restrict(versionrange)", "org.apache.maven.artifact.repository.metadata.versioning.getlatest()", "org.apache.maven.artifact.versioning.managedversionmap.managedversionmap(map)", "org.apache.maven.artifact.repository.metadata.versioning.addversion(string)", "org.apache.maven.artifact.versioning.comparableversion$stringitem.compareto(item)", "org.apache.maven.artifact.versioning.restriction.getupperbound()", "org.apache.maven.artifact.versioning.comparableversion.parseitem(boolean;string)", "org.apache.maven.artifact.versioning.comparableversion$listitem.comparableversion$listitem(1)", "org.apache.maven.artifact.repository.metadata.versioning.setlastupdated(string)", "org.apache.maven.artifact.versioning.restriction.isupperboundinclusive()", "org.apache.maven.artifact.versioning.comparableversion$integeritem.<clinit>()", "org.apache.maven.artifact.versioning.comparableversion$stringitem.comparablequalifier(string)", "org.apache.maven.artifact.versioning.versionrange.createfromversionspec(string)", "org.apache.maven.artifact.versioning.versionrange.getrecommendedversion()", "org.apache.maven.artifact.repository.metadata.versioning.setsnapshot(snapshot)", "org.apache.maven.artifact.versioning.restriction.islowerboundinclusive()", "org.apache.maven.artifact.versioning.defaultartifactversion.defaultartifactversion(string)", "org.apache.maven.artifact.versioning.comparableversion.comparableversion(string)", "org.apache.maven.artifact.versioning.comparableversion$listitem.normalize()", "org.apache.maven.artifact.versioning.comparableversion.parseversion(string)", "org.apache.maven.artifact.versioning.defaultartifactversion.parseversion(string)", "org.apache.maven.artifact.repository.metadata.versioning.getlastupdated()", "org.apache.maven.artifact.repository.metadata.versioning.setlastupdatedtimestamp(date)", "org.apache.maven.artifact.versioning.comparableversion$stringitem.tostring()", "org.apache.maven.artifact.versioning.comparableversion$stringitem.isnull()", "org.apache.maven.artifact.versioning.versionrange.createfromversion(string)", "org.apache.maven.artifact.versioning.versionrange.containsversion(artifactversion)", "org.apache.maven.artifact.versioning.versionrange.isselectedversionknown(artifact)", "org.apache.maven.artifact.versioning.restriction.<clinit>()", "org.apache.maven.artifact.versioning.comparableversion$listitem.comparableversion$listitem()", "org.apache.maven.artifact.versioning.restriction.tostring()", "org.apache.maven.artifact.versioning.versionrange.intersection(list;list)", "org.apache.maven.artifact.versioning.restriction.getlowerbound()", "org.apache.maven.artifact.repository.metadata.versioning.getversions()", "org.apache.maven.artifact.versioning.versionrange.matchversion(list)", "org.apache.maven.artifact.repository.metadata.versioning.getrelease()", "org.apache.maven.artifact.repository.metadata.versioning.updatetimestamp()", "org.apache.maven.artifact.repository.metadata.versioning.getsnapshot()", "org.apache.maven.artifact.versioning.comparableversion$integeritem.comparableversion$integeritem(string)", "org.apache.maven.artifact.versioning.comparableversion$listitem.gettype()", "org.apache.maven.artifact.versioning.restriction.containsversion(artifactversion)", "org.apache.maven.artifact.versioning.comparableversion.compareto(object)", "org.apache.maven.artifact.versioning.comparableversion$integeritem.gettype()", "org.apache.maven.artifact.versioning.versionrange.versionrange(artifactversion;list)", "org.apache.maven.artifact.versioning.comparableversion$stringitem.comparableversion$stringitem(string;boolean)", "org.apache.maven.artifact.versioning.restriction.restriction(artifactversion;boolean;artifactversion;boolean)", "org.apache.maven.artifact.versioning.comparableversion$integeritem.tostring()", "org.apache.maven.artifact.versioning.defaultartifactversion.tostring()", "org.apache.maven.artifact.versioning.comparableversion$listitem.compareto(item)", "org.apache.maven.artifact.versioning.defaultartifactversion.getnextintegertoken(stringtokenizer)", "org.apache.maven.artifact.versioning.comparableversion$stringitem.<clinit>()"]}}