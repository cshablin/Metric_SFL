{"defaultpluginprefixrequest": {"distance": 0.8889, "methods": ["org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setplugingroups(list)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.defaultpluginprefixrequest(string;mavensession)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setpom(model)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setrepositories(list)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setprefix(string)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setrepositorysession(repositorysystemsession)"]}, "dependencycontext": {"distance": 0.9107, "methods": ["org.apache.maven.lifecycle.internal.dependencycontext.dependencycontext(mavenproject;collection;collection)", "org.apache.maven.lifecycle.internal.dependencycontext.<clinit>()"]}, "buildlogitem$dependencylogentry": {"distance": 1.25, "methods": ["org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.getexecutionplanitem()", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.buildlogitem$dependencylogentry(buildlogitem;mavenproject;string)", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.buildlogitem$dependencylogentry(buildlogitem;mavenproject;executionplanitem;long;long;string)", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.getmessage()", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.tonodedescription(long)", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.tonodekey()", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.getelapsed()", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.tostring()"]}, "mavenexecutionplan": {"distance": 0.8889, "methods": ["org.apache.maven.lifecycle.mavenexecutionplan.mavenexecutionplan(list;defaultlifecycles)", "org.apache.maven.lifecycle.mavenexecutionplan.forceallcomplete()", "org.apache.maven.lifecycle.mavenexecutionplan.size()", "org.apache.maven.lifecycle.mavenexecutionplan.waituntilalldone()", "org.apache.maven.lifecycle.mavenexecutionplan.iterator()", "org.apache.maven.lifecycle.mavenexecutionplan.getexecutionplanitems()", "org.apache.maven.lifecycle.mavenexecutionplan.findlastinphase(string)", "org.apache.maven.lifecycle.mavenexecutionplan.getmojoexecutions()", "org.apache.maven.lifecycle.mavenexecutionplan.containsphase(string)", "org.apache.maven.lifecycle.mavenexecutionplan.getnonthreadsafeplugins()", "org.apache.maven.lifecycle.mavenexecutionplan.getdistinctphasesinorderofexecutionplanappearance(list)"]}, "lifecycletask": {"distance": 1.0, "methods": ["org.apache.maven.lifecycle.internal.lifecycletask.lifecycletask(string)"]}, "mojodescriptorcreator": {"distance": 1.2, "methods": ["org.apache.maven.lifecycle.internal.mojodescriptorcreator.findplugin(plugin;collection)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.findpluginforprefix(string;mavensession)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.convert(mojodescriptor)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.resolvepluginversion(plugin;mavensession;mavenproject)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.findplugin(string;string;collection)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.injectplugindeclarationfromproject(plugin;mavenproject)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.mojodescriptorcreator(pluginversionresolver;buildpluginmanager;pluginprefixresolver;lifecyclepluginresolver)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.getmojodescriptor(string;mavensession;mavenproject)"]}, "defaultlifecycletasksegmentcalculator": {"distance": 1.0, "methods": ["org.apache.maven.lifecycle.internal.defaultlifecycletasksegmentcalculator.calculatetasksegments(mavensession)", "org.apache.maven.lifecycle.internal.defaultlifecycletasksegmentcalculator.defaultlifecycletasksegmentcalculator()"]}, "defaultlifecycleexecutionplancalculator": {"distance": 1.0417, "methods": ["org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.setupmojoexecutions(mavensession;mavenproject;list)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.finalizemojoconfiguration(mojoexecution)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.calculatemojoexecutions(mavensession;mavenproject;list)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.calculateexecutionplan(mavensession;mavenproject;list)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.findplugin(string;string;collection)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.calculateforkedexecutions(mojoexecution;mavensession;mavenproject;collection)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.setupmojoexecution(mavensession;mavenproject;mojoexecution)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.getmojoconfiguration(mojodescriptor)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.populatemojoexecutionconfiguration(mavenproject;mojoexecution;boolean)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.defaultlifecycleexecutionplancalculator(buildpluginmanager;defaultlifecycles;mojodescriptorcreator;lifecyclepluginresolver;defaultschedules)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.calculateexecutionplan(mavensession;mavenproject;list;boolean)"]}, "defaultlifecycles": {"distance": 0.8889, "methods": ["org.apache.maven.lifecycle.defaultlifecycles.defaultlifecycles(map;logger)", "org.apache.maven.lifecycle.defaultlifecycles.get(string)", "org.apache.maven.lifecycle.defaultlifecycles.getphasetolifecyclemap()", "org.apache.maven.lifecycle.defaultlifecycles.getlifecycles()"]}, "buildercommon": {"distance": 1.0, "methods": ["org.apache.maven.lifecycle.internal.buildercommon.getkey(mavenproject)", "org.apache.maven.lifecycle.internal.buildercommon.buildercommon(lifecycledebuglogger;lifecycleexecutionplancalculator;logger)", "org.apache.maven.lifecycle.internal.buildercommon.attachtothread(mavenproject)", "org.apache.maven.lifecycle.internal.buildercommon.resolvebuildplan(mavensession;mavenproject;tasksegment;set)"]}, "projectsegment": {"distance": 1.0, "methods": ["org.apache.maven.lifecycle.internal.projectsegment.projectsegment(mavenproject;tasksegment;mavensession)", "org.apache.maven.lifecycle.internal.projectsegment.gettransitiveupstreamprojects()", "org.apache.maven.lifecycle.internal.projectsegment.getimmediateupstreamprojects()", "org.apache.maven.lifecycle.internal.projectsegment.getproject()", "org.apache.maven.lifecycle.internal.projectsegment.getsession()", "org.apache.maven.lifecycle.internal.projectsegment.gettasksegment()"]}, "mojodescriptor": {"distance": 0.9867, "methods": ["org.apache.maven.plugin.descriptor.mojodescriptor.setdependencyresolutionrequired(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.setexecutelifecycle(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.getmojoconfiguration()", "org.apache.maven.plugin.descriptor.mojodescriptor.getplugindescriptor()", "org.apache.maven.plugin.descriptor.mojodescriptor.getexecutelifecycle()", "org.apache.maven.plugin.descriptor.mojodescriptor.setlanguage(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.setinheritedbydefault(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.setdirectinvocationonly(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.getid()", "org.apache.maven.plugin.descriptor.mojodescriptor.setsince(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.getsince()", "org.apache.maven.plugin.descriptor.mojodescriptor.isforking()", "org.apache.maven.plugin.descriptor.mojodescriptor.setrequiresreports(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.equals(object)", "org.apache.maven.plugin.descriptor.mojodescriptor.getrolehint()", "org.apache.maven.plugin.descriptor.mojodescriptor.mojodescriptor()", "org.apache.maven.plugin.descriptor.mojodescriptor.isonlinerequired()", "org.apache.maven.plugin.descriptor.mojodescriptor.setexecutegoal(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.getlanguage()", "org.apache.maven.plugin.descriptor.mojodescriptor.getparameters()", "org.apache.maven.plugin.descriptor.mojodescriptor.setaggregator(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.getdependencycollectionrequired()", "org.apache.maven.plugin.descriptor.mojodescriptor.getdeprecated()", "org.apache.maven.plugin.descriptor.mojodescriptor.getdependencyresolutionrequired()", "org.apache.maven.plugin.descriptor.mojodescriptor.isaggregator()", "org.apache.maven.plugin.descriptor.mojodescriptor.setprojectrequired(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.setgoal(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.setdependencycollectionrequired(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.compareobjects(object;object)", "org.apache.maven.plugin.descriptor.mojodescriptor.setonlinerequired(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.setparameters(list)", "org.apache.maven.plugin.descriptor.mojodescriptor.setplugindescriptor(plugindescriptor)", "org.apache.maven.plugin.descriptor.mojodescriptor.isprojectrequired()", "org.apache.maven.plugin.descriptor.mojodescriptor.isdirectinvocationonly()", "org.apache.maven.plugin.descriptor.mojodescriptor.getphase()", "org.apache.maven.plugin.descriptor.mojodescriptor.isthreadsafe()", "org.apache.maven.plugin.descriptor.mojodescriptor.setexecutephase(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.getgoal()", "org.apache.maven.plugin.descriptor.mojodescriptor.isinheritedbydefault()", "org.apache.maven.plugin.descriptor.mojodescriptor.getexecutegoal()", "org.apache.maven.plugin.descriptor.mojodescriptor.setphase(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.setthreadsafe(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.setdeprecated(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.addparameter(parameter)", "org.apache.maven.plugin.descriptor.mojodescriptor.getexecutephase()", "org.apache.maven.plugin.descriptor.mojodescriptor.setmojoconfiguration(plexusconfiguration)"]}, "reactorbuildstatus": {"distance": 0.8333, "methods": ["org.apache.maven.lifecycle.internal.reactorbuildstatus.ishalted()", "org.apache.maven.lifecycle.internal.reactorbuildstatus.reactorbuildstatus(projectdependencygraph)", "org.apache.maven.lifecycle.internal.reactorbuildstatus.isblacklisted(mavenproject)", "org.apache.maven.lifecycle.internal.reactorbuildstatus.ishaltedorblacklisted(mavenproject)"]}, "defaultmavenexecutionrequest": {"distance": 0.9898, "methods": ["org.apache.maven.execution.defaultmavenexecutionrequest.getusersettingsfile()", "org.apache.maven.execution.defaultmavenexecutionrequest.getgoals()", "org.apache.maven.execution.defaultmavenexecutionrequest.getplugingroups()", "org.apache.maven.execution.defaultmavenexecutionrequest.defaultmavenexecutionrequest()", "org.apache.maven.execution.defaultmavenexecutionrequest.setgoals(list)", "org.apache.maven.execution.defaultmavenexecutionrequest.getthreadcount()", "org.apache.maven.execution.defaultmavenexecutionrequest.setexecutionlistener(executionlistener)", "org.apache.maven.execution.defaultmavenexecutionrequest.isthreadconfigurationpresent()"]}, "plugindescriptor": {"distance": 0.9698, "methods": ["org.apache.maven.plugin.descriptor.plugindescriptor.getgoalprefix()", "org.apache.maven.plugin.descriptor.plugindescriptor.equals(object)", "org.apache.maven.plugin.descriptor.plugindescriptor.getplugin()", "org.apache.maven.plugin.descriptor.plugindescriptor.getversion()", "org.apache.maven.plugin.descriptor.plugindescriptor.setdescription(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.getid()", "org.apache.maven.plugin.descriptor.plugindescriptor.setgoalprefix(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.setname(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.setversion(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.getdescription()", "org.apache.maven.plugin.descriptor.plugindescriptor.getmojos()", "org.apache.maven.plugin.descriptor.plugindescriptor.isinheritedbydefault()", "org.apache.maven.plugin.descriptor.plugindescriptor.getartifactid()", "org.apache.maven.plugin.descriptor.plugindescriptor.setartifactid(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.setsource(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.setplugin(plugin)", "org.apache.maven.plugin.descriptor.plugindescriptor.constructpluginkey(string;string;string)", "org.apache.maven.plugin.descriptor.plugindescriptor.addmojo(mojodescriptor)", "org.apache.maven.plugin.descriptor.plugindescriptor.setgroupid(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.getgroupid()", "org.apache.maven.plugin.descriptor.plugindescriptor.setinheritedbydefault(boolean)", "org.apache.maven.plugin.descriptor.plugindescriptor.plugindescriptor()"]}, "parameter": {"distance": 0.9599, "methods": ["org.apache.maven.plugin.descriptor.parameter.getimplementation()", "org.apache.maven.plugin.descriptor.parameter.iseditable()", "org.apache.maven.plugin.descriptor.parameter.settype(string)", "org.apache.maven.plugin.descriptor.parameter.parameter()", "org.apache.maven.plugin.descriptor.parameter.getdescription()", "org.apache.maven.plugin.descriptor.parameter.getexpression()", "org.apache.maven.plugin.descriptor.parameter.setname(string)", "org.apache.maven.plugin.descriptor.parameter.setalias(string)", "org.apache.maven.plugin.descriptor.parameter.getalias()", "org.apache.maven.plugin.descriptor.parameter.seteditable(boolean)", "org.apache.maven.plugin.descriptor.parameter.getname()", "org.apache.maven.plugin.descriptor.parameter.gettype()", "org.apache.maven.plugin.descriptor.parameter.setrequired(boolean)", "org.apache.maven.plugin.descriptor.parameter.setdescription(string)", "org.apache.maven.plugin.descriptor.parameter.setexpression(string)", "org.apache.maven.plugin.descriptor.parameter.getdeprecated()", "org.apache.maven.plugin.descriptor.parameter.isrequired()", "org.apache.maven.plugin.descriptor.parameter.setdeprecated(string)", "org.apache.maven.plugin.descriptor.parameter.setdefaultvalue(string)", "org.apache.maven.plugin.descriptor.parameter.getdefaultvalue()", "org.apache.maven.plugin.descriptor.parameter.setimplementation(string)"]}, "schedule": {"distance": 0.8333, "methods": ["org.apache.maven.lifecycle.schedule.schedule(string;boolean;boolean)", "org.apache.maven.lifecycle.schedule.getupstreamphase()", "org.apache.maven.lifecycle.schedule.appliesto(mojoexecution)", "org.apache.maven.lifecycle.schedule.isparallel()", "org.apache.maven.lifecycle.schedule.getphase()", "org.apache.maven.lifecycle.schedule.ismojosynchronized()", "org.apache.maven.lifecycle.schedule.hasupstreamphasedefined()"]}, "mavenproject": {"distance": 0.9928, "methods": ["org.apache.maven.project.mavenproject.getpluginmanagement()", "org.apache.maven.project.mavenproject.eq(object;object)", "org.apache.maven.project.mavenproject.setartifactid(string)", "org.apache.maven.project.mavenproject.setmodel(model)", "org.apache.maven.project.mavenproject.getremoteprojectrepositories()", "org.apache.maven.project.mavenproject.mavenproject()", "org.apache.maven.project.mavenproject.equals(object)", "org.apache.maven.project.mavenproject.getattachedartifacts()", "org.apache.maven.project.mavenproject.getartifactid()", "org.apache.maven.project.mavenproject.getversion()", "org.apache.maven.project.mavenproject.getartifact()", "org.apache.maven.project.mavenproject.getbuildplugins()", "org.apache.maven.project.mavenproject.haslifecyclephase(string)", "org.apache.maven.project.mavenproject.getremotepluginrepositories()", "org.apache.maven.project.mavenproject.hashcode()", "org.apache.maven.project.mavenproject.addlifecyclephase(string)", "org.apache.maven.project.mavenproject.getexecutionproject()", "org.apache.maven.project.mavenproject.isexecutionroot()", "org.apache.maven.project.mavenproject.getgroupid()", "org.apache.maven.project.mavenproject.getclassrealm()", "org.apache.maven.project.mavenproject.getname()", "org.apache.maven.project.mavenproject.getmodel()"]}, "defaultpluginversionrequest": {"distance": 0.8889, "methods": ["org.apache.maven.plugin.version.defaultpluginversionrequest.setrepositories(list)", "org.apache.maven.plugin.version.defaultpluginversionrequest.setgroupid(string)", "org.apache.maven.plugin.version.defaultpluginversionrequest.setrepositorysession(repositorysystemsession)", "org.apache.maven.plugin.version.defaultpluginversionrequest.setartifactid(string)", "org.apache.maven.plugin.version.defaultpluginversionrequest.defaultpluginversionrequest(plugin;repositorysystemsession;list)"]}, "trackablebase": {"distance": 1.125, "methods": ["org.apache.maven.settings.trackablebase.trackablebase()"]}, "mojoexecution": {"distance": 0.875, "methods": ["org.apache.maven.plugin.mojoexecution.getconfiguration()", "org.apache.maven.plugin.mojoexecution.getlifecyclephase()", "org.apache.maven.plugin.mojoexecution.getartifactid()", "org.apache.maven.plugin.mojoexecution.getexecutionid()", "org.apache.maven.plugin.mojoexecution.mojoexecution(mojodescriptor;string;source)", "org.apache.maven.plugin.mojoexecution.getplugin()", "org.apache.maven.plugin.mojoexecution.getgoal()", "org.apache.maven.plugin.mojoexecution.setlifecyclephase(string)", "org.apache.maven.plugin.mojoexecution.getsource()", "org.apache.maven.plugin.mojoexecution.setconfiguration(xpp3dom)", "org.apache.maven.plugin.mojoexecution.getmojodescriptor()", "org.apache.maven.plugin.mojoexecution.getforkedexecutions()", "org.apache.maven.plugin.mojoexecution.mojoexecution(plugin;string;string)", "org.apache.maven.plugin.mojoexecution.getversion()", "org.apache.maven.plugin.mojoexecution.getgroupid()", "org.apache.maven.plugin.mojoexecution.setmojodescriptor(mojodescriptor)", "org.apache.maven.plugin.mojoexecution.mojoexecution(mojodescriptor)"]}, "reactorcontext": {"distance": 1.0, "methods": ["org.apache.maven.lifecycle.internal.reactorcontext.reactorcontext(mavenexecutionresult;projectindex;classloader;reactorbuildstatus)", "org.apache.maven.lifecycle.internal.reactorcontext.getresult()", "org.apache.maven.lifecycle.internal.reactorcontext.getoriginalcontextclassloader()", "org.apache.maven.lifecycle.internal.reactorcontext.getreactorbuildstatus()", "org.apache.maven.lifecycle.internal.reactorcontext.getprojectindex()"]}, "modelbase": {"distance": 0.931, "methods": ["org.apache.maven.model.modelbase.modelbase()"]}, "lifecycle": {"distance": 0.8889, "methods": ["org.apache.maven.lifecycle.internal.phaserecorder.phaserecorder(mavenproject)", "org.apache.maven.lifecycle.schedule.schedule(string;boolean;boolean)", "org.apache.maven.lifecycle.internal.concurrentbuildlogger.concurrentbuildlogger()", "org.apache.maven.lifecycle.internal.stub.pluginversionresolverstub.pluginversionresolverstub()", "org.apache.maven.lifecycle.internal.lifecycledebuglogger.debugdependencyrequirements(list)", "org.apache.maven.lifecycle.internal.stub.mojoexecutorstub.execute(mavensession;mojoexecution;projectindex;dependencycontext;phaserecorder)", "org.apache.maven.lifecycle.scheduling.getschedule(string)", "org.apache.maven.lifecycle.internal.projectbuildlist.iterator()", "org.apache.maven.lifecycle.internal.projectsegment.projectsegment(mavenproject;tasksegment;mavensession)", "org.apache.maven.lifecycle.internal.tasksegment.tasksegment(boolean;object[])", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder$2.lifecycleweavebuilder$2(lifecycleweavebuilder;mavenexecutionplan;projectsegment;reactorbuildstatus;concurrentbuildlogger;reactorcontext;dependencycontext;mavensession)", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.getexecutionplanitem()", "org.apache.maven.lifecycle.defaultlifecycles.defaultlifecycles(map;logger)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.findplugin(plugin;collection)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.getupstreamreactordependencies(projectsegment)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder$1.call()", "org.apache.maven.lifecycle.internal.stub.projectdependencygraphstub.getsortedprojects()", "org.apache.maven.lifecycle.internal.concurrentbuildlogger.createbuildlogitem(mavenproject;executionplanitem)", "org.apache.maven.lifecycle.internal.stub.projectdependencygraphstub.getupstreamprojects(mavenproject;boolean)", "org.apache.maven.lifecycle.internal.projectsegment.gettransitiveupstreamprojects()", "org.apache.maven.lifecycle.internal.buildlogitem.getproject()", "org.apache.maven.lifecycle.internal.buildlogitem.buildlogitem(mavenproject;executionplanitem)", "org.apache.maven.plugin.lifecycle.lifecyclexpp3readertest.lifecyclexpp3readertest()", "org.apache.maven.lifecycle.internal.mojoexecutor.newdependencycontext(mavensession;list)", "org.apache.maven.lifecycle.internal.lifecyclepluginresolver.lifecyclepluginresolver(pluginversionresolver)", "org.apache.maven.lifecycle.internal.reactorcontext.reactorcontext(mavenexecutionresult;projectindex;classloader;reactorbuildstatus)", "org.apache.maven.lifecycle.schedule.getupstreamphase()", "org.apache.maven.lifecycle.internal.buildlistcalculator.buildlistcalculator()", "org.apache.maven.lifecycle.internal.executionplanitemtest.createexecutionplanitem(string;executionplanitem)", "org.apache.maven.lifecycle.internal.defaultlifecycletasksegmentcalculator.calculatetasksegments(mavensession)", "org.apache.maven.lifecycle.internal.projectbuildlist.getbytasksegment(tasksegment)", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.createexecutionplan(mavenproject;list)", "org.apache.maven.lifecycle.defaultlifecycles.get(string)", "org.apache.maven.lifecycle.internal.executionplanitem.isdone()", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.findpluginforprefix(string;mavensession)", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.buildlogitem$dependencylogentry(buildlogitem;mavenproject;string)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.buildexecutionplanitem(executionplanitem;phaserecorder;schedule;reactorcontext;projectsegment;dependencycontext)", "org.apache.maven.lifecycle.internal.phaserecorder.observeexecution(mojoexecution)", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.buildlogitem$dependencylogentry(buildlogitem;mavenproject;executionplanitem;long;long;string)", "org.apache.maven.lifecycle.internal.tasksegment.gettasks()", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder$1.lifecycleweavebuilder$1(lifecycleweavebuilder;projectsegment;set)", "org.apache.maven.lifecycle.internal.lifecycletask.lifecycletask(string)", "org.apache.maven.lifecycle.internal.stub.mojoexecutorstub.mojoexecutorstub()", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.setupmojoexecutions(mavensession;mavenproject;list)", "org.apache.maven.lifecycle.mavenexecutionplan.mavenexecutionplan(list;defaultlifecycles)", "org.apache.maven.lifecycle.internal.mojoexecutor.toscopes(string)", "org.apache.maven.lifecycle.internal.lifecyclepluginresolver.resolvemissingpluginversions(mavenproject;mavensession)", "org.apache.maven.lifecycle.internal.lifecycledebuglogger.debugprojectplan(mavenproject;mavenexecutionplan)", "org.apache.maven.lifecycle.mavenexecutionplan.forceallcomplete()", "org.apache.maven.lifecycle.internal.reactorbuildstatus.ishalted()", "org.apache.maven.lifecycle.scheduling.getlifecycle()", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.findtestscopedartifact(mavenproject)", "org.apache.maven.lifecycle.lifecycle.lifecycle(string;list;map)", "org.apache.maven.lifecycle.internal.buildlogitem.tograph(long)", "org.apache.maven.lifecycle.internal.stub.projectdependencygraphstub$dependency.addifupstreamof(mavenproject;list)", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.getprojectbexecutionplan()", "org.apache.maven.lifecycle.internal.mojoexecutor.collectdependencyrequirements(set;set;collection)", "org.apache.maven.lifecycle.internal.phaserecordertest.phaserecordertest()", "org.apache.maven.lifecycle.internal.stub.lifecycletasksegmentcalculatorstub.calculatetasksegments(mavensession;list)", "org.apache.maven.lifecycle.internal.stub.pluginversionresolverstub.resolve(pluginversionrequest)", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.<clinit>()", "org.apache.maven.lifecycle.schedule.appliesto(mojoexecution)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.access$100(lifecycleweavebuilder)", "org.apache.maven.lifecycle.internal.buildlistcalculator.calculateprojectbuilds(mavensession;list)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.access$300(lifecycleweavebuilder;executionplanitem;phaserecorder;schedule;reactorcontext;projectsegment;dependencycontext)", "org.apache.maven.lifecycle.internal.buildercommon.getkey(mavenproject)", "org.apache.maven.lifecycle.internal.lifecycleexecutionplancalculatortest.createmojodescriptorcreator()", "org.apache.maven.lifecycle.internal.reactorcontext.getresult()", "org.apache.maven.lifecycle.internal.stub.projectdependencygraphstub.getmavensession(mavenproject)", "org.apache.maven.lifecycle.internal.buildercommon.buildercommon(lifecycledebuglogger;lifecycleexecutionplancalculator;logger)", "org.apache.maven.lifecycle.mavenexecutionplan.size()", "org.apache.maven.lifecycle.internal.reactorbuildstatus.reactorbuildstatus(projectdependencygraph)", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.calculateexecutionplan(mavensession;mavenproject;list;boolean)", "org.apache.maven.lifecycle.internal.executionplanitem.executionplanitem(mojoexecution;schedule)", "org.apache.maven.lifecycle.internal.buildlogitem.tostring(long)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.access$000(lifecycleweavebuilder)", "org.apache.maven.lifecycle.mavenexecutionplan.waituntilalldone()", "org.apache.maven.lifecycle.internal.executionplanitem.getmojoexecution()", "org.apache.maven.lifecycle.internal.stub.pluginprefixresolverstub$1.getartifactid()", "org.apache.maven.lifecycle.internal.buildercommon.attachtothread(mavenproject)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.createepfuture(projectsegment;set)", "org.apache.maven.lifecycle.internal.currentphaseforthread.<clinit>()", "org.apache.maven.lifecycle.internal.lifecycledebuglogger.lifecycledebuglogger(logger)", "org.apache.maven.lifecycle.internal.currentphaseforthread.setphase(string)", "org.apache.maven.lifecycle.internal.dependencycontext.dependencycontext(mavenproject;collection;collection)", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.calculateexecutionplan(mavensession;mavenproject;list)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.finalizemojoconfiguration(mojoexecution)", "org.apache.maven.lifecycle.schedule.isparallel()", "org.apache.maven.lifecycle.internal.executionplanitem.getlifecyclephase()", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.calculatemojoexecutions(mavensession;mavenproject;list)", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.createmojoexecution(string;string;mojodescriptor)", "org.apache.maven.lifecycle.defaultlifecycles.getphasetolifecyclemap()", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder$2.call()", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.build(projectbuildlist;reactorcontext;list;mavensession;executorservice;reactorbuildstatus)", "org.apache.maven.lifecycle.schedule.getphase()", "org.apache.maven.lifecycle.internal.reactorbuildstatus.isblacklisted(mavenproject)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.calculateexecutionplan(mavensession;mavenproject;list)", "org.apache.maven.lifecycle.internal.lifecycleweavebuildertest.getbuildercommon()", "org.apache.maven.lifecycle.internal.reactorcontext.getoriginalcontextclassloader()", "org.apache.maven.lifecycle.internal.lifecycleweavebuildertest.createbuildcontext(mavensession)", "org.apache.maven.lifecycle.internal.defaultlifecycletasksegmentcalculator.defaultlifecycletasksegmentcalculator()", "org.apache.maven.lifecycle.internal.stub.executioneventcatapultstub.fire(type;mavensession;mojoexecution)", "org.apache.maven.lifecycle.internal.mojoexecutor.mojoexecutor()", "org.apache.maven.lifecycle.internal.stub.loggerstub.isdebugenabled()", "org.apache.maven.lifecycle.schedule.ismojosynchronized()", "org.apache.maven.lifecycle.internal.tasksegment.isaggregating()", "org.apache.maven.lifecycle.defaultschedules.defaultschedules(list)", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.createmojodescriptor(string;boolean)", "org.apache.maven.lifecycle.internal.executionplanitemtest.executionplanitemtest()", "org.apache.maven.lifecycle.internal.stub.defaultschedulesstub.createdefaultschedules()", "org.apache.maven.lifecycle.internal.stub.lifecycletasksegmentcalculatorstub.lifecycletasksegmentcalculatorstub()", "org.apache.maven.lifecycle.internal.stub.defaultlifecyclesstub.createdefaultlifecycles()", "org.apache.maven.lifecycle.internal.lifecycleweavebuildertest.gettasksegmentcalculator()", "org.apache.maven.lifecycle.mavenexecutionplan.iterator()", "org.apache.maven.lifecycle.internal.reactorbuildstatus.ishaltedorblacklisted(mavenproject)", "org.apache.maven.lifecycle.internal.buildlogitem.addwait(mavenproject;executionplanitem;long)", "org.apache.maven.lifecycle.scheduling.scheduling(string;list)", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.lifecycleexecutionplancalculatorstub()", "org.apache.maven.lifecycle.internal.executionplanitemtest.createexecutionplanitem(string;executionplanitem;schedule)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.lifecycleweavebuilder(mojoexecutor;buildercommon;logger;executioneventcatapult)", "org.apache.maven.lifecycle.internal.stub.loggerstub.debug(string)", "org.apache.maven.lifecycle.mavenexecutionplan.getexecutionplanitems()", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.findplugin(string;string;collection)", "org.apache.maven.lifecycle.internal.goaltask.goaltask(string)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.waitforappropriateupstreamexecutionstofinish(buildlogitem;executionplanitem;projectsegment;schedule)", "org.apache.maven.lifecycle.internal.stub.projectdependencygraphstub.getmavensession()", "org.apache.maven.lifecycle.internal.buildercommon.resolvebuildplan(mavensession;mavenproject;tasksegment;set)", "org.apache.maven.lifecycle.internal.buildlogitem.nodekey(mavenproject;executionplanitem)", "org.apache.maven.lifecycle.internal.reactorcontext.getreactorbuildstatus()", "org.apache.maven.lifecycle.defaultschedules.getscheduling(string)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.buildexecutionplanitem(reactorcontext;executionplanitem;projectsegment;dependencycontext;phaserecorder)", "org.apache.maven.lifecycle.internal.concurrentbuildloggertest.concurrentbuildloggertest()", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.calculateforkedexecutions(mojoexecution;mavensession;mavenproject;collection)", "org.apache.maven.lifecycle.internal.executionplanitemtest$1.run()", "org.apache.maven.lifecycle.internal.projectbuildlist.projectbuildlist(list)", "org.apache.maven.lifecycle.internal.stub.buildpluginmanagerstub.getmojodescriptor(plugin;string;list;repositorysystemsession)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.access$400(lifecycleweavebuilder;buildlogitem;executionplanitem;projectsegment;schedule)", "org.apache.maven.lifecycle.internal.buildlogitem.getmojoexecutiondescription(executionplanitem)", "org.apache.maven.lifecycle.internal.stub.executioneventcatapultstub.executioneventcatapultstub()", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.getmessage()", "org.apache.maven.lifecycle.internal.projectsegment.getimmediateupstreamprojects()", "org.apache.maven.lifecycle.internal.buildlogitem.getlifecyclephase(executionplanitem)", "org.apache.maven.lifecycle.internal.stub.pluginprefixresolverstub.pluginprefixresolverstub()", "org.apache.maven.lifecycle.internal.projectsegment.getproject()", "org.apache.maven.lifecycle.internal.buildercommontest.getbuildercommon()", "org.apache.maven.lifecycle.internal.stub.loggerstub.loggerstub()", "org.apache.maven.lifecycle.internal.stub.projectdependencygraphstub.getdependencies()", "org.apache.maven.lifecycle.scheduling.getschedule(mojoexecution)", "org.apache.maven.lifecycle.internal.executionplanitem.getschedule()", "org.apache.maven.lifecycle.internal.reactorcontext.getprojectindex()", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.createcallableforbuildingonefullmodule(reactorcontext;mavensession;reactorbuildstatus;mavenexecutionplan;projectsegment;dependencycontext;concurrentbuildlogger)", "org.apache.maven.lifecycle.internal.stub.mojoexecutorstub.createmojodescriptor(string)", "org.apache.maven.lifecycle.internal.lifecycleweavebuilder.access$200(lifecycleweavebuilder;projectsegment)", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.tonodedescription(long)", "org.apache.maven.lifecycle.defaultschedules.createexecutionplanitem(mavenproject;list)", "org.apache.maven.lifecycle.internal.stub.pluginprefixresolverstub$1.pluginprefixresolverstub$1(pluginprefixresolverstub)", "org.apache.maven.lifecycle.internal.lifecycleweavebuildertest.getweavebuilder(mojoexecutor)", "org.apache.maven.lifecycle.internal.stub.pluginprefixresolverstub.resolve(pluginprefixrequest)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.setupmojoexecution(mavensession;mavenproject;mojoexecution)", "org.apache.maven.lifecycle.lifecycle.getphases()", "org.apache.maven.lifecycle.internal.phaserecorder.isdifferentphase(mojoexecution)", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.tonodekey()", "org.apache.maven.lifecycle.internal.buildlogitem.access$100(executionplanitem)", "org.apache.maven.lifecycle.internal.stub.projectdependencygraphstub.projectdependencygraphstub()", "org.apache.maven.lifecycle.internal.stub.pluginversionresolverstub$1.getversion()", "org.apache.maven.lifecycle.mavenexecutionplan.findlastinphase(string)", "org.apache.maven.lifecycle.mavenexecutionplan.getmojoexecutions()", "org.apache.maven.lifecycle.internal.concurrentbuildlogger.tograph()", "org.apache.maven.lifecycle.internal.lifecycleweavebuildertest.lifecycleweavebuildertest()", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.getelapsed()", "org.apache.maven.lifecycle.internal.projectsegment.getsession()", "org.apache.maven.lifecycle.internal.stub.loggerstub.info(string)", "org.apache.maven.lifecycle.internal.stub.pluginversionresolverstub$1.pluginversionresolverstub$1(pluginversionresolverstub)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.convert(mojodescriptor)", "org.apache.maven.lifecycle.internal.lifecycledebuglogger.debugmojoexecution(mojoexecution)", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.getnumberofexceutions(projectbuildlist)", "org.apache.maven.lifecycle.internal.executionplanitem.waituntildone()", "org.apache.maven.lifecycle.internal.dependencycontext.<clinit>()", "org.apache.maven.lifecycle.internal.buildlogitem$dependencylogentry.tostring()", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.resolvepluginversion(plugin;mavensession;mavenproject)", "org.apache.maven.lifecycle.internal.lifecycleweavebuildertest.runwithcompletionservice(executorservice)", "org.apache.maven.lifecycle.internal.stub.pluginprefixresolverstub$1.getgroupid()", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.getprojectaexceutionplan()", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.getmojoconfiguration(mojodescriptor)", "org.apache.maven.lifecycle.internal.tasksegment.tasksegment(boolean)", "org.apache.maven.lifecycle.internal.projectsegment.gettasksegment()", "org.apache.maven.lifecycle.internal.executionplanitem.forcecomplete()", "org.apache.maven.lifecycle.internal.stub.projectdependencygraphstub.<clinit>()", "org.apache.maven.lifecycle.internal.executionplanitem.setcomplete()", "org.apache.maven.lifecycle.mavenexecutionplan.containsphase(string)", "org.apache.maven.lifecycle.internal.lifecycleexecutionplancalculatortest.createexecutionplacecalculator(mojodescriptorcreator)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.findplugin(string;string;collection)", "org.apache.maven.lifecycle.internal.buildlogitem.access$000(mavenproject;executionplanitem)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.populatemojoexecutionconfiguration(mavenproject;mojoexecution;boolean)", "org.apache.maven.lifecycle.internal.projectbuildlist.closeall()", "org.apache.maven.lifecycle.internal.stub.defaultschedulesstub.getschedulinglist()", "org.apache.maven.lifecycle.internal.stub.lifecycleexecutionplancalculatorstub.createmojodescriptor(string)", "org.apache.maven.lifecycle.internal.buildlogitem.setcomplete()", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.injectplugindeclarationfromproject(plugin;mavenproject)", "org.apache.maven.lifecycle.schedule.hasupstreamphasedefined()", "org.apache.maven.lifecycle.internal.executionplanitemtest$1.executionplanitemtest$1(executionplanitemtest;executionplanitem)", "org.apache.maven.lifecycle.mavenexecutionplan.getnonthreadsafeplugins()", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.defaultlifecycleexecutionplancalculator(buildpluginmanager;defaultlifecycles;mojodescriptorcreator;lifecyclepluginresolver;defaultschedules)", "org.apache.maven.lifecycle.lifecycle.tostring()", "org.apache.maven.lifecycle.internal.concurrentbuildlogger.tostring()", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.mojodescriptorcreator(pluginversionresolver;buildpluginmanager;pluginprefixresolver;lifecyclepluginresolver)", "org.apache.maven.lifecycle.internal.defaultlifecycleexecutionplancalculator.calculateexecutionplan(mavensession;mavenproject;list;boolean)", "org.apache.maven.lifecycle.internal.buildlogitem.adddependency(mavenproject;string)", "org.apache.maven.lifecycle.internal.stub.buildpluginmanagerstub.buildpluginmanagerstub()", "org.apache.maven.lifecycle.internal.stub.projectdependencygraphstub$dependency.projectdependencygraphstub$dependency(projectdependencygraphstub;mavenproject;mavenproject)", "org.apache.maven.lifecycle.defaultlifecycles.getlifecycles()", "org.apache.maven.lifecycle.mavenexecutionplan.getdistinctphasesinorderofexecutionplanappearance(list)", "org.apache.maven.lifecycle.internal.mojodescriptorcreator.getmojodescriptor(string;mavensession;mavenproject)"]}, "settings": {"distance": 0.9668, "methods": ["org.apache.maven.settings.trackablebase.trackablebase()", "org.apache.maven.settings.runtimeinfo.<clinit>()", "org.apache.maven.settings.runtimeinfo.runtimeinfo(file)", "org.apache.maven.settings.settings.settings()"]}, "pluginparameterexception": {"distance": 1.0, "methods": ["org.apache.maven.plugin.pluginparameterexception.builddiagnosticmessage()", "org.apache.maven.plugin.pluginparameterexception.getparameters()", "org.apache.maven.plugin.pluginparameterexception.getmojodescriptor()", "org.apache.maven.plugin.pluginparameterexception.format(list)", "org.apache.maven.plugin.pluginparameterexception.decomposeparameterintouserinstructions(mojodescriptor;parameter;stringbuilder)", "org.apache.maven.plugin.pluginparameterexception.pluginparameterexception(mojodescriptor;list)"]}, "plugin": {"distance": 0.9383, "methods": ["org.apache.maven.plugin.mojoexecution.getconfiguration()", "org.apache.maven.plugin.descriptor.mojodescriptor.setdependencyresolutionrequired(string)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setplugingroups(list)", "org.apache.maven.plugin.descriptor.mojodescriptor.setexecutelifecycle(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.getgoalprefix()", "org.apache.maven.plugin.descriptor.parameter.getimplementation()", "org.apache.maven.plugin.descriptor.mojodescriptor.getmojoconfiguration()", "org.apache.maven.plugin.mojoexecution.getlifecyclephase()", "org.apache.maven.plugin.descriptor.plugindescriptor.equals(object)", "org.apache.maven.plugin.mojoexecution.getartifactid()", "org.apache.maven.model.plugin.setversion(string)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.defaultpluginprefixrequest(string;mavensession)", "org.apache.maven.plugin.descriptor.mojodescriptor.getplugindescriptor()", "org.apache.maven.plugin.pluginparameterexception.builddiagnosticmessage()", "org.apache.maven.plugin.descriptor.mojodescriptor.getexecutelifecycle()", "org.apache.maven.plugin.lifecycle.lifecyclexpp3readertest.lifecyclexpp3readertest()", "org.apache.maven.plugin.descriptor.mojodescriptor.setlanguage(string)", "org.apache.maven.plugin.descriptor.parameter.iseditable()", "org.apache.maven.plugin.mojoexecution.getexecutionid()", "org.apache.maven.plugin.version.defaultpluginversionrequest.setrepositories(list)", "org.apache.maven.plugin.descriptor.parameter.settype(string)", "org.apache.maven.plugin.pluginparameterexception.getparameters()", "org.apache.maven.plugin.descriptor.mojodescriptor.setinheritedbydefault(boolean)", "org.apache.maven.plugin.descriptor.parameter.parameter()", "org.apache.maven.plugin.descriptor.mojodescriptor.setdirectinvocationonly(boolean)", "org.apache.maven.plugin.descriptor.parameter.getdescription()", "org.apache.maven.plugin.descriptor.mojodescriptor.getid()", "org.apache.maven.plugin.descriptor.mojodescriptor.setsince(string)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setpom(model)", "org.apache.maven.plugin.descriptor.mojodescriptor.getsince()", "org.apache.maven.plugin.pluginparameterexception.getmojodescriptor()", "org.apache.maven.plugin.descriptor.mojodescriptor.isforking()", "org.apache.maven.plugin.descriptor.plugindescriptor.getplugin()", "org.apache.maven.plugin.descriptor.mojodescriptor.setrequiresreports(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.equals(object)", "org.apache.maven.plugin.descriptor.plugindescriptor.getversion()", "org.apache.maven.plugin.descriptor.plugindescriptorbuildertest.plugindescriptorbuildertest()", "org.apache.maven.plugin.descriptor.mojodescriptor.getrolehint()", "org.apache.maven.plugin.descriptor.mojodescriptor.mojodescriptor()", "org.apache.maven.plugin.mojoexecution.mojoexecution(mojodescriptor;string;source)", "org.apache.maven.plugin.version.defaultpluginversionrequest.setgroupid(string)", "org.apache.maven.plugin.descriptor.plugindescriptorbuildertest.build(string)", "org.apache.maven.plugin.mojoexecution$source.mojoexecution$source(string;int)", "org.apache.maven.plugin.descriptor.mojodescriptor.isonlinerequired()", "org.apache.maven.plugin.descriptor.mojodescriptor.setexecutegoal(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.setdescription(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.getlanguage()", "org.apache.maven.model.plugin.setgroupid(string)", "org.apache.maven.plugin.descriptor.parameter.getexpression()", "org.apache.maven.plugin.descriptor.parameter.setname(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.getid()", "org.apache.maven.plugin.descriptor.mojodescriptor.getparameters()", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setrepositories(list)", "org.apache.maven.plugin.descriptor.plugindescriptorbuilder.build(reader)", "org.apache.maven.plugin.version.defaultpluginversionrequest.setrepositorysession(repositorysystemsession)", "org.apache.maven.plugin.descriptor.mojodescriptor.setaggregator(boolean)", "org.apache.maven.plugin.descriptor.plugindescriptor.setgoalprefix(string)", "org.apache.maven.plugin.pluginparameterexceptiontest.pluginparameterexceptiontest()", "org.apache.maven.plugin.descriptor.plugindescriptor.setname(string)", "org.apache.maven.plugin.mojoexecution.getplugin()", "org.apache.maven.plugin.descriptor.plugindescriptor.setversion(string)", "org.apache.maven.plugin.mojoexecution.getgoal()", "org.apache.maven.plugin.descriptor.mojodescriptor.getdependencycollectionrequired()", "org.apache.maven.plugin.descriptor.plugindescriptor.getdescription()", "org.apache.maven.model.plugin.constructkey(string;string)", "org.apache.maven.plugin.descriptor.parameter.setalias(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.getdeprecated()", "org.apache.maven.plugin.mojoexecution.setlifecyclephase(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.getmojos()", "org.apache.maven.plugin.descriptor.mojodescriptor.getdependencyresolutionrequired()", "org.apache.maven.plugin.descriptor.parameter.getalias()", "org.apache.maven.plugin.pluginparameterexception.format(list)", "org.apache.maven.plugin.descriptor.parameter.seteditable(boolean)", "org.apache.maven.plugin.descriptor.plugindescriptor.isinheritedbydefault()", "org.apache.maven.plugin.descriptor.plugindescriptor.getartifactid()", "org.apache.maven.plugin.descriptor.mojodescriptor.isaggregator()", "org.apache.maven.model.plugin.getgroupid()", "org.apache.maven.plugin.descriptor.mojodescriptor.setprojectrequired(boolean)", "org.apache.maven.plugin.descriptor.plugindescriptor.setartifactid(string)", "org.apache.maven.plugin.descriptor.parameter.getname()", "org.apache.maven.model.plugin.plugin()", "org.apache.maven.plugin.descriptor.parameter.gettype()", "org.apache.maven.plugin.descriptor.plugindescriptorbuilder.build(reader;string)", "org.apache.maven.plugin.descriptor.plugindescriptor.setsource(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.setplugin(plugin)", "org.apache.maven.plugin.mojoexecution.getsource()", "org.apache.maven.plugin.descriptor.mojodescriptor.setgoal(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.constructpluginkey(string;string;string)", "org.apache.maven.plugin.descriptor.plugindescriptor.addmojo(mojodescriptor)", "org.apache.maven.model.plugin.getartifactid()", "org.apache.maven.plugin.mojoexecution.setconfiguration(xpp3dom)", "org.apache.maven.plugin.descriptor.plugindescriptor.setgroupid(string)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setprefix(string)", "org.apache.maven.plugin.descriptor.parameter.setrequired(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.setdependencycollectionrequired(string)", "org.apache.maven.plugin.descriptor.parameter.setdescription(string)", "org.apache.maven.plugin.descriptor.parameter.setexpression(string)", "org.apache.maven.plugin.descriptor.plugindescriptorbuilder.buildcomponentdescriptor(plexusconfiguration;plugindescriptor)", "org.apache.maven.plugin.descriptor.parameter.getdeprecated()", "org.apache.maven.plugin.descriptor.mojodescriptor.compareobjects(object;object)", "org.apache.maven.plugin.descriptor.mojodescriptor.setonlinerequired(boolean)", "org.apache.maven.plugin.descriptor.mojodescriptor.setparameters(list)", "org.apache.maven.plugin.descriptor.plugindescriptor.getgroupid()", "org.apache.maven.model.plugin.getkey()", "org.apache.maven.plugin.descriptor.mojodescriptor.setplugindescriptor(plugindescriptor)", "org.apache.maven.plugin.prefix.defaultpluginprefixrequest.setrepositorysession(repositorysystemsession)", "org.apache.maven.plugin.descriptor.mojodescriptor.isprojectrequired()", "org.apache.maven.plugin.descriptor.mojodescriptor.isdirectinvocationonly()", "org.apache.maven.plugin.descriptor.plugindescriptor.setinheritedbydefault(boolean)", "org.apache.maven.plugin.pluginparameterexception.decomposeparameterintouserinstructions(mojodescriptor;parameter;stringbuilder)", "org.apache.maven.plugin.pluginparameterexception.pluginparameterexception(mojodescriptor;list)", "org.apache.maven.plugin.mojoexecution.getmojodescriptor()", "org.apache.maven.plugin.mojoexecution.getforkedexecutions()", "org.apache.maven.plugin.descriptor.mojodescriptor.getphase()", "org.apache.maven.plugin.mojoexecution.mojoexecution(plugin;string;string)", "org.apache.maven.model.plugin.setartifactid(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.isthreadsafe()", "org.apache.maven.plugin.mojoexecution.getversion()", "org.apache.maven.plugin.version.defaultpluginversionrequest.setartifactid(string)", "org.apache.maven.plugin.descriptor.parameter.isrequired()", "org.apache.maven.plugin.descriptor.mojodescriptor.setexecutephase(string)", "org.apache.maven.plugin.descriptor.plugindescriptor.plugindescriptor()", "org.apache.maven.plugin.descriptor.parameter.setdeprecated(string)", "org.apache.maven.plugin.descriptor.mojodescriptor.getgoal()", "org.apache.maven.plugin.descriptor.parameter.setdefaultvalue(string)", "org.apache.maven.plugin.mojoexecution$source.<clinit>()", "org.apache.maven.plugin.descriptor.mojodescriptor.isinheritedbydefault()", "org.apache.maven.plugin.descriptor.plugindescriptorbuilder.plugindescriptorbuilder()", "org.apache.maven.plugin.pluginconfigurationexception.pluginconfigurationexception(plugindescriptor;string)", "org.apache.maven.plugin.descriptor.mojodescriptor.getexecutegoal()", "org.apache.maven.plugin.descriptor.mojodescriptor.setphase(string)", "org.apache.maven.model.plugin.hashcode()", "org.apache.maven.plugin.descriptor.parameter.getdefaultvalue()", "org.apache.maven.plugin.descriptor.mojodescriptor.setthreadsafe(boolean)", "org.apache.maven.model.plugin.getversion()", "org.apache.maven.plugin.descriptor.mojodescriptor.setdeprecated(string)", "org.apache.maven.plugin.descriptor.plugindescriptorbuilder.buildconfiguration(reader)", "org.apache.maven.plugin.descriptor.parameter.setimplementation(string)", "org.apache.maven.plugin.mojoexecution.getgroupid()", "org.apache.maven.plugin.descriptor.mojodescriptor.addparameter(parameter)", "org.apache.maven.plugin.mojoexecution.setmojodescriptor(mojodescriptor)", "org.apache.maven.plugin.version.defaultpluginversionrequest.defaultpluginversionrequest(plugin;repositorysystemsession;list)", "org.apache.maven.plugin.descriptor.mojodescriptor.getexecutephase()", "org.apache.maven.plugin.mojoexecution.mojoexecution(mojodescriptor)", "org.apache.maven.plugin.descriptor.mojodescriptor.setmojoconfiguration(plexusconfiguration)"]}, "defaultmavenexecutionresult": {"distance": 0.9, "methods": ["org.apache.maven.execution.defaultmavenexecutionresult.addbuildsummary(buildsummary)", "org.apache.maven.execution.defaultmavenexecutionresult.defaultmavenexecutionresult()"]}, "mavensession": {"distance": 0.9461, "methods": ["org.apache.maven.execution.mavensession.getrequest()", "org.apache.maven.execution.mavensession.getgoals()", "org.apache.maven.execution.mavensession.clone()", "org.apache.maven.execution.mavensession.gettoplevelproject()", "org.apache.maven.execution.mavensession.getcurrentproject()", "org.apache.maven.execution.mavensession.getrepositorysession()", "org.apache.maven.execution.mavensession.mavensession(plexuscontainer;repositorysystemsession;mavenexecutionrequest;mavenexecutionresult)", "org.apache.maven.execution.mavensession.getprojectdependencygraph()", "org.apache.maven.execution.mavensession.setprojectdependencygraph(projectdependencygraph)", "org.apache.maven.execution.mavensession.setcurrentproject(mavenproject)", "org.apache.maven.execution.mavensession.setprojects(list)", "org.apache.maven.execution.mavensession.getprojects()", "org.apache.maven.execution.mavensession.getplugingroups()"]}, "buildsummary": {"distance": 1.0, "methods": ["org.apache.maven.execution.buildsummary.buildsummary(mavenproject;long)", "org.apache.maven.execution.buildsummary.getproject()"]}, "tasksegment": {"distance": 1.0, "methods": ["org.apache.maven.lifecycle.internal.tasksegment.tasksegment(boolean;object[])", "org.apache.maven.lifecycle.internal.tasksegment.gettasks()", "org.apache.maven.lifecycle.internal.tasksegment.isaggregating()", "org.apache.maven.lifecycle.internal.tasksegment.tasksegment(boolean)"]}, "model": {"distance": 0.9735, "methods": ["org.apache.maven.model.model.getbuild()", "org.apache.maven.model.model.getversion()", "org.apache.maven.model.plugin.setversion(string)", "org.apache.maven.model.model.setgroupid(string)", "org.apache.maven.model.model.setartifactid(string)", "org.apache.maven.model.plugin.setgroupid(string)", "org.apache.maven.model.model.setversion(string)", "org.apache.maven.model.plugin.constructkey(string;string)", "org.apache.maven.model.plugin.getgroupid()", "org.apache.maven.model.plugin.plugin()", "org.apache.maven.model.model.model()", "org.apache.maven.model.plugin.getartifactid()", "org.apache.maven.model.model.getname()", "org.apache.maven.model.plugin.getkey()", "org.apache.maven.model.modelbase.modelbase()", "org.apache.maven.model.model.getgroupid()", "org.apache.maven.model.configurationcontainer.configurationcontainer()", "org.apache.maven.model.model.getartifactid()", "org.apache.maven.model.plugin.setartifactid(string)", "org.apache.maven.model.plugin.hashcode()", "org.apache.maven.model.plugin.getversion()"]}, "mojoexecutor": {"distance": 1.125, "methods": ["org.apache.maven.lifecycle.internal.mojoexecutor.newdependencycontext(mavensession;list)", "org.apache.maven.lifecycle.internal.mojoexecutor.toscopes(string)", "org.apache.maven.lifecycle.internal.mojoexecutor.collectdependencyrequirements(set;set;collection)", "org.apache.maven.lifecycle.internal.mojoexecutor.mojoexecutor()"]}}