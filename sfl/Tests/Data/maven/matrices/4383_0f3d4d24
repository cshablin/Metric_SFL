{"components_names": [[0, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parserepository(string;xmlpullparser;boolean)"], [1, "org.apache.maven.model.model.setinceptionyear(string)"], [2, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsecontributor(string;xmlpullparser;boolean)"], [3, "org.apache.maven.project.defaultprojectbuildingrequest.getmirrors()"], [4, "org.apache.maven.model.building.defaultmodelbuildingrequest.getmodelsource()"], [5, "org.apache.maven.artifact.resolver.filter.abstractscopeartifactfilter.abstractscopeartifactfilter()"], [6, "org.apache.maven.model.merge.modelmerger.mergeplugin_groupid(plugin;plugin;boolean;map)"], [7, "org.apache.maven.model.repositorybase.getname()"], [8, "org.apache.maven.model.model.getbuild()"], [9, "org.apache.maven.model.building.defaultmodelbuilder.readparentlocally(model;modelbuildingrequest;defaultmodelproblemcollector)"], [10, "org.apache.maven.model.merge.modelmerger.mergepluginmanagement(pluginmanagement;pluginmanagement;boolean;map)"], [11, "org.apache.maven.model.plugin.setextensions(string)"], [12, "org.apache.maven.project.defaultprojectbuildingrequest.setsystemproperties(properties)"], [13, "org.apache.maven.model.merge.modelmerger.getnotifierkey(notifier)"], [14, "org.apache.maven.profiles.defaultprofilemanager$1.defaultprofilemanager$1(defaultprofilemanager;list)"], [15, "org.apache.maven.artifact.resolver.artifactresolutionrequest.gettransferlistener()"], [16, "org.apache.maven.model.building.modeldata.getactiveprofiles()"], [17, "org.apache.maven.classrealm.defaultclassrealmmanager.defaultclassrealmmanager()"], [18, "org.apache.maven.model.buildbase.clone()"], [19, "org.apache.maven.model.building.defaultmodelbuilder.build(modelbuildingrequest;collection)"], [20, "org.apache.maven.model.model.getorganization()"], [21, "org.apache.maven.model.management.defaultdependencymanagementinjector.defaultdependencymanagementinjector()"], [22, "org.apache.maven.repository.legacy.resolver.defaultlegacyartifactcollector.manageartifact(resolutionnode;managedversionmap;list)"], [23, "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.formatasdirectory(string)"], [24, "org.apache.maven.artifact.repository.defaultrepositoryrequest.getcache()"], [25, "org.apache.maven.model.issuemanagement.setsystem(string)"], [26, "org.apache.maven.model.merge.modelmerger.mergedependency_scope(dependency;dependency;boolean;map)"], [27, "org.apache.maven.artifact.defaultartifact.defaultartifact(string;string;versionrange;string;string;string;artifacthandler;boolean)"], [28, "org.apache.maven.artifact.repository.defaultrepositoryrequest.setoffline(boolean)"], [29, "org.apache.maven.model.reportplugin.getconfiguration()"], [30, "org.apache.maven.model.activationfile.setexists(string)"], [31, "org.apache.maven.model.parent.parent()"], [32, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cachekey.defaultmavenmetadatacache$cachekey(artifact;boolean;artifactrepository;list)"], [33, "org.apache.maven.project.mavenproject.tostring()"], [34, "org.apache.maven.artifact.defaultartifact.empty(string)"], [35, "org.apache.maven.lifecycle.lifecycle.lifecycle()"], [36, "org.apache.maven.model.buildbase.setresources(list)"], [37, "org.apache.maven.model.patternset.patternset()"], [38, "org.apache.maven.model.distributionmanagement.getsite()"], [39, "org.apache.maven.model.distributionmanagement.setsite(site)"], [40, "org.apache.maven.project.artifact.mavenmetadatasource.createdependencyartifact(artifactfactory;dependency;string;artifactfilter)"], [41, "org.apache.maven.model.activationproperty.setvalue(string)"], [42, "org.apache.maven.model.profile.activation.jdkversionprofileactivator.getrange(string)"], [43, "org.apache.maven.project.artifact.mavenmetadatasource$projectrelocation.access$200(projectrelocation)"], [44, "org.apache.maven.model.model.setissuemanagement(issuemanagement)"], [45, "org.apache.maven.model.model.getdescription()"], [46, "org.apache.maven.execution.projectsortertest.projectsortertest()"], [47, "org.apache.maven.artifact.defaultartifact.setrepository(artifactrepository)"], [48, "org.apache.maven.model.merge.mavenmodelmerger.mergedistributionmanagement_repository(distributionmanagement;distributionmanagement;boolean;map)"], [49, "org.apache.maven.execution.projectsorter.projectsorter(collection)"], [50, "org.apache.maven.project.mavenproject.eq(object;object)"], [51, "org.apache.maven.lifecycle.defaultlifecycleexecutor.initialize()"], [52, "org.apache.maven.model.normalization.defaultmodelnormalizer$duplicatemerger.defaultmodelnormalizer$duplicatemerger()"], [53, "org.apache.maven.model.profile.activation.jdkversionprofileactivator.isinrange(string;list)"], [54, "org.apache.maven.model.building.defaultmodelbuildingevent.getmodel()"], [55, "org.apache.maven.model.activationproperty.getvalue()"], [56, "org.apache.maven.model.dependency.getclassifier()"], [57, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setresolvetransitively(boolean)"], [58, "org.apache.maven.abstractcoremavencomponenttestcase.createmavensession(file)"], [59, "org.apache.maven.settings.pomconstructionwithsettingstest.pomconstructionwithsettingstest()"], [60, "org.apache.maven.model.building.defaultmodelbuildingevent.defaultmodelbuildingevent(model;modelbuildingrequest;modelproblemcollector)"], [61, "org.apache.maven.model.building.simpleproblemcollector.adderror(string)"], [62, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.interpolateobject(object;model;file;modelbuildingrequest;modelproblemcollector)"], [63, "org.apache.maven.repository.legacyrepositorysystem.createdefaultremoterepository()"], [64, "org.apache.maven.project.defaultprojectbuildingrequest.getinactiveprofileids()"], [65, "org.apache.maven.abstractcoremavencomponenttestcase$projectbuilder.abstractcoremavencomponenttestcase$projectbuilder(abstractcoremavencomponenttestcase;mavenproject)"], [66, "org.apache.maven.model.profiletest.profiletest()"], [67, "org.apache.maven.project.mavenproject.getbuildextensions()"], [68, "org.apache.maven.artifact.defaultartifact.getscope()"], [69, "org.apache.maven.model.model.setlicenses(list)"], [70, "org.apache.maven.model.building.defaultmodelbuildingresult.setactiveexternalprofiles(list)"], [71, "org.apache.maven.model.building.defaultmodelproblemcollector.setsource(model)"], [72, "org.apache.maven.model.building.filemodelsource.getlocation()"], [73, "org.apache.maven.model.merge.modelmerger.mergedependencymanagement(dependencymanagement;dependencymanagement;boolean;map)"], [74, "org.apache.maven.model.repository.setsnapshots(repositorypolicy)"], [75, "org.apache.maven.model.configurationcontainer.getinherited()"], [76, "org.apache.maven.model.activation.setactivebydefault(boolean)"], [77, "org.apache.maven.repository.legacyrepositorysystem.createprojectartifact(string;string;string)"], [78, "org.apache.maven.model.building.defaultmodelbuildingrequest.isprocessplugins()"], [79, "org.apache.maven.repository.legacy.resolver.defaultlegacyartifactcollector.fireevent(int;list;resolutionnode;artifact;versionrange)"], [80, "org.apache.maven.repository.delegatinglocalartifactrepository.setideworkspace(localartifactrepository)"], [81, "org.apache.maven.model.plugin.equals(object)"], [82, "org.apache.maven.repository.legacy.metadata.resolutiongroup.getresolutionrepositories()"], [83, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseactivationos(string;xmlpullparser;boolean)"], [84, "org.apache.maven.model.build.setsourcedirectory(string)"], [85, "org.apache.maven.repository.legacy.defaultwagonmanager.defaultwagonmanager()"], [86, "org.apache.maven.plugin.descriptor.mojodescriptor.getrole()"], [87, "org.apache.maven.model.repository.clone()"], [88, "org.apache.maven.execution.projectsortertest.createparent(mavenproject)"], [89, "org.apache.maven.artifact.defaultartifact.getversion()"], [90, "org.apache.maven.repository.legacyrepositorysystem.injectmirror(list;list)"], [91, "org.apache.maven.model.merge.modelmerger.mergesite(site;site;boolean;map)"], [92, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setmanagedversionmap(map)"], [93, "org.apache.maven.project.mavenproject.addprojectreference(mavenproject)"], [94, "org.apache.maven.artifact.versioning.comparableversion.parseitem(boolean;string)"], [95, "org.apache.maven.model.validation.defaultmodelvalidator.validatestringnoexpression(string;modelproblemcollector;boolean;string)"], [96, "org.apache.maven.artifact.versioning.comparableversion$listitem.comparableversion$listitem(1)"], [97, "org.apache.maven.artifact.resolver.artifactresolutionresult.hasversionrangeviolations()"], [98, "org.apache.maven.model.dependency.getscope()"], [99, "org.apache.maven.model.pluginconfiguration.clone()"], [100, "org.apache.maven.project.artifact.defaultmavenmetadatacache.put(cachekey;resolutiongroup)"], [101, "org.apache.maven.model.contributor.setorganizationurl(string)"], [102, "org.apache.maven.artifact.resolver.artifactresolutionresult.hascirculardependencyexceptions()"], [103, "org.apache.maven.model.building.defaultmodelbuildingresult.setrawmodel(string;model)"], [104, "org.apache.maven.model.fileset.setdirectory(string)"], [105, "org.apache.maven.project.mavenproject.getmodelbuild()"], [106, "org.apache.maven.model.dependency.isoptional()"], [107, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseactivationfile(string;xmlpullparser;boolean)"], [108, "org.apache.maven.model.buildbase.getdefaultgoal()"], [109, "org.apache.maven.artifact.resolver.artifactnotfoundexception.artifactnotfoundexception(string;string;string;string;string;string;list;string;list)"], [110, "org.apache.maven.plugin.pluginmanagertest.teardown()"], [111, "org.apache.maven.model.reportplugin.getartifactid()"], [112, "org.apache.maven.model.merge.mavenmodelmerger.getrepositorybasekey(repositorybase)"], [113, "org.apache.maven.model.activationos.getfamily()"], [114, "org.apache.maven.model.exclusion.setgroupid(string)"], [115, "org.apache.maven.model.merge.modelmerger.mergedependency_artifactid(dependency;dependency;boolean;map)"], [116, "org.apache.maven.model.dependency.getgroupid()"], [117, "org.apache.maven.model.merge.modelmerger.mergemodelbase_dependencies(modelbase;modelbase;boolean;map)"], [118, "org.apache.maven.model.distributionmanagement.getrepository()"], [119, "org.apache.maven.project.defaultprojectbuilder.build(artifact;projectbuildingrequest)"], [120, "org.apache.maven.project.mavenproject.equals(object)"], [121, "org.apache.maven.model.dependency.dependency()"], [122, "org.apache.maven.model.site.seturl(string)"], [123, "org.apache.maven.model.distributionmanagement.clone()"], [124, "org.apache.maven.model.pluginexecution.setid(string)"], [125, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseprofile(string;xmlpullparser;boolean)"], [126, "org.apache.maven.repository.legacyrepositorysystem.createdependencyartifact(dependency)"], [127, "org.apache.maven.model.building.defaultmodelbuildingresult.getactivepomprofiles(string)"], [128, "org.apache.maven.project.inheritance.t03.projectinheritancetest.projectinheritancetest()"], [129, "org.apache.maven.model.profile.activation.operatingsystemprofileactivator.ensureatleastonenonnull(activationos)"], [130, "org.apache.maven.project.extensiondescriptorbuildertest.extensiondescriptorbuildertest()"], [131, "org.apache.maven.model.plugincontainer.setplugins(list)"], [132, "org.apache.maven.model.site.getname()"], [133, "org.apache.maven.model.model.getinceptionyear()"], [134, "org.apache.maven.model.issuemanagement.getsystem()"], [135, "org.apache.maven.model.merge.modelmerger.mergereportplugin(reportplugin;reportplugin;boolean;map)"], [136, "org.apache.maven.model.profile.activation.jdkversionprofileactivator.isactive(profile;profileactivationcontext;modelproblemcollector)"], [137, "org.apache.maven.model.management.defaultpluginmanagementinjector$managementmodelmerger.mergeplugin_executions(plugin;plugin;boolean;map)"], [138, "org.apache.maven.model.merge.modelmerger.mergebuild_outputdirectory(build;build;boolean;map)"], [139, "org.apache.maven.project.artifact.defaultmavenmetadatacache.access$000(artifact)"], [140, "org.apache.maven.project.inheritance.t07.projectinheritancetest.projectinheritancetest()"], [141, "org.apache.maven.model.profile.activation.jdkversionprofileactivator$rangevalue.isclosed()"], [142, "org.apache.maven.project.defaultprojectbuilder.build(file;boolean;projectbuildingrequest)"], [143, "org.apache.maven.model.license.setname(string)"], [144, "org.apache.maven.model.build.setoutputdirectory(string)"], [145, "org.apache.maven.artifact.defaultartifact.isresolved()"], [146, "org.apache.maven.execution.mavensession.getcurrentproject()"], [147, "org.apache.maven.execution.mavensession.getexecutionrootdirectory()"], [148, "org.apache.maven.project.mavenproject.getpackaging()"], [149, "org.apache.maven.model.issuemanagement.geturl()"], [150, "org.apache.maven.artifact.factory.defaultartifactfactory.createprojectartifact(string;string;string;string)"], [151, "org.apache.maven.project.inheritance.t01.projectinheritancetest.projectinheritancetest()"], [152, "org.apache.maven.model.model.setprerequisites(prerequisites)"], [153, "org.apache.maven.model.composition.defaultdependencymanagementimporter.importmanagement(model;list;modelbuildingrequest;modelproblemcollector)"], [154, "org.apache.maven.artifact.versioning.comparableversion.parseversion(string)"], [155, "org.apache.maven.model.notifier.getconfiguration()"], [156, "org.apache.maven.model.model.setmodelencoding(string)"], [157, "org.apache.maven.artifact.versioning.defaultartifactversion.parseversion(string)"], [158, "org.apache.maven.model.scm.getconnection()"], [159, "org.apache.maven.repository.legacy.resolver.defaultlegacyartifactcollector.collect(set;artifact;map;repositoryrequest;artifactmetadatasource;artifactfilter;list;list)"], [160, "org.apache.maven.artifact.resolver.filter.cumulativescopeartifactfilter.addscope(string)"], [161, "org.apache.maven.model.pluginexecution.clone()"], [162, "org.apache.maven.model.configurationcontainer.isinherited()"], [163, "org.apache.maven.project.modelutils.mergedependencylist(list;list)"], [164, "org.apache.maven.model.distributionmanagement.getstatus()"], [165, "org.apache.maven.artifact.repository.layout.legacyrepositorylayout.legacyrepositorylayout()"], [166, "org.apache.maven.model.reporting.getoutputdirectory()"], [167, "org.apache.maven.project.defaultprojectbuildingrequest.getremoterepositories()"], [168, "org.apache.maven.model.merge.modelmerger.mergeplugin_dependencies(plugin;plugin;boolean;map)"], [169, "org.apache.maven.model.activation.isactivebydefault()"], [170, "org.apache.maven.artifact.resolver.artifactresolutionresult.getmissingartifacts()"], [171, "org.apache.maven.model.io.xpp3.mavenxpp3reader.read(inputstream)"], [172, "org.apache.maven.model.merge.modelmerger.mergedeploymentrepository_uniqueversion(deploymentrepository;deploymentrepository;boolean;map)"], [173, "org.apache.maven.model.building.simpleproblemcollector.addwarning(string)"], [174, "org.apache.maven.model.profile.activation.jdkversionprofileactivator.jdkversionprofileactivator()"], [175, "org.apache.maven.artifact.repository.mavenartifactrepository.decode(string)"], [176, "org.apache.maven.model.contributor.settimezone(string)"], [177, "org.apache.maven.artifact.defaultartifact.getdependencyfilter()"], [178, "org.apache.maven.model.contributor.contributor()"], [179, "org.apache.maven.model.plugin.getgroupid()"], [180, "org.apache.maven.model.repositorybase.clone()"], [181, "org.apache.maven.model.inheritance.defaultinheritanceassembler$inheritancemodelmerger.defaultinheritanceassembler$inheritancemodelmerger(1)"], [182, "org.apache.maven.model.parent.setversion(string)"], [183, "org.apache.maven.project.mavenproject.setpluginartifactrepositories(list)"], [184, "org.apache.maven.repository.legacyrepositorysystemtest.legacyrepositorysystemtest()"], [185, "org.apache.maven.model.profile.defaultprofileinjector$profilemodelmerger.mergemodelbase(modelbase;modelbase)"], [186, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsescm(string;xmlpullparser;boolean)"], [187, "org.apache.maven.model.building.defaultmodelbuildingrequest.setvalidationlevel(int)"], [188, "org.apache.maven.artifact.artifactutils.artifactmapbyversionlessid(collection)"], [189, "org.apache.maven.artifact.repository.layout.flatrepositorylayout.flatrepositorylayout()"], [190, "org.apache.maven.model.model.clonehook(model)"], [191, "org.apache.maven.model.build.gettestoutputdirectory()"], [192, "org.apache.maven.model.io.xpp3.mavenxpp3reader.gettrimmedvalue(string)"], [193, "org.apache.maven.artifact.repository.mavenartifactrepository.protocol(string)"], [194, "org.apache.maven.model.pluginexecution.getgoals()"], [195, "org.apache.maven.model.validation.defaultmodelvalidatortest.validate(string)"], [196, "org.apache.maven.model.reportplugin.setconfiguration(object)"], [197, "org.apache.maven.model.profile.clone()"], [198, "org.apache.maven.abstractcoremavencomponenttestcase.createmavenexecutionrequest(file)"], [199, "org.apache.maven.model.merge.modelmerger.mergebuildbase_directory(buildbase;buildbase;boolean;map)"], [200, "org.apache.maven.settings.settings.settings()"], [201, "org.apache.maven.model.model.getdevelopers()"], [202, "org.apache.maven.model.extension.setartifactid(string)"], [203, "org.apache.maven.model.distributionmanagement.getrelocation()"], [204, "org.apache.maven.model.activation.setos(activationos)"], [205, "org.apache.maven.model.model.geturl()"], [206, "org.apache.maven.model.profile.activation.propertyprofileactivatortest.propertyprofileactivatortest()"], [207, "org.apache.maven.plugin.descriptor.mojodescriptor.setgoal(string)"], [208, "org.apache.maven.execution.defaultmavenexecutionrequest.setshowerrors(boolean)"], [209, "org.apache.maven.artifact.resolver.defaultartifactresolver.resolve(artifact;repositoryrequest;transferlistener;boolean)"], [210, "org.apache.maven.model.building.defaultmodelbuilder.haserrors(list)"], [211, "org.apache.maven.artifact.repository.mavenartifactrepository.getlayout()"], [212, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.getinterpolator()"], [213, "org.apache.maven.model.merge.mavenmodelmerger.mergedistributionmanagement_site(distributionmanagement;distributionmanagement;boolean;map)"], [214, "org.apache.maven.model.io.xpp3.mavenxpp3reader.read(inputstream;boolean)"], [215, "org.apache.maven.model.plugin.getartifactid()"], [216, "org.apache.maven.model.merge.modelmerger.mergemodel_packaging(model;model;boolean;map)"], [217, "org.apache.maven.artifact.repository.defaultrepositoryrequest.getremoterepositories()"], [218, "org.apache.maven.model.building.defaultmodelbuildingrequest.getprofiles()"], [219, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel(model;model;boolean;map)"], [220, "org.apache.maven.abstractcoremavencomponenttestcase.getremoterepositories()"], [221, "org.apache.maven.artifact.versioning.versionrange.cloneof()"], [222, "org.apache.maven.model.merge.modelmerger.mergemodelbase_properties(modelbase;modelbase;boolean;map)"], [223, "org.apache.maven.model.scm.setconnection(string)"], [224, "org.apache.maven.repository.legacy.metadata.resolutiongroup.getrelocatedartifact()"], [225, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.<clinit>()"], [226, "org.apache.maven.artifact.artifactutils.copylist(list)"], [227, "org.apache.maven.model.exclusion.clone()"], [228, "org.apache.maven.model.merge.modelmerger.mergemodel_artifactid(model;model;boolean;map)"], [229, "org.apache.maven.model.site.setid(string)"], [230, "org.apache.maven.project.abstractmavenprojecttestcase.abstractmavenprojecttestcase()"], [231, "org.apache.maven.repository.legacyrepositorysystem.legacyrepositorysystem()"], [232, "org.apache.maven.repository.legacyrepositorysystem.createrepository(string;string;boolean;string;boolean;string;string)"], [233, "org.apache.maven.artifact.versioning.comparableversion.comparableversion(string)"], [234, "org.apache.maven.artifact.defaultartifact.setfile(file)"], [235, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.createinterpolator()"], [236, "org.apache.maven.plugin.descriptor.plugindescriptor.getartifacts()"], [237, "org.apache.maven.project.pomconstructiontest.<clinit>()"], [238, "org.apache.maven.model.reportplugin.getgroupid()"], [239, "org.apache.maven.model.path.defaultpathtranslator.aligntobasedirectory(string;file)"], [240, "org.apache.maven.defaultartifactfiltermanager.defaultartifactfiltermanager()"], [241, "org.apache.maven.model.validation.defaultmodelvalidator.validateresources(modelproblemcollector;list;string;modelbuildingrequest)"], [242, "org.apache.maven.model.model.setbuild(build)"], [243, "org.apache.maven.model.merge.modelmerger.mergedistributionmanagement_downloadurl(distributionmanagement;distributionmanagement;boolean;map)"], [244, "org.apache.maven.model.merge.modelmerger.mergedependency_classifier(dependency;dependency;boolean;map)"], [245, "org.apache.maven.model.building.defaultmodelbuildingrequest.setuserproperties(properties)"], [246, "org.apache.maven.artifact.resolver.filter.excludesartifactfilter.excludesartifactfilter(list)"], [247, "org.apache.maven.model.build.getextensions()"], [248, "org.apache.maven.artifact.resolver.artifactresolutionresult.hasmetadataresolutionexceptions()"], [249, "org.apache.maven.execution.defaultmavenexecutionrequest.defaultmavenexecutionrequest()"], [250, "org.apache.maven.execution.defaultmavenexecutionrequest.getlocalrepository()"], [251, "org.apache.maven.execution.defaultmavenexecutionrequest.getrepositorycache()"], [252, "org.apache.maven.model.building.defaultmodelbuilder.getsupermodel()"], [253, "org.apache.maven.project.defaultprojectbuildingrequest.getlocalrepository()"], [254, "org.apache.maven.execution.projectsorter.getsortedprojects()"], [255, "org.apache.maven.repository.legacyrepositorysystem.ordinalofchecksumpolicy(string)"], [256, "org.apache.maven.abstractcoremavencomponenttestcase.customizecontainerconfiguration(containerconfiguration)"], [257, "org.apache.maven.project.inheritance.t08.projectinheritancetest.projectinheritancetest()"], [258, "org.apache.maven.model.merge.modelmerger.mergedistributionmanagement(distributionmanagement;distributionmanagement;boolean;map)"], [259, "org.apache.maven.model.merge.modelmerger.mergemodel_scm(model;model;boolean;map)"], [260, "org.apache.maven.model.merge.modelmerger.mergeissuemanagement_url(issuemanagement;issuemanagement;boolean;map)"], [261, "org.apache.maven.artifact.resolver.resolutionnode.isresolved()"], [262, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cacherecord.getartifacts()"], [263, "org.apache.maven.execution.defaultmavenexecutionrequest.setgoals(list)"], [264, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsecimanagement(string;xmlpullparser;boolean)"], [265, "org.apache.maven.repository.legacyrepositorysystem.buildartifactrepository(repository)"], [266, "org.apache.maven.model.path.defaultpathtranslator.defaultpathtranslator()"], [267, "org.apache.maven.model.merge.modelmerger.mergebuild_scriptsourcedirectory(build;build;boolean;map)"], [268, "org.apache.maven.model.scm.gettag()"], [269, "org.apache.maven.model.repositorypolicy.repositorypolicy()"], [270, "org.apache.maven.repository.legacy.defaultwagonmanager.<clinit>()"], [271, "org.apache.maven.model.plugin.setartifactid(string)"], [272, "org.apache.maven.project.mavenproject.getgroupid()"], [273, "org.apache.maven.model.modelbase.setdependencymanagement(dependencymanagement)"], [274, "org.apache.maven.model.profile.defaultprofileselector.defaultprofileselector()"], [275, "org.apache.maven.model.configurationcontainer.getconfiguration()"], [276, "org.apache.maven.artifact.defaultartifact.validateidentity()"], [277, "org.apache.maven.artifact.resolver.defaultresolutionerrorhandler.tolist(collection)"], [278, "org.apache.maven.model.merge.modelmerger.getrepositorykey(repository)"], [279, "org.apache.maven.model.parent.clone()"], [280, "org.apache.maven.model.building.defaultmodelproblemcollector.setrootmodel(model)"], [281, "org.apache.maven.project.artifact.mavenmetadatasource.getprojectbuilder()"], [282, "org.apache.maven.model.site.getid()"], [283, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cachekey.hashcode()"], [284, "org.apache.maven.model.exclusion.getgroupid()"], [285, "org.apache.maven.model.merge.modelmerger.mergedependency(dependency;dependency;boolean;map)"], [286, "org.apache.maven.model.merge.modelmerger.mergebuild_testsourcedirectory(build;build;boolean;map)"], [287, "org.apache.maven.project.artifact.mavenmetadatasource$projectrelocation.mavenmetadatasource$projectrelocation(1)"], [288, "org.apache.maven.model.dependencymanagement.setdependencies(list)"], [289, "org.apache.maven.repository.legacyrepositorysystem.createdefaultlocalrepository()"], [290, "org.apache.maven.model.dependency.clone()"], [291, "org.apache.maven.model.profile.activation.propertyprofileactivator.isactive(profile;profileactivationcontext;modelproblemcollector)"], [292, "org.apache.maven.abstractcoremavencomponenttestcase.abstractcoremavencomponenttestcase()"], [293, "org.apache.maven.model.merge.modelmerger.mergedeploymentrepository(deploymentrepository;deploymentrepository;boolean;map)"], [294, "org.apache.maven.model.pluginexecution.getid()"], [295, "org.apache.maven.artifact.defaultartifact.hasclassifier()"], [296, "org.apache.maven.model.building.defaultmodelbuildingrequest.setbuildstarttime(date)"], [297, "org.apache.maven.model.model.setpackaging(string)"], [298, "org.apache.maven.model.merge.modelmerger.mergemodelbase_distributionmanagement(modelbase;modelbase;boolean;map)"], [299, "org.apache.maven.project.pomconstructiontest.pomconstructiontest()"], [300, "org.apache.maven.artifact.repository.defaultrepositoryrequest.defaultrepositoryrequest(repositoryrequest)"], [301, "org.apache.maven.model.building.defaultmodelbuildingresult.setproblems(list)"], [302, "org.apache.maven.artifact.repository.mavenartifactrepository.geturl()"], [303, "org.apache.maven.model.pluginexecution.getphase()"], [304, "org.apache.maven.model.scm.clone()"], [305, "org.apache.maven.model.merge.modelmerger.mergebuildbase_testresources(buildbase;buildbase;boolean;map)"], [306, "org.apache.maven.execution.mavensession.mavensession(plexuscontainer;mavenexecutionrequest;mavenexecutionresult;mavenproject)"], [307, "org.apache.maven.profiles.defaultprofilemanager.defaultprofilemanager(plexuscontainer;properties)"], [308, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseresource(string;xmlpullparser;boolean)"], [309, "org.apache.maven.abstractcoremavencomponenttestcase.setup()"], [310, "org.apache.maven.model.plugin.hashcode()"], [311, "org.apache.maven.model.model.setmodelversion(string)"], [312, "org.apache.maven.model.validation.defaultmodelvalidator.validaterawmodel(model;modelbuildingrequest;modelproblemcollector)"], [313, "org.apache.maven.repository.legacy.resolver.conflict.nearestconflictresolver.resolveconflict(resolutionnode;resolutionnode)"], [314, "org.apache.maven.model.repositorybase.geturl()"], [315, "org.apache.maven.model.organization.setname(string)"], [316, "org.apache.maven.artifact.factory.defaultartifactfactory.defaultartifactfactory()"], [317, "org.apache.maven.model.merge.mavenmodelmerger.mergebuildbase_filters(buildbase;buildbase;boolean;map)"], [318, "org.apache.maven.model.validation.defaultmodelvalidatortest.validateraw(string;int)"], [319, "org.apache.maven.model.io.defaultmodelreader.isstrict(map)"], [320, "org.apache.maven.project.artifact.defaultmavenmetadatacache.artifacthashcode(artifact)"], [321, "org.apache.maven.model.issuemanagement.clone()"], [322, "org.apache.maven.model.exclusion.exclusion()"], [323, "org.apache.maven.model.model.setcontributors(list)"], [324, "org.apache.maven.model.merge.modelmerger.mergeexclusion_groupid(exclusion;exclusion;boolean;map)"], [325, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseextension(string;xmlpullparser;boolean)"], [326, "org.apache.maven.model.merge.modelmerger.mergemodelbase_reporting(modelbase;modelbase;boolean;map)"], [327, "org.apache.maven.model.merge.modelmerger.getresourcekey(resource)"], [328, "org.apache.maven.model.merge.modelmerger.mergepluginconfiguration(pluginconfiguration;pluginconfiguration;boolean;map)"], [329, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cacherecord.getartifact()"], [330, "org.apache.maven.project.emptyprojectbuildinghelper.createartifactrepositories(list;list;projectbuildingrequest)"], [331, "org.apache.maven.artifact.repository.defaultartifactrepositoryfactory.defaultartifactrepositoryfactory()"], [332, "org.apache.maven.artifact.resolver.artifactresolutionrequest.isforceupdate()"], [333, "org.apache.maven.model.profile.activation.propertyprofileactivatortest.newprofile(string;string)"], [334, "org.apache.maven.project.defaultprojectbuildingrequest.getproxies()"], [335, "org.apache.maven.model.validation.defaultmodelvalidator.validatenotnull(string;modelproblemcollector;boolean;object;string)"], [336, "org.apache.maven.model.merge.mavenmodelmerger.getpluginkey(plugin)"], [337, "org.apache.maven.model.building.abstractmodelbuildinglistener.abstractmodelbuildinglistener()"], [338, "org.apache.maven.model.merge.mavenmodelmerger.resolvepath(string)"], [339, "org.apache.maven.project.artifact.defaultmavenmetadatacache.get(artifact;boolean;artifactrepository;list)"], [340, "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.abstractartifactresolutionexception(string;artifact;list;throwable)"], [341, "org.apache.maven.settings.settingsutilstest.settingsutilstest()"], [342, "org.apache.maven.model.profile.getbuild()"], [343, "org.apache.maven.project.artifact.mavenmetadatasource.geteffectivescope(string;string)"], [344, "org.apache.maven.model.merge.modelmerger.mergeparent_relativepath(parent;parent;boolean;map)"], [345, "org.apache.maven.model.merge.modelmerger.mergerepository_snapshots(repository;repository;boolean;map)"], [346, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cacherecord.isstale()"], [347, "org.apache.maven.execution.defaultmavenexecutionrequest.setplugingroups(list)"], [348, "org.apache.maven.model.mailinglist.mailinglist()"], [349, "org.apache.maven.execution.projectsorter.addedge(map;map;mavenproject;vertex;string;string;string;boolean;boolean)"], [350, "org.apache.maven.artifact.versioning.versionrange.versionrange(artifactversion;list)"], [351, "org.apache.maven.repository.legacy.resolver.transform.latestartifacttransformation.transformforresolve(artifact;list;artifactrepository)"], [352, "org.apache.maven.artifact.defaultartifact.getversionrange()"], [353, "org.apache.maven.model.dependency.setoptional(string)"], [354, "org.apache.maven.model.building.defaultmodelbuilder.fireevent(model;modelbuildingrequest;modelproblemcollector;modelbuildingeventcatapult)"], [355, "org.apache.maven.model.validation.defaultmodelvalidatortest.read(string)"], [356, "org.apache.maven.model.building.defaultmodelbuilder.readmodel(modelsource;file;modelbuildingrequest;defaultmodelproblemcollector)"], [357, "org.apache.maven.repository.legacy.metadata.resolutiongroup.getartifacts()"], [358, "org.apache.maven.lifecycle.defaultlifecycleexecutor.parselifecyclephasedefinitions(map;string;string)"], [359, "org.apache.maven.project.artifact.mavenmetadatasource.retrieve(metadataresolutionrequest)"], [360, "org.apache.maven.model.buildbase.getfinalname()"], [361, "org.apache.maven.project.repositorymodelresolver.resolvemodel(string;string;string)"], [362, "org.apache.maven.project.emptyprojectbuildinghelper.emptyprojectbuildinghelper()"], [363, "org.apache.maven.model.parent.getgroupid()"], [364, "org.apache.maven.model.plugin.getexecutions()"], [365, "org.apache.maven.artifact.versioning.comparableversion$integeritem.isnull()"], [366, "org.apache.maven.project.artifact.projectartifact$pomartifacthandler.getclassifier()"], [367, "org.apache.maven.model.dependencymanagement.dependencymanagement()"], [368, "org.apache.maven.project.artifact.mavenmetadatasource$projectrelocation.access$202(projectrelocation;mavenproject)"], [369, "org.apache.maven.model.issuemanagement.seturl(string)"], [370, "org.apache.maven.model.superpom.defaultsuperpomprovider.getsupermodel(string)"], [371, "org.apache.maven.repository.legacy.resolver.transform.releaseartifacttransformation.releaseartifacttransformation()"], [372, "org.apache.maven.artifact.defaultartifact.hashcode()"], [373, "org.apache.maven.model.validation.defaultmodelvalidator.validatestringnotempty(string;modelproblemcollector;boolean;string;string)"], [374, "org.apache.maven.model.scm.seturl(string)"], [375, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.isresolvemanagedversions()"], [376, "org.apache.maven.model.building.modeldata.setmodel(model)"], [377, "org.apache.maven.model.inheritance.defaultinheritanceassembler$inheritancemodelmerger.mergereporting_plugins(reporting;reporting;boolean;map)"], [378, "org.apache.maven.project.mavenproject.setoriginalmodel(model)"], [379, "org.apache.maven.artifact.defaultartifact.defaultartifact(string;string;string;string;string;string;artifacthandler)"], [380, "org.apache.maven.artifact.repository.defaultrepositoryrequest.setforceupdate(boolean)"], [381, "org.apache.maven.execution.duplicateprojectexception.duplicateprojectexception(string;file;file;string)"], [382, "org.apache.maven.plugin.descriptor.mojodescriptor.getplugindescriptor()"], [383, "org.apache.maven.artifact.defaultartifact.getdependencyconflictid()"], [384, "org.apache.maven.model.reportplugin.constructkey(string;string)"], [385, "org.apache.maven.model.modelbase.setreporting(reporting)"], [386, "org.apache.maven.repository.legacyrepositorysystem.geteffectiverepositories(list)"], [387, "org.apache.maven.project.artifact.mavenmetadatasource$projectrelocation.access$102(projectrelocation;artifact)"], [388, "org.apache.maven.model.reportplugin.getreportsets()"], [389, "org.apache.maven.repository.delegatinglocalartifactrepository.delegatinglocalartifactrepository(artifactrepository)"], [390, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_mailinglists(model;model;boolean;map)"], [391, "org.apache.maven.model.distributionmanagement.getdownloadurl()"], [392, "org.apache.maven.model.merge.mavenmodelmerger.appendpath(string;string;string)"], [393, "org.apache.maven.model.dependency.settype(string)"], [394, "org.apache.maven.plugin.prefix.internal.defaultpluginprefixresolver.defaultpluginprefixresolver()"], [395, "org.apache.maven.model.building.defaultmodelbuildingevent.getrequest()"], [396, "org.apache.maven.project.defaultmavenprojectbuildertest.defaultmavenprojectbuildertest()"], [397, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseparent(string;xmlpullparser;boolean)"], [398, "org.apache.maven.model.model.getparent()"], [399, "org.apache.maven.artifact.repository.artifactrepositorypolicy.artifactrepositorypolicy()"], [400, "org.apache.maven.artifact.versioning.comparableversion$listitem.tostring()"], [401, "org.apache.maven.artifact.resolver.resolutionnode.getchildreniterator()"], [402, "org.apache.maven.abstractcoremavencomponenttestcase.createmavensession(file;properties)"], [403, "org.apache.maven.model.management.defaultpluginmanagementinjector$managementmodelmerger.mergemanagedbuildplugins(model)"], [404, "org.apache.maven.model.merge.modelmerger.mergeexclusion_artifactid(exclusion;exclusion;boolean;map)"], [405, "org.apache.maven.model.building.defaultmodelbuildingrequest.getinactiveprofileids()"], [406, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setresolveroot(boolean)"], [407, "org.apache.maven.model.building.defaultmodelbuildingresult.addmodelid(string)"], [408, "org.apache.maven.artifact.versioning.versionrange.restrict(versionrange)"], [409, "org.apache.maven.project.defaultprojectbuilder.getmodelbuildingrequest(projectbuildingrequest;reactormodelpool)"], [410, "org.apache.maven.project.artifact.mavenmetadatasource.createdependencyfilter(dependency;artifactfilter)"], [411, "org.apache.maven.project.defaultprojectbuildingrequest.setforceupdate(boolean)"], [412, "org.apache.maven.artifact.repository.mavenartifactrepository.pathof(artifact)"], [413, "org.apache.maven.repository.legacy.resolver.defaultlegacyartifactcollector.recurse(artifactresolutionresult;resolutionnode;map;managedversionmap;repositoryrequest;artifactmetadatasource;artifactfilter;list;list)"], [414, "org.apache.maven.profiles.defaultprofilemanager.getactiveprofiles()"], [415, "org.apache.maven.execution.projectsorter.addedge(vertex;vertex;mavenproject;map;boolean;boolean)"], [416, "org.apache.maven.model.merge.modelmerger.mergebuild_sourcedirectory(build;build;boolean;map)"], [417, "org.apache.maven.model.dependencymanagement.clone()"], [418, "org.apache.maven.abstractcoremavencomponenttestcase$projectbuilder.adddependency(string;string;string;string;string)"], [419, "org.apache.maven.project.artifact.defaultmetadatasource.defaultmetadatasource()"], [420, "org.apache.maven.project.mavenproject.getbuild()"], [421, "org.apache.maven.repository.legacy.resolver.transform.abstractversiontransformation.abstractversiontransformation()"], [422, "org.apache.maven.model.dependencytest.dependencytest()"], [423, "org.apache.maven.model.configurationcontainer.clone()"], [424, "org.apache.maven.plugin.pluginparameterexpressionevaluator.evaluate(string;class)"], [425, "org.apache.maven.artifact.factory.defaultartifactfactory.createbuildartifact(string;string;string;string)"], [426, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator$3.getvalue(string)"], [427, "org.apache.maven.model.building.defaultmodelbuildingrequest.getsystemproperties()"], [428, "org.apache.maven.project.mavenproject.setinjectedprofileids(string;list)"], [429, "org.apache.maven.model.merge.modelmerger.mergescm_tag(scm;scm;boolean;map)"], [430, "org.apache.maven.model.profile.defaultprofileactivationcontext.setsystemproperties(properties)"], [431, "org.apache.maven.model.reporting.getplugins()"], [432, "org.apache.maven.artifact.resolver.artifactresolutionresult.setartifactresolutionnodes(set)"], [433, "org.apache.maven.model.profile.defaultprofileinjector.defaultprofileinjector()"], [434, "org.apache.maven.model.merge.modelmerger.mergerepositorybase_url(repositorybase;repositorybase;boolean;map)"], [435, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsepluginmanagement(string;xmlpullparser;boolean)"], [436, "org.apache.maven.model.building.modeldata.setactiveprofiles(list)"], [437, "org.apache.maven.model.building.defaultmodelbuildingrequest.setactiveprofileids(list)"], [438, "org.apache.maven.model.dependency.addexclusion(exclusion)"], [439, "org.apache.maven.model.merge.mavenmodelmerger.mergebuildbase_resources(buildbase;buildbase;boolean;map)"], [440, "org.apache.maven.model.activationproperty.activationproperty()"], [441, "org.apache.maven.artifact.resolver.artifactresolutionresult.hasmissingartifacts()"], [442, "org.apache.maven.project.canonical.canonicalprojectbuildertest.canonicalprojectbuildertest()"], [443, "org.apache.maven.artifact.resolver.artifactresolutionresult.addmissingartifact(artifact)"], [444, "org.apache.maven.model.model.clone()"], [445, "org.apache.maven.artifact.defaultartifact.getavailableversions()"], [446, "org.apache.maven.project.mavenproject.mavenproject(repositorysystem;projectbuilder;projectbuildingrequest)"], [447, "org.apache.maven.model.activation.setfile(activationfile)"], [448, "org.apache.maven.model.merge.modelmerger.mergebuildbase_resources(buildbase;buildbase;boolean;map)"], [449, "org.apache.maven.artifact.repository.metadata.defaultrepositorymetadatamanager.defaultrepositorymetadatamanager()"], [450, "org.apache.maven.model.validation.defaultmodelvalidatortest.validateeffective(string;int)"], [451, "org.apache.maven.model.buildbase.getfilters()"], [452, "org.apache.maven.model.profile.activation.jdkversionprofileactivator$rangevalue.access$000(rangevalue)"], [453, "org.apache.maven.execution.projectsortertest.createdependency(mavenproject)"], [454, "org.apache.maven.model.profile.defaultprofileactivationcontext.setprojectdirectory(file)"], [455, "org.apache.maven.lifecycle.mapping.defaultlifecyclemapping.initlifecyclemap()"], [456, "org.apache.maven.model.plugin.setgroupid(string)"], [457, "org.apache.maven.model.merge.modelmerger.mergesite_id(site;site;boolean;map)"], [458, "org.apache.maven.artifact.resolver.resolutionnode.getkey()"], [459, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseactivationproperty(string;xmlpullparser;boolean)"], [460, "org.apache.maven.artifact.defaultartifact.getgroupid()"], [461, "org.apache.maven.artifact.resolver.filter.abstractscopeartifactfilter.addscopeinternal(string)"], [462, "org.apache.maven.model.repositorypolicy.setenabled(string)"], [463, "org.apache.maven.model.building.defaultmodelbuildingrequest.setmodelbuildinglistener(modelbuildinglistener)"], [464, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseorganization(string;xmlpullparser;boolean)"], [465, "org.apache.maven.model.activation.getfile()"], [466, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cacherecord.defaultmavenmetadatacache$cacherecord(defaultmavenmetadatacache;artifact;artifact;set;map;list)"], [467, "org.apache.maven.artifact.defaultartifact.getartifacthandler()"], [468, "org.apache.maven.artifact.versioning.versionrange.getrecommendedversion()"], [469, "org.apache.maven.project.mavenproject.getdependencyartifacts()"], [470, "org.apache.maven.artifact.versioning.defaultartifactversion.getnextintegertoken(stringtokenizer)"], [471, "org.apache.maven.artifact.defaultartifact.getrepository()"], [472, "org.apache.maven.model.profile.defaultprofileactivationcontext.defaultprofileactivationcontext()"], [473, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.access$100()"], [474, "org.apache.maven.abstractcoremavencomponenttestcase.getpluginartifactrepositories()"], [475, "org.apache.maven.model.deploymentrepository.deploymentrepository()"], [476, "org.apache.maven.toolchain.requirementmatcherfactorytest.requirementmatcherfactorytest(string)"], [477, "org.apache.maven.artifact.versioning.defaultartifactversion.defaultartifactversion(string)"], [478, "org.apache.maven.artifact.resolver.artifactresolutionrequest.getcache()"], [479, "org.apache.maven.project.defaultprojectbuildingresult.getproject()"], [480, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.traverseobjectwithparents(class;object)"], [481, "org.apache.maven.artifact.repository.mavenartifactrepository.mavenartifactrepository()"], [482, "org.apache.maven.model.mailinglist.setunsubscribe(string)"], [483, "org.apache.maven.model.cimanagement.getsystem()"], [484, "org.apache.maven.repository.legacyrepositorysystem.injectproxy(list;list)"], [485, "org.apache.maven.model.mailinglist.setpost(string)"], [486, "org.apache.maven.model.profile.getactivation()"], [487, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.isqualifiedforinterpolation(field;class)"], [488, "org.apache.maven.model.reporting.clone()"], [489, "org.apache.maven.project.mavenproject.addtestcompilesourceroot(string)"], [490, "org.apache.maven.model.profile.activation.jdkversionprofileactivator.addzerotokens(list;int)"], [491, "org.apache.maven.model.building.modeldata.setrawmodel(model)"], [492, "org.apache.maven.model.io.xpp3.mavenxpp3reader.checkfieldwithduplicate(xmlpullparser;string;string;set)"], [493, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_modelversion(model;model;boolean;map)"], [494, "org.apache.maven.abstractcoremavencomponenttestcase.teardown()"], [495, "org.apache.maven.execution.defaultmavenexecutionrequest.setlocalrepository(artifactrepository)"], [496, "org.apache.maven.model.validation.defaultmodelvalidator.validateeffectivemodel(model;modelbuildingrequest;modelproblemcollector)"], [497, "org.apache.maven.lifecycle.lifecycle.getdefaultphases()"], [498, "org.apache.maven.model.mailinglist.setotherarchives(list)"], [499, "org.apache.maven.project.defaultprojectbuildingrequest.setprocessplugins(boolean)"], [500, "org.apache.maven.model.reportplugin.setartifactid(string)"], [501, "org.apache.maven.artifact.repository.mavenartifactrepository.getprotocol()"], [502, "org.apache.maven.project.mavenproject.getremoteartifactrepositories()"], [503, "org.apache.maven.model.profile.setactivation(activation)"], [504, "org.apache.maven.model.build.settestsourcedirectory(string)"], [505, "org.apache.maven.project.defaultprojectbuildingrequest.setrepositorycache(repositorycache)"], [506, "org.apache.maven.lifecycle.mapping.lifecycle.getid()"], [507, "org.apache.maven.model.building.defaultmodelproblemcollector.getproblems()"], [508, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.<clinit>()"], [509, "org.apache.maven.project.modelutilstest.createdependency(string;string;string)"], [510, "org.apache.maven.model.dependency.getmanagementkey()"], [511, "org.apache.maven.project.mavenproject.getversion()"], [512, "org.apache.maven.model.building.modeldata.getversion()"], [513, "org.apache.maven.project.artifact.projectartifact$pomartifacthandler.projectartifact$pomartifacthandler()"], [514, "org.apache.maven.model.repositorypolicy.clone()"], [515, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsereportplugin(string;xmlpullparser;boolean)"], [516, "org.apache.maven.settings.runtimeinfo.<clinit>()"], [517, "org.apache.maven.model.buildbase.gettestresources()"], [518, "org.apache.maven.projectdependenciesresolvertest.projectdependenciesresolvertest()"], [519, "org.apache.maven.model.modelbase.setpluginrepositories(list)"], [520, "org.apache.maven.artifact.repository.defaultrepositoryrequest.getlocalrepository()"], [521, "org.apache.maven.model.profile.defaultprofileactivationcontext.getactiveprofileids()"], [522, "org.apache.maven.model.prerequisites.setmaven(string)"], [523, "org.apache.maven.plugin.descriptor.plugindescriptor.getartifactid()"], [524, "org.apache.maven.lifecycle.mapping.lifecycle.getphases()"], [525, "org.apache.maven.model.model.getartifactid()"], [526, "org.apache.maven.model.configurationcontainer.setinherited(string)"], [527, "org.apache.maven.model.profile.activation.jdkversionprofileactivator$rangevalue.jdkversionprofileactivator$rangevalue(string;boolean)"], [528, "org.apache.maven.model.merge.modelmerger.mergepluginconfiguration_pluginmanagement(pluginconfiguration;pluginconfiguration;boolean;map)"], [529, "org.apache.maven.model.profile.activation.jdkversionprofileactivator$rangevalue.getvalue()"], [530, "org.apache.maven.model.activation.activation()"], [531, "org.apache.maven.model.plugin.plugin()"], [532, "org.apache.maven.project.defaultprojectbuildingrequest.getproject()"], [533, "org.apache.maven.artifact.resolver.defaultresolutionerrorhandler.throwerrors(artifactresolutionrequest;artifactresolutionresult)"], [534, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsemodel(string;xmlpullparser;boolean)"], [535, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.abstractstringbasedmodelinterpolator()"], [536, "org.apache.maven.model.build.settestoutputdirectory(string)"], [537, "org.apache.maven.artifact.defaultartifact.isrelease()"], [538, "org.apache.maven.model.cimanagement.seturl(string)"], [539, "org.apache.maven.project.mavenproject.getid()"], [540, "org.apache.maven.model.model.model()"], [541, "org.apache.maven.model.modelbase.adddependency(dependency)"], [542, "org.apache.maven.model.organization.geturl()"], [543, "org.apache.maven.model.activation.getos()"], [544, "org.apache.maven.artifact.artifactutils.versionlesskey(artifact)"], [545, "org.apache.maven.model.reporting.setplugins(list)"], [546, "org.apache.maven.artifact.resolver.filter.andartifactfilter.include(artifact)"], [547, "org.apache.maven.model.model.getcimanagement()"], [548, "org.apache.maven.execution.defaultmavenexecutionrequest.setremoterepositories(list)"], [549, "org.apache.maven.model.dependency.tostring()"], [550, "org.apache.maven.artifact.repository.metadata.io.defaultmetadatareader.defaultmetadatareader()"], [551, "org.apache.maven.profiles.manager.defaultprofilemanagertest.setup()"], [552, "org.apache.maven.artifact.resolver.filter.includesartifactfilter.include(artifact)"], [553, "org.apache.maven.model.merge.modelmerger.mergemodel_inceptionyear(model;model;boolean;map)"], [554, "org.apache.maven.model.profile.defaultprofileactivationcontext.setactiveprofileids(list)"], [555, "org.apache.maven.repository.legacy.resolver.transform.defaultartifacttransformationmanager.defaultartifacttransformationmanager()"], [556, "org.apache.maven.model.contributor.seturl(string)"], [557, "org.apache.maven.model.resource.<clinit>()"], [558, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseactivation(string;xmlpullparser;boolean)"], [559, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.setremoterepositories(list)"], [560, "org.apache.maven.model.building.defaultmodelbuilder.getparentpomfile(model)"], [561, "org.apache.maven.model.notifier.clone()"], [562, "org.apache.maven.project.artifact.mavenmetadatasource.createdependencyartifact(dependency;artifact;artifact)"], [563, "org.apache.maven.model.pluginconfiguration.getpluginmanagement()"], [564, "org.apache.maven.model.distributionmanagement.getsnapshotrepository()"], [565, "org.apache.maven.model.plugin.defaultlifecyclebindingsinjector$lifecyclebindingsmerger.defaultlifecyclebindingsinjector$lifecyclebindingsmerger()"], [566, "org.apache.maven.model.pluginexecution.setpriority(int)"], [567, "org.apache.maven.model.pluginmanagement.clone()"], [568, "org.apache.maven.model.management.defaultdependencymanagementinjector$managementmodelmerger.mergedependency_exclusions(dependency;dependency;boolean;map)"], [569, "org.apache.maven.model.reporting.getexcludedefaults()"], [570, "org.apache.maven.repository.legacy.resolver.transform.releaseartifacttransformation.transformforresolve(artifact;list;artifactrepository)"], [571, "org.apache.maven.artifact.defaultartifact.gettype()"], [572, "org.apache.maven.model.profile.activation.jdkversionprofileactivator.isrange(string)"], [573, "org.apache.maven.artifact.resolver.defaultartifactresolver.resolve(artifactresolutionrequest)"], [574, "org.apache.maven.repository.legacy.metadata.resolutiongroup.resolutiongroup(artifact;set;list)"], [575, "org.apache.maven.model.reportplugin.clone()"], [576, "org.apache.maven.model.scm.geturl()"], [577, "org.apache.maven.artifact.repository.artifactrepositorypolicy.artifactrepositorypolicy(boolean;string;string)"], [578, "org.apache.maven.project.modelutilstest.createplugin(string;string;string;map)"], [579, "org.apache.maven.model.building.filemodelsource.filemodelsource(file)"], [580, "org.apache.maven.artifact.repository.mavenartifactrepository.hashcode()"], [581, "org.apache.maven.model.profile.tostring()"], [582, "org.apache.maven.model.building.defaultmodelbuildingrequest.getpomfile()"], [583, "org.apache.maven.model.merge.modelmerger.mergedependency_type(dependency;dependency;boolean;map)"], [584, "org.apache.maven.model.normalization.defaultmodelnormalizer.defaultmodelnormalizer()"], [585, "org.apache.maven.model.validation.defaultmodelvalidator.validatesubelementstringnotempty(object;string;modelproblemcollector;string)"], [586, "org.apache.maven.model.merge.modelmerger.mergereportplugin_reportsets(reportplugin;reportplugin;boolean;map)"], [587, "org.apache.maven.model.reportset.clone()"], [588, "org.apache.maven.model.model.getname()"], [589, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_licenses(model;model;boolean;map)"], [590, "org.apache.maven.model.modelbase.getmodules()"], [591, "org.apache.maven.artifact.resolver.artifactresolutionrequest.getremoterepositories()"], [592, "org.apache.maven.model.building.modeldata.modeldata(model;string;string;string)"], [593, "org.apache.maven.model.model.getcontributors()"], [594, "org.apache.maven.model.extension.setversion(string)"], [595, "org.apache.maven.execution.defaultmavenexecutionresult.defaultmavenexecutionresult()"], [596, "org.apache.maven.artifact.resolver.filter.includesartifactfilter.hashcode()"], [597, "org.apache.maven.project.mavenproject.addscriptsourceroot(string)"], [598, "org.apache.maven.repository.legacyrepositorysystem.buildartifactrepositorypolicy(repositorypolicy)"], [599, "org.apache.maven.model.merge.modelmerger.mergescm(scm;scm;boolean;map)"], [600, "org.apache.maven.model.merge.modelmerger.merge(model;model;boolean;map)"], [601, "org.apache.maven.model.plugin.getkey()"], [602, "org.apache.maven.model.building.defaultmodelbuildingrequest.setinactiveprofileids(list)"], [603, "org.apache.maven.repository.legacyrepositorysystem.getproxy(artifactrepository;list)"], [604, "org.apache.maven.model.building.defaultmodelbuildingrequest.getmodelresolver()"], [605, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parserepositorypolicy(string;xmlpullparser;boolean)"], [606, "org.apache.maven.model.modelbase.modelbase()"], [607, "org.apache.maven.model.reportplugin.getkey()"], [608, "org.apache.maven.model.modelbase.getpluginrepositories()"], [609, "org.apache.maven.artifact.defaultartifact.setdownloadurl(string)"], [610, "org.apache.maven.lifecycle.lifecycleexecutortest.setup()"], [611, "org.apache.maven.model.cimanagement.geturl()"], [612, "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.<clinit>()"], [613, "org.apache.maven.project.defaultprojectbuilder.getprofileids(list)"], [614, "org.apache.maven.model.fileset.fileset()"], [615, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsereportset(string;xmlpullparser;boolean)"], [616, "org.apache.maven.model.pluginmanagement.pluginmanagement()"], [617, "org.apache.maven.execution.defaultmavenexecutionrequest.setbasedirectory(file)"], [618, "org.apache.maven.model.merge.modelmerger.mergesite_name(site;site;boolean;map)"], [619, "org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.newproperties(string)"], [620, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.getcache()"], [621, "org.apache.maven.repository.legacy.resolver.defaultlegacyartifactcollector.fireevent(int;list;resolutionnode;artifact)"], [622, "org.apache.maven.model.merge.modelmerger.mergepluginexecution_id(pluginexecution;pluginexecution;boolean;map)"], [623, "org.apache.maven.lifecycle.mapping.lifecycle.setid(string)"], [624, "org.apache.maven.project.mavenproject.setactiveprofiles(list)"], [625, "org.apache.maven.model.building.defaultmodelbuildingresult.getproblems()"], [626, "org.apache.maven.model.reportplugin.setgroupid(string)"], [627, "org.apache.maven.execution.projectsortertest.createproject(string;string;string)"], [628, "org.apache.maven.model.activationproperty.getname()"], [629, "org.apache.maven.lifecycle.mapping.defaultlifecyclemapping.getlifecycles()"], [630, "org.apache.maven.model.resource.resource()"], [631, "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.constructmessagebase(string;string;string;string;string;list;list)"], [632, "org.apache.maven.model.validation.defaultmodelvalidator.defaultmodelvalidator()"], [633, "org.apache.maven.model.reportplugin.setreportsets(list)"], [634, "org.apache.maven.artifact.resolver.filter.includesartifactfilter.equals(object)"], [635, "org.apache.maven.model.merge.mavenmodelmerger.mergescm_connection(scm;scm;boolean;map)"], [636, "org.apache.maven.model.building.defaultmodelbuildingrequest.setmodelsource(modelsource)"], [637, "org.apache.maven.model.organization.clone()"], [638, "org.apache.maven.plugin.pluginparameterexpressionevaluator.pluginparameterexpressionevaluator(mavensession;mojoexecution)"], [639, "org.apache.maven.artifact.repository.mavenartifactrepository.equals(object)"], [640, "org.apache.maven.model.repositorybase.getid()"], [641, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.getremoterepositories()"], [642, "org.apache.maven.model.validation.defaultmodelvalidator.hasexpression(string)"], [643, "org.apache.maven.project.mavenproject.getfile()"], [644, "org.apache.maven.repository.ideworkspace.testideworkspacerepository.find(artifact)"], [645, "org.apache.maven.model.path.defaultmodelpathtranslator.defaultmodelpathtranslator()"], [646, "org.apache.maven.plugin.descriptor.plugindescriptor.plugindescriptor()"], [647, "org.apache.maven.model.exclusion.setartifactid(string)"], [648, "org.apache.maven.model.build.getscriptsourcedirectory()"], [649, "org.apache.maven.artifact.versioning.comparableversion$integeritem.comparableversion$integeritem(string)"], [650, "org.apache.maven.model.model.setcimanagement(cimanagement)"], [651, "org.apache.maven.artifact.repository.mavenartifactrepository.basedir(string)"], [652, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cacherecord.getremoterepositories()"], [653, "org.apache.maven.artifact.defaultartifact.tostring()"], [654, "org.apache.maven.model.building.simpleproblemcollector.geterrors()"], [655, "org.apache.maven.artifact.versioning.restriction.containsversion(artifactversion)"], [656, "org.apache.maven.model.reportplugin.setversion(string)"], [657, "org.apache.maven.model.model.getprofiles()"], [658, "org.apache.maven.model.profile.defaultprofileactivationcontext.setinactiveprofileids(list)"], [659, "org.apache.maven.project.mavenproject.getprojectreferenceid(string;string;string)"], [660, "org.apache.maven.model.buildbase.buildbase()"], [661, "org.apache.maven.model.model.setname(string)"], [662, "org.apache.maven.model.profile.defaultprofileinjector$profilemodelmerger.mergeplugincontainer_plugins(plugincontainer;plugincontainer;boolean;map)"], [663, "org.apache.maven.repository.defaultmirrorselector.defaultmirrorselector()"], [664, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.stringsearchmodelinterpolator$interpolateobjectaction(object;list;list;stringsearchmodelinterpolator;modelproblemcollector)"], [665, "org.apache.maven.model.developer.developer()"], [666, "org.apache.maven.model.merge.modelmerger.mergerepository(repository;repository;boolean;map)"], [667, "org.apache.maven.model.build.build()"], [668, "org.apache.maven.lifecycle.lifecycleexecutortest.lifecycleexecutortest()"], [669, "org.apache.maven.defaultprojectdependenciesresolver.resolve(collection;collection;mavensession)"], [670, "org.apache.maven.model.extension.setgroupid(string)"], [671, "org.apache.maven.artifact.versioning.restriction.islowerboundinclusive()"], [672, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseplugin(string;xmlpullparser;boolean)"], [673, "org.apache.maven.model.merge.modelmerger.mergerepositorybase_name(repositorybase;repositorybase;boolean;map)"], [674, "org.apache.maven.model.building.defaultmodelbuilder.defaultmodelbuilder()"], [675, "org.apache.maven.model.normalization.defaultmodelnormalizer.injectdependencydefaults(list)"], [676, "org.apache.maven.project.defaultprojectbuildingrequest.isprocessplugins()"], [677, "org.apache.maven.repository.legacyrepositorysystem.ordinalofupdatepolicy(string)"], [678, "org.apache.maven.artifact.resolver.resolutionnode.resolutionnode(artifact;list)"], [679, "org.apache.maven.model.plugin.defaultlifecyclebindingsinjector$lifecyclebindingsmerger.defaultlifecyclebindingsinjector$lifecyclebindingsmerger(1)"], [680, "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.abstractartifactresolutionexception(string;string;string;string;string;string;list;list)"], [681, "org.apache.maven.model.merge.modelmerger.mergecimanagement_url(cimanagement;cimanagement;boolean;map)"], [682, "org.apache.maven.model.site.setname(string)"], [683, "org.apache.maven.repository.delegatinglocalartifactrepository.equals(object)"], [684, "org.apache.maven.artifact.versioning.comparableversion$stringitem.comparableversion$stringitem(string;boolean)"], [685, "org.apache.maven.model.merge.modelmerger.mergemodel_build(model;model;boolean;map)"], [686, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.createpostprocessors(model;file;modelbuildingrequest)"], [687, "org.apache.maven.model.management.defaultpluginmanagementinjector$managementmodelmerger.defaultpluginmanagementinjector$managementmodelmerger(1)"], [688, "org.apache.maven.repository.legacy.metadata.resolutiongroup.resolutiongroup(artifact;artifact;set;map;list)"], [689, "org.apache.maven.artifact.versioning.restriction.restriction(artifactversion;boolean;artifactversion;boolean)"], [690, "org.apache.maven.model.merge.mavenmodelmerger.mergesite_url(site;site;boolean;map)"], [691, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.setartifact(artifact)"], [692, "org.apache.maven.model.building.defaultmodelbuildingrequest.getmodelbuildinglistener()"], [693, "org.apache.maven.model.cimanagement.cimanagement()"], [694, "org.apache.maven.artifact.resolver.filter.cumulativescopeartifactfilter.addscopes(collection)"], [695, "org.apache.maven.model.merge.modelmerger.mergeparent_version(parent;parent;boolean;map)"], [696, "org.apache.maven.model.validation.defaultmodelvalidatortest.defaultmodelvalidatortest()"], [697, "org.apache.maven.model.merge.modelmerger.mergereporting(reporting;reporting;boolean;map)"], [698, "org.apache.maven.artifact.factory.defaultartifactfactory.createartifact(string;string;versionrange;string;string;string;string)"], [699, "org.apache.maven.model.model.getprojectdirectory()"], [700, "org.apache.maven.plugin.mojoexecution.mojoexecution(mojodescriptor)"], [701, "org.apache.maven.model.profile.getid()"], [702, "org.apache.maven.model.merge.modelmerger.mergedistributionmanagement_status(distributionmanagement;distributionmanagement;boolean;map)"], [703, "org.apache.maven.model.merge.mavenmodelmerger.mavenmodelmerger()"], [704, "org.apache.maven.artifact.resolver.artifactresolutionrequest.isresolveroot()"], [705, "org.apache.maven.lifecycle.lifecycleexecutortest.teardown()"], [706, "org.apache.maven.project.defaultprojectbuildingrequest.getpluginartifactrepositories()"], [707, "org.apache.maven.model.composition.defaultdependencymanagementimporter.defaultdependencymanagementimporter()"], [708, "org.apache.maven.repository.legacyrepositorysystemtest.setup()"], [709, "org.apache.maven.artifact.resolver.resolutionnode.getartifact()"], [710, "org.apache.maven.model.building.filemodelsource.getinputstream()"], [711, "org.apache.maven.artifact.resolver.filter.cumulativescopeartifactfilter.include(artifact)"], [712, "org.apache.maven.model.plugin.getextensions()"], [713, "org.apache.maven.model.modelbase.getdistributionmanagement()"], [714, "org.apache.maven.model.exclusion.getartifactid()"], [715, "org.apache.maven.project.modelutilstest.modelutilstest()"], [716, "org.apache.maven.model.scm.setdeveloperconnection(string)"], [717, "org.apache.maven.artifact.resolver.defaultresolutionerrorhandler.defaultresolutionerrorhandler()"], [718, "org.apache.maven.model.resource.setfiltering(string)"], [719, "org.apache.maven.profiles.defaultprofilemanager.activateasdefault(string)"], [720, "org.apache.maven.model.io.xpp3.mavenxpp3reader.read(reader;boolean)"], [721, "org.apache.maven.project.mavenproject.addpath(list;string)"], [722, "org.apache.maven.execution.mavensession.getrequest()"], [723, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_name(model;model;boolean;map)"], [724, "org.apache.maven.project.defaultprojectbuildingrequest.getsystemproperties()"], [725, "org.apache.maven.artifact.resolver.artifactresolutionresult.getartifactresolutionnodes()"], [726, "org.apache.maven.model.patternset.setincludes(list)"], [727, "org.apache.maven.model.validation.defaultmodelvalidator.addviolation(modelproblemcollector;boolean;string)"], [728, "org.apache.maven.artifact.repository.mavenartifactrepository.getbasedir()"], [729, "org.apache.maven.artifact.resolver.artifactnotfoundexception.artifactnotfoundexception(string;artifact)"], [730, "org.apache.maven.project.mavenproject.setartifact(artifact)"], [731, "org.apache.maven.model.reportplugin.isinherited()"], [732, "org.apache.maven.project.inheritance.t09.projectinheritancetest.projectinheritancetest()"], [733, "org.apache.maven.artifact.resolver.artifactresolutionrequest.artifactresolutionrequest()"], [734, "org.apache.maven.model.model.seturl(string)"], [735, "org.apache.maven.model.profile.defaultprofileinjector$profilemodelmerger.mergebuildbase(buildbase;buildbase)"], [736, "org.apache.maven.model.model.getversion()"], [737, "org.apache.maven.artifact.repository.mavenartifactrepository.mavenartifactrepository(string;string;artifactrepositorylayout;artifactrepositorypolicy;artifactrepositorypolicy)"], [738, "org.apache.maven.model.merge.modelmerger.mergebuild(build;build;boolean;map)"], [739, "org.apache.maven.model.plugin.getdependencies()"], [740, "org.apache.maven.model.distributionmanagement.setrepository(deploymentrepository)"], [741, "org.apache.maven.plugin.descriptor.plugindescriptor.getid()"], [742, "org.apache.maven.project.inheritance.t02.projectinheritancetest.projectinheritancetest()"], [743, "org.apache.maven.project.artifact.defaultmavenmetadatacache.artifactequals(artifact;artifact)"], [744, "org.apache.maven.model.profile.activation.propertyprofileactivator.propertyprofileactivator()"], [745, "org.apache.maven.project.artifact.mavenmetadatasource$projectrelocation.access$000(projectrelocation)"], [746, "org.apache.maven.execution.defaultmavenexecutionrequest.setpluginartifactrepositories(list)"], [747, "org.apache.maven.lifecycle.mapping.lifecycle.setphases(map)"], [748, "org.apache.maven.model.merge.modelmerger.mergebuildbase(buildbase;buildbase;boolean;map)"], [749, "org.apache.maven.model.modelbase.clone()"], [750, "org.apache.maven.model.parent.setgroupid(string)"], [751, "org.apache.maven.model.plugin.setversion(string)"], [752, "org.apache.maven.model.merge.modelmerger.mergedependency_version(dependency;dependency;boolean;map)"], [753, "org.apache.maven.profiles.defaultprofilemanager.explicitlyactivate(string)"], [754, "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.constructartifactpath(list;string)"], [755, "org.apache.maven.artifact.resolver.resolutionnode.filtertrail(artifactfilter)"], [756, "org.apache.maven.model.site.site()"], [757, "org.apache.maven.project.defaultprojectbuildingrequest.isforceupdate()"], [758, "org.apache.maven.model.merge.modelmerger.mergebuildbase_finalname(buildbase;buildbase;boolean;map)"], [759, "org.apache.maven.model.activationproperty.setname(string)"], [760, "org.apache.maven.model.merge.mavenmodelmerger.getreportsetkey(reportset)"], [761, "org.apache.maven.model.building.defaultmodelbuilder.build(modelbuildingrequest;modelbuildingresult;collection)"], [762, "org.apache.maven.project.inheritance.t12scm.projectinheritancetest.projectinheritancetest()"], [763, "org.apache.maven.model.merge.modelmerger.mergeparent_artifactid(parent;parent;boolean;map)"], [764, "org.apache.maven.defaultprojectdependenciesresolver.defaultprojectdependenciesresolver()"], [765, "org.apache.maven.model.building.defaultmodelbuildingresult.getmodelids()"], [766, "org.apache.maven.model.pluginconfiguration.setpluginmanagement(pluginmanagement)"], [767, "org.apache.maven.model.plugin.clone()"], [768, "org.apache.maven.model.repository.getreleases()"], [769, "org.apache.maven.artifact.defaultartifact.setversion(string)"], [770, "org.apache.maven.model.merge.modelmerger.mergereportplugin_configuration(reportplugin;reportplugin;boolean;map)"], [771, "org.apache.maven.model.repositorypolicy.getupdatepolicy()"], [772, "org.apache.maven.repository.legacyrepositorysystemtest.teardown()"], [773, "org.apache.maven.model.model.setgroupid(string)"], [774, "org.apache.maven.model.merge.modelmerger.mergeparent(parent;parent;boolean;map)"], [775, "org.apache.maven.model.dependency.setartifactid(string)"], [776, "org.apache.maven.model.dependency.setscope(string)"], [777, "org.apache.maven.artifact.resolver.artifactresolutionresult.getartifacts()"], [778, "org.apache.maven.model.building.defaultmodelproblemcollector.setsource(string)"], [779, "org.apache.maven.artifact.metadata.resolutiongroup.resolutiongroup(artifact;set;list)"], [780, "org.apache.maven.artifact.handler.defaultartifacthandler.isincludesdependencies()"], [781, "org.apache.maven.project.defaultprojectbuildingresult.defaultprojectbuildingresult(mavenproject;list;artifactresolutionresult)"], [782, "org.apache.maven.project.mavenproject.setparentfile(file)"], [783, "org.apache.maven.model.modelbase.setproperties(properties)"], [784, "org.apache.maven.artifact.versioning.managedversionmap.managedversionmap(map)"], [785, "org.apache.maven.model.merge.modelmerger.mergeconfigurationcontainer_inherited(configurationcontainer;configurationcontainer;boolean;map)"], [786, "org.apache.maven.artifact.repository.artifactrepositorypolicy.getupdatepolicy()"], [787, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setlocalrepository(artifactrepository)"], [788, "org.apache.maven.model.dependency.getexclusions()"], [789, "org.apache.maven.artifact.artifactutils.copyartifacts(map;map)"], [790, "org.apache.maven.model.merge.modelmerger.mergerepositorybase_id(repositorybase;repositorybase;boolean;map)"], [791, "org.apache.maven.model.building.defaultmodelbuildingresult.getactiveexternalprofiles()"], [792, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsereporting(string;xmlpullparser;boolean)"], [793, "org.apache.maven.project.mavenproject.setmodel(model)"], [794, "org.apache.maven.project.mavenproject.getbasedir()"], [795, "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.abstractartifactresolutionexception(string;artifact;list)"], [796, "org.apache.maven.plugin.descriptor.mojodescriptor.getid()"], [797, "org.apache.maven.artifact.repository.artifactrepositorypolicy.isenabled()"], [798, "org.apache.maven.model.merge.mavenmodelmerger.mergebuildbase_testresources(buildbase;buildbase;boolean;map)"], [799, "org.apache.maven.model.repositorybase.setname(string)"], [800, "org.apache.maven.project.artifact.defaultmavenmetadatacache.put(artifact;boolean;artifactrepository;list;resolutiongroup)"], [801, "org.apache.maven.model.building.defaultmodelbuildingrequest.istwophasebuilding()"], [802, "org.apache.maven.artifact.repository.defaultrepositoryrequest.setcache(repositorycache)"], [803, "org.apache.maven.execution.defaultmavenexecutionrequest.getusersettingsfile()"], [804, "org.apache.maven.artifact.factory.defaultartifactfactory.createprojectartifact(string;string;string)"], [805, "org.apache.maven.profiles.defaultprofilemanager.addprofile(profile)"], [806, "org.apache.maven.model.repositorypolicy.setupdatepolicy(string)"], [807, "org.apache.maven.repository.legacy.resolver.transform.defaultartifacttransformationmanager.transformforresolve(artifact;repositoryrequest)"], [808, "org.apache.maven.model.building.defaultmodelbuilder.getprofileactivationcontext(modelbuildingrequest)"], [809, "org.apache.maven.project.mavenproject.mavenproject(model)"], [810, "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.abstractartifactresolutionexception(string;string;string;string;string;string;list;list;throwable)"], [811, "org.apache.maven.execution.mavensession.getlocalrepository()"], [812, "org.apache.maven.artifact.repository.mavenartifactrepository.getid()"], [813, "org.apache.maven.project.repositorymodelresolver.repositorymodelresolver(repositorysystem;resolutionerrorhandler;projectbuildingrequest;reactormodelpool)"], [814, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsedeveloper(string;xmlpullparser;boolean)"], [815, "org.apache.maven.model.scm.getdeveloperconnection()"], [816, "org.apache.maven.project.defaultprojectbuildingrequest.getuserproperties()"], [817, "org.apache.maven.project.defaultprojectbuildingrequest.setpluginartifactrepositories(list)"], [818, "org.apache.maven.model.activation.getjdk()"], [819, "org.apache.maven.model.activationos.setfamily(string)"], [820, "org.apache.maven.artifact.versioning.restriction.getupperbound()"], [821, "org.apache.maven.model.validation.defaultmodelvalidator.validatestringnotempty(string;modelproblemcollector;boolean;string)"], [822, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cacherecord.getmanagedversions()"], [823, "org.apache.maven.plugin.descriptor.mojodescriptor.getrolehint()"], [824, "org.apache.maven.model.plugin.defaultlifecyclebindingsinjector.defaultlifecyclebindingsinjector()"], [825, "org.apache.maven.artifact.handler.defaultartifacthandler.getclassifier()"], [826, "org.apache.maven.artifact.defaultartifact.getartifactid()"], [827, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsemailinglist(string;xmlpullparser;boolean)"], [828, "org.apache.maven.model.profile.activation.operatingsystemprofileactivator.isactive(profile;profileactivationcontext;modelproblemcollector)"], [829, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseissuemanagement(string;xmlpullparser;boolean)"], [830, "org.apache.maven.artifact.repository.mavenartifactrepository.getreleases()"], [831, "org.apache.maven.abstractcoremavencomponenttestcase$projectbuilder.adddependency(string;string;string;string;exclusion)"], [832, "org.apache.maven.artifact.defaultartifact.setrelease(boolean)"], [833, "org.apache.maven.model.io.defaultmodelreader.defaultmodelreader()"], [834, "org.apache.maven.plugin.defaultpluginrealmcache.defaultpluginrealmcache()"], [835, "org.apache.maven.artifact.resolver.artifactresolutionresult.setoriginatingartifact(artifact)"], [836, "org.apache.maven.artifact.resolver.artifactresolutionrequest.getcollectionfilter()"], [837, "org.apache.maven.artifact.resolver.resolutionnode.resolutionnode(artifact;list;resolutionnode)"], [838, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsebuildbase(string;xmlpullparser;boolean)"], [839, "org.apache.maven.project.artifact.mavenmetadatasource$projectrelocation.access$002(projectrelocation;artifact)"], [840, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setresolutionfilter(artifactfilter)"], [841, "org.apache.maven.model.merge.modelmerger.mergebuild_extensions(build;build;boolean;map)"], [842, "org.apache.maven.model.merge.mavenmodelmerger.mergescm_developerconnection(scm;scm;boolean;map)"], [843, "org.apache.maven.model.model.setartifactid(string)"], [844, "org.apache.maven.model.profile.activation.operatingsystemprofileactivator.determinefamilymatch(string)"], [845, "org.apache.maven.model.dependency.setexclusions(list)"], [846, "org.apache.maven.model.io.xpp3.mavenxpp3reader.read(reader)"], [847, "org.apache.maven.model.pluginconfiguration.pluginconfiguration()"], [848, "org.apache.maven.model.developer.setid(string)"], [849, "org.apache.maven.model.notifier.settype(string)"], [850, "org.apache.maven.project.defaultprojectbuildingrequest.getrepositorycache()"], [851, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.access$000()"], [852, "org.apache.maven.repository.legacyrepositorysystem.createartifact(string;string;string;string;string)"], [853, "org.apache.maven.model.merge.modelmerger.mergedependencymanagement_dependencies(dependencymanagement;dependencymanagement;boolean;map)"], [854, "org.apache.maven.artifact.resolver.resolutionnode.getdepth()"], [855, "org.apache.maven.maventest.maventest()"], [856, "org.apache.maven.model.management.defaultpluginmanagementinjector.injectmanagement(model;modelbuildingrequest;modelproblemcollector)"], [857, "org.apache.maven.model.merge.modelmerger.mergereportplugin_groupid(reportplugin;reportplugin;boolean;map)"], [858, "org.apache.maven.model.management.defaultpluginmanagementinjector.defaultpluginmanagementinjector()"], [859, "org.apache.maven.artifact.versioning.versionrange.createfromversionspec(string)"], [860, "org.apache.maven.project.artifact.mavenmetadatasource.retrieverelocatedproject(artifact;repositoryrequest)"], [861, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setartifact(artifact)"], [862, "org.apache.maven.project.defaultmodelbuildinglistener.buildextensionsassembled(modelbuildingevent)"], [863, "org.apache.maven.model.io.xpp3.mavenxpp3reader.mavenxpp3reader()"], [864, "org.apache.maven.model.building.defaultmodelbuildingrequest.setprocessplugins(boolean)"], [865, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.interpolatemodel(model;file;modelbuildingrequest;modelproblemcollector)"], [866, "org.apache.maven.execution.mavensession.getrepositorycache()"], [867, "org.apache.maven.artifact.repository.mavenartifactrepository.getauthentication()"], [868, "org.apache.maven.model.profile.defaultprofileactivationcontext.getsystemproperties()"], [869, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.defaultmetadataresolutionrequest(repositoryrequest)"], [870, "org.apache.maven.execution.defaultmavenexecutionrequest.setprojectpresent(boolean)"], [871, "org.apache.maven.model.activation.setproperty(activationproperty)"], [872, "org.apache.maven.execution.mavensession.getexecutionproperties()"], [873, "org.apache.maven.plugin.pluginparameterexpressionevaluator.striptokens(string)"], [874, "org.apache.maven.model.building.defaultmodelbuildingresult.geteffectivemodel()"], [875, "org.apache.maven.model.profile.defaultprofileinjector$profilemodelmerger.defaultprofileinjector$profilemodelmerger()"], [876, "org.apache.maven.model.merge.modelmerger.mergeparent_groupid(parent;parent;boolean;map)"], [877, "org.apache.maven.model.building.defaultmodelbuildingrequest.defaultmodelbuildingrequest()"], [878, "org.apache.maven.model.dependency.getoptional()"], [879, "org.apache.maven.defaultprojectdependenciesresolver.resolve(mavenproject;collection;mavensession)"], [880, "org.apache.maven.artifact.repository.mavenartifactrepository.setauthentication(authentication)"], [881, "org.apache.maven.project.defaultprojectbuildingrequest.getbuildstarttime()"], [882, "org.apache.maven.artifact.artifactutils.key(string;string;string)"], [883, "org.apache.maven.model.building.simpleproblemcollector.getwarnings()"], [884, "org.apache.maven.model.merge.modelmerger.mergemodel_groupid(model;model;boolean;map)"], [885, "org.apache.maven.model.cimanagement.getnotifiers()"], [886, "org.apache.maven.model.management.defaultpluginmanagementinjector$managementmodelmerger.defaultpluginmanagementinjector$managementmodelmerger()"], [887, "org.apache.maven.model.model.setpomfile(file)"], [888, "org.apache.maven.model.profile.defaultprofileactivationcontext.getinactiveprofileids()"], [889, "org.apache.maven.plugin.version.internal.defaultpluginversionresolver.defaultpluginversionresolver()"], [890, "org.apache.maven.project.inheritance.t12.projectinheritancetest.projectinheritancetest()"], [891, "org.apache.maven.model.building.defaultmodelbuilder.configureresolver(modelresolver;model;defaultmodelproblemcollector)"], [892, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsesite(string;xmlpullparser;boolean)"], [893, "org.apache.maven.model.plugin.defaultreportingconverter.defaultreportingconverter()"], [894, "org.apache.maven.model.model.setversion(string)"], [895, "org.apache.maven.model.building.modeldata.getrawmodel()"], [896, "org.apache.maven.model.merge.modelmerger.modelmerger()"], [897, "org.apache.maven.model.modelbase.setmodules(list)"], [898, "org.apache.maven.project.mavenproject.getartifactid()"], [899, "org.apache.maven.repository.localartifactrepository.localartifactrepository()"], [900, "org.apache.maven.model.merge.modelmerger.mergepluginexecution_phase(pluginexecution;pluginexecution;boolean;map)"], [901, "org.apache.maven.model.model.tostring()"], [902, "org.apache.maven.model.license.setdistribution(string)"], [903, "org.apache.maven.model.build.setextensions(list)"], [904, "org.apache.maven.artifact.versioning.comparableversion$listitem.normalize()"], [905, "org.apache.maven.artifact.resolver.resolutionnode.isactive()"], [906, "org.apache.maven.artifact.defaultartifact.getbaseversioninternal()"], [907, "org.apache.maven.model.plugincontainer.addplugin(plugin)"], [908, "org.apache.maven.model.profile.defaultprofileactivationcontext.setuserproperties(properties)"], [909, "org.apache.maven.execution.defaultmavenexecutionrequest.getbasedirectory()"], [910, "org.apache.maven.project.artifact.projectartifact.projectartifact(mavenproject)"], [911, "org.apache.maven.plugin.defaultbuildpluginmanager.defaultbuildpluginmanager()"], [912, "org.apache.maven.artifact.artifactutils.versionlesskey(string;string)"], [913, "org.apache.maven.model.io.defaultmodelreader.read(inputstream;map)"], [914, "org.apache.maven.artifact.resolver.filter.abstractscopeartifactfilter.include(artifact)"], [915, "org.apache.maven.model.model.getmailinglists()"], [916, "org.apache.maven.model.validation.defaultmodelvalidator.validateenum(string;modelproblemcollector;boolean;string;string;string[])"], [917, "org.apache.maven.settings.validation.defaultsettingsvalidatortest.defaultsettingsvalidatortest(string)"], [918, "org.apache.maven.repository.defaultmirrorselector.getmirror(artifactrepository;list)"], [919, "org.apache.maven.model.buildbase.settestresources(list)"], [920, "org.apache.maven.project.mavenproject.getbuildplugins()"], [921, "org.apache.maven.artifact.defaultartifact.getmetadatalist()"], [922, "org.apache.maven.model.parent.getartifactid()"], [923, "org.apache.maven.projectdependenciesresolvertest.teardown()"], [924, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.isqualifiedforinterpolation(class)"], [925, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cacherecord.getrelocatedartifact()"], [926, "org.apache.maven.model.repository.setreleases(repositorypolicy)"], [927, "org.apache.maven.model.mailinglist.clone()"], [928, "org.apache.maven.model.plugin.getexecutionsasmap()"], [929, "org.apache.maven.model.repositorybase.getlayout()"], [930, "org.apache.maven.model.profile.activation.propertyprofileactivatortest.newproperties(string;string)"], [931, "org.apache.maven.repository.delegatinglocalartifactrepository.find(artifact)"], [932, "org.apache.maven.model.deploymentrepository.clone()"], [933, "org.apache.maven.project.mavenproject.getscriptsourceroots()"], [934, "org.apache.maven.model.merge.modelmerger.mergeplugin_extensions(plugin;plugin;boolean;map)"], [935, "org.apache.maven.model.model.getpomfile()"], [936, "org.apache.maven.model.parent.getrelativepath()"], [937, "org.apache.maven.model.merge.mavenmodelmerger.mergemodelbase_modules(modelbase;modelbase;boolean;map)"], [938, "org.apache.maven.model.dependency.setversion(string)"], [939, "org.apache.maven.model.profile.defaultprofileselector.isactive(profile;profileactivationcontext;modelproblemcollector)"], [940, "org.apache.maven.model.building.defaultmodelbuilder.getcache(modelcache;string;string;string;modelcachetag)"], [941, "org.apache.maven.model.model.getid()"], [942, "org.apache.maven.artifact.resolver.artifactresolutionrequest.getartifact()"], [943, "org.apache.maven.model.repositorybase.setlayout(string)"], [944, "org.apache.maven.model.modelbase.addproperty(string;string)"], [945, "org.apache.maven.model.activationos.getversion()"], [946, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setoffline(boolean)"], [947, "org.apache.maven.artifact.artifactutils.copyartifactsafe(artifact)"], [948, "org.apache.maven.settings.runtimeinfo.runtimeinfo(file)"], [949, "org.apache.maven.model.normalization.defaultmodelnormalizer.mergeduplicates(model;modelbuildingrequest;modelproblemcollector)"], [950, "org.apache.maven.model.model.setdevelopers(list)"], [951, "org.apache.maven.artifact.artifactutils.copyartifact(artifact)"], [952, "org.apache.maven.model.building.modeldata.modeldata(model)"], [953, "org.apache.maven.execution.defaultmavenexecutionrequest.getsystemproperties()"], [954, "org.apache.maven.model.management.defaultdependencymanagementinjector$managementmodelmerger.defaultdependencymanagementinjector$managementmodelmerger()"], [955, "org.apache.maven.project.inheritance.t05.projectinheritancetest.projectinheritancetest()"], [956, "org.apache.maven.artifact.resolver.artifactresolutionexception.artifactresolutionexception(string;artifact;list)"], [957, "org.apache.maven.model.repositorybase.repositorybase()"], [958, "org.apache.maven.artifact.resolver.abstractartifactresolutionexception.constructmissingartifactmessage(string;string;string;string;string;string;string;string;list)"], [959, "org.apache.maven.model.contributor.setroles(list)"], [960, "org.apache.maven.model.dependency.getversion()"], [961, "org.apache.maven.artifact.resolver.filter.cumulativescopeartifactfilter.getscopes()"], [962, "org.apache.maven.artifact.resolver.artifactresolutionrequest.artifactresolutionrequest(repositoryrequest)"], [963, "org.apache.maven.model.profile.activation.operatingsystemprofileactivator.operatingsystemprofileactivator()"], [964, "org.apache.maven.model.modelbase.getreporting()"], [965, "org.apache.maven.project.defaultprojectbuildingrequest.setlocalrepository(artifactrepository)"], [966, "org.apache.maven.execution.defaultmavenexecutionrequest.getuserproperties()"], [967, "org.apache.maven.model.notifier.notifier()"], [968, "org.apache.maven.repository.legacyrepositorysystem.createartifactrepository(string;string;artifactrepositorylayout;artifactrepositorypolicy;artifactrepositorypolicy)"], [969, "org.apache.maven.model.mailinglist.setarchive(string)"], [970, "org.apache.maven.model.activationos.activationos()"], [971, "org.apache.maven.repository.legacy.resolver.defaultlegacyartifactcollector.checkscopeupdate(resolutionnode;resolutionnode;list)"], [972, "org.apache.maven.model.license.license()"], [973, "org.apache.maven.model.organization.getname()"], [974, "org.apache.maven.plugin.descriptor.plugindescriptor.setgroupid(string)"], [975, "org.apache.maven.artifact.resolver.defaultartifactresolver.defaultartifactresolver()"], [976, "org.apache.maven.model.distributionmanagement.distributionmanagement()"], [977, "org.apache.maven.model.merge.modelmerger.mergereporting_excludedefaults(reporting;reporting;boolean;map)"], [978, "org.apache.maven.project.defaultprojectbuildingrequest.setvalidationlevel(int)"], [979, "org.apache.maven.project.modelutils.mergeplugindefinitions(plugin;plugin;boolean)"], [980, "org.apache.maven.artifact.resolver.resolutionnode.ischildofrootnode()"], [981, "org.apache.maven.execution.sessionrepositorycache.sessionrepositorycache()"], [982, "org.apache.maven.model.merge.modelmerger.mergerepository_releases(repository;repository;boolean;map)"], [983, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setartifactdependencies(set)"], [984, "org.apache.maven.model.merge.modelmerger.mergereportplugin_version(reportplugin;reportplugin;boolean;map)"], [985, "org.apache.maven.model.inheritance.defaultinheritanceassembler.defaultinheritanceassembler()"], [986, "org.apache.maven.model.merge.modelmerger.mergedependency_optional(dependency;dependency;boolean;map)"], [987, "org.apache.maven.model.modelbase.getproperties()"], [988, "org.apache.maven.model.reportset.getid()"], [989, "org.apache.maven.model.parent.setartifactid(string)"], [990, "org.apache.maven.artifact.repository.mavenartifactrepository.eq(object;object)"], [991, "org.apache.maven.project.artifact.defaultmavenmetadatacache.access$100(artifact;artifact)"], [992, "org.apache.maven.artifact.defaultartifact.setbaseversion(string)"], [993, "org.apache.maven.artifact.versioning.versionrange.intersection(list;list)"], [994, "org.apache.maven.model.merge.modelmerger.mergemodel(model;model;boolean;map)"], [995, "org.apache.maven.model.plugincontainer.plugincontainer()"], [996, "org.apache.maven.repository.ideworkspace.testideworkspacerepository.testideworkspacerepository()"], [997, "org.apache.maven.model.model.setdescription(string)"], [998, "org.apache.maven.artifact.factory.defaultartifactfactory.createartifact(string;string;string;string;string)"], [999, "org.apache.maven.plugin.defaultplugindescriptorcache.defaultplugindescriptorcache()"], [1000, "org.apache.maven.project.inheritance.t06.projectinheritancetest.projectinheritancetest()"], [1001, "org.apache.maven.model.modelbase.setrepositories(list)"], [1002, "org.apache.maven.model.merge.modelmerger.mergemodelbase_pluginrepositories(modelbase;modelbase;boolean;map)"], [1003, "org.apache.maven.execution.mavensession.setcurrentproject(mavenproject)"], [1004, "org.apache.maven.model.merge.modelmerger.mergerepositorybase_layout(repositorybase;repositorybase;boolean;map)"], [1005, "org.apache.maven.plugin.descriptor.mojodescriptor.setplugindescriptor(plugindescriptor)"], [1006, "org.apache.maven.project.artifact.defaultmavenmetadatacache.defaultmavenmetadatacache()"], [1007, "org.apache.maven.project.inheritance.t00.projectinheritancetest.projectinheritancetest()"], [1008, "org.apache.maven.project.artifact.mavenmetadatasourcetest.mavenmetadatasourcetest()"], [1009, "org.apache.maven.artifact.resolver.resolutionnode.getremoterepositories()"], [1010, "org.apache.maven.model.merge.modelmerger.mergepluginexecution(pluginexecution;pluginexecution;boolean;map)"], [1011, "org.apache.maven.lifecycle.mapping.defaultlifecyclemapping.defaultlifecyclemapping()"], [1012, "org.apache.maven.model.buildbase.setfinalname(string)"], [1013, "org.apache.maven.repository.legacy.resolver.transform.abstractversiontransformation.transformforresolve(artifact;repositoryrequest)"], [1014, "org.apache.maven.model.modelbase.getdependencies()"], [1015, "org.apache.maven.model.mailinglist.setname(string)"], [1016, "org.apache.maven.model.configurationcontainer.configurationcontainer()"], [1017, "org.apache.maven.model.building.modeldata.getartifactid()"], [1018, "org.apache.maven.artifact.resolver.multipleartifactsnotfoundexception.constructmessage(list)"], [1019, "org.apache.maven.project.inheritance.t10.projectinheritancetest.projectinheritancetest()"], [1020, "org.apache.maven.model.building.defaultmodelbuilder.build(modelbuildingrequest)"], [1021, "org.apache.maven.execution.mavensession.setprojects(list)"], [1022, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_organization(model;model;boolean;map)"], [1023, "org.apache.maven.repository.legacyrepositorysystem.injectauthentication(list;list)"], [1024, "org.apache.maven.artifact.repository.mavenartifactrepository.setproxy(proxy)"], [1025, "org.apache.maven.model.dependency.getartifactid()"], [1026, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsenotifier(string;xmlpullparser;boolean)"], [1027, "org.apache.maven.execution.projectsortertest.createparent(string;string;string)"], [1028, "org.apache.maven.project.inheritance.t04.projectinheritancetest.projectinheritancetest()"], [1029, "org.apache.maven.artifact.versioning.versionrange.isselectedversionknown(artifact)"], [1030, "org.apache.maven.artifact.resolver.artifactresolutionrequest.isresolvetransitively()"], [1031, "org.apache.maven.model.inheritance.defaultinheritanceassembler.assemblemodelinheritance(model;model;modelbuildingrequest;modelproblemcollector)"], [1032, "org.apache.maven.artifact.repository.mavenartifactrepository.getsnapshots()"], [1033, "org.apache.maven.profiles.manager.defaultprofilemanagertest.defaultprofilemanagertest()"], [1034, "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.defaultrepositorylayout()"], [1035, "org.apache.maven.project.mavenprojecttest.mavenprojecttest()"], [1036, "org.apache.maven.model.model.setscm(scm)"], [1037, "org.apache.maven.lifecycle.lifecycle.getphases()"], [1038, "org.apache.maven.artifact.resolver.artifactresolutionresult.hasexceptions()"], [1039, "org.apache.maven.artifact.artifactutils.copyartifacts(collection;collection)"], [1040, "org.apache.maven.artifact.factory.defaultartifactfactory.createdependencyartifact(string;string;versionrange;string;string;string;boolean)"], [1041, "org.apache.maven.artifact.resolver.artifactresolutionrequest.isoffline()"], [1042, "org.apache.maven.model.plugin.defaultpluginconfigurationexpander.defaultpluginconfigurationexpander()"], [1043, "org.apache.maven.model.reporting.setoutputdirectory(string)"], [1044, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_cimanagement(model;model;boolean;map)"], [1045, "org.apache.maven.model.merge.modelmerger.mergeplugin_artifactid(plugin;plugin;boolean;map)"], [1046, "org.apache.maven.plugin.pluginmanagertest.setup()"], [1047, "org.apache.maven.model.merge.modelmerger.mergebuildbase_defaultgoal(buildbase;buildbase;boolean;map)"], [1048, "org.apache.maven.repository.legacy.resolver.defaultlegacyartifactcollector.getmanagedversionsmap(artifact;map)"], [1049, "org.apache.maven.model.merge.modelmerger.mergeorganization_url(organization;organization;boolean;map)"], [1050, "org.apache.maven.artifact.resolver.artifactresolutionresult.artifactresolutionresult()"], [1051, "org.apache.maven.model.building.defaultmodelbuilder.importdependencymanagement(model;modelbuildingrequest;defaultmodelproblemcollector;collection)"], [1052, "org.apache.maven.project.projectbuildertest.projectbuildertest()"], [1053, "org.apache.maven.model.validation.defaultmodelvalidator.forcepluginexecutionidcollision(model;modelproblemcollector)"], [1054, "org.apache.maven.artifact.resolver.artifactresolutionresult.addartifact(artifact)"], [1055, "org.apache.maven.lifecycle.defaultlifecycleexecutor.getpluginsboundbydefaulttoalllifecycles(string)"], [1056, "org.apache.maven.artifact.resolver.artifactresolutionresult.setartifacts(set)"], [1057, "org.apache.maven.model.repositorypolicy.getchecksumpolicy()"], [1058, "org.apache.maven.model.merge.mavenmodelmerger.mergepluginexecution_goals(pluginexecution;pluginexecution;boolean;map)"], [1059, "org.apache.maven.model.resource.clone()"], [1060, "org.apache.maven.model.validation.defaultmodelvalidator.validatedependencies(modelproblemcollector;list;string;modelbuildingrequest)"], [1061, "org.apache.maven.artifact.metadata.resolutiongroup.resolutiongroup(artifact;artifact;set;map;list)"], [1062, "org.apache.maven.model.merge.modelmerger.mergemodel_parent(model;model;boolean;map)"], [1063, "org.apache.maven.model.resource.getfiltering()"], [1064, "org.apache.maven.model.merge.mavenmodelmerger.getextensionkey(extension)"], [1065, "org.apache.maven.project.artifact.mavenmetadatasource$projectrelocation.access$100(projectrelocation)"], [1066, "org.apache.maven.artifact.repository.mavenartifactrepository.getproxy()"], [1067, "org.apache.maven.model.path.defaultmodelpathtranslator.aligntobasedirectory(model;file;modelbuildingrequest)"], [1068, "org.apache.maven.artifact.repository.defaultartifactrepositoryfactory.createartifactrepository(string;string;artifactrepositorylayout;artifactrepositorypolicy;artifactrepositorypolicy)"], [1069, "org.apache.maven.artifact.handler.defaultartifacthandler.defaultartifacthandler()"], [1070, "org.apache.maven.artifact.resolver.multipleartifactsnotfoundexception.multipleartifactsnotfoundexception(artifact;list;list;list)"], [1071, "org.apache.maven.lifecycle.defaultlifecycleexecutor.defaultlifecycleexecutor()"], [1072, "org.apache.maven.artifact.resolver.resolutionnode.gettrail()"], [1073, "org.apache.maven.defaultartifactfiltermanager.<clinit>()"], [1074, "org.apache.maven.model.building.modeldata.setgroupid(string)"], [1075, "org.apache.maven.plugin.pluginmanagertest.pluginmanagertest()"], [1076, "org.apache.maven.plugin.descriptor.plugindescriptor.setversion(string)"], [1077, "org.apache.maven.model.profile.activation.fileprofileactivator.fileprofileactivator()"], [1078, "org.apache.maven.model.merge.mavenmodelmerger.mergeplugin_executions(plugin;plugin;boolean;map)"], [1079, "org.apache.maven.model.merge.modelmerger.mergeconfigurationcontainer_configuration(configurationcontainer;configurationcontainer;boolean;map)"], [1080, "org.apache.maven.model.build.getoutputdirectory()"], [1081, "org.apache.maven.artifact.defaultartifact.appendartifacttypeclassifierstring(stringbuilder)"], [1082, "org.apache.maven.model.model.getpackaging()"], [1083, "org.apache.maven.model.reportset.setreports(list)"], [1084, "org.apache.maven.model.profile.defaultprofileactivationcontext.getuserproperties()"], [1085, "org.apache.maven.model.building.defaultmodelbuildingrequest.getvalidationlevel()"], [1086, "org.apache.maven.artifact.resolver.artifactresolutionresult.haserrorartifactexceptions()"], [1087, "org.apache.maven.artifact.defaultartifact.getbaseversion()"], [1088, "org.apache.maven.artifact.resolver.filter.andartifactfilter.andartifactfilter(list)"], [1089, "org.apache.maven.project.mavenproject.getdistributionmanagement()"], [1090, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsedeploymentrepository(string;xmlpullparser;boolean)"], [1091, "org.apache.maven.artifact.versioning.comparableversion$integeritem.tostring()"], [1092, "org.apache.maven.artifact.versioning.defaultartifactversion.tostring()"], [1093, "org.apache.maven.artifact.defaultartifact.setversionrange(versionrange)"], [1094, "org.apache.maven.model.activation.setjdk(string)"], [1095, "org.apache.maven.model.validation.defaultmodelvalidatortest.teardown()"], [1096, "org.apache.maven.project.artifact.projectartifact.getdependencies()"], [1097, "org.apache.maven.artifact.resolver.filter.andartifactfilter.hashcode()"], [1098, "org.apache.maven.project.defaultprojectbuildingrequest.isresolvedependencies()"], [1099, "org.apache.maven.abstractcoremavencomponenttestcase$projectbuilder.adddependency(string;string;string;string;string;exclusion)"], [1100, "org.apache.maven.model.merge.modelmerger.mergereportplugin_artifactid(reportplugin;reportplugin;boolean;map)"], [1101, "org.apache.maven.model.contributor.setorganization(string)"], [1102, "org.apache.maven.artifact.defaultartifact.selectversion(string)"], [1103, "org.apache.maven.model.building.defaultmodelbuildingresult.defaultmodelbuildingresult()"], [1104, "org.apache.maven.model.building.defaultmodelbuildingresult.getrawmodel(string)"], [1105, "org.apache.maven.execution.defaultmavenexecutionrequest.isupdatesnapshots()"], [1106, "org.apache.maven.project.artifact.projectartifact.getmanageddependencies()"], [1107, "org.apache.maven.artifact.repository.artifactrepositorypolicy.getchecksumpolicy()"], [1108, "org.apache.maven.abstractcoremavencomponenttestcase.getlocalrepository()"], [1109, "org.apache.maven.artifact.defaultartifact.setresolvedversion(string)"], [1110, "org.apache.maven.plugin.descriptor.plugindescriptor.getartifactmap()"], [1111, "org.apache.maven.model.distributionmanagement.setsnapshotrepository(deploymentrepository)"], [1112, "org.apache.maven.model.merge.modelmerger.mergebuild_testoutputdirectory(build;build;boolean;map)"], [1113, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_contributors(model;model;boolean;map)"], [1114, "org.apache.maven.model.buildbase.getresources()"], [1115, "org.apache.maven.project.artifact.mavenmetadatasource$projectrelocation.mavenmetadatasource$projectrelocation()"], [1116, "org.apache.maven.model.building.modeldata.setartifactid(string)"], [1117, "org.apache.maven.model.activationos.clone()"], [1118, "org.apache.maven.repository.legacyrepositorysystem.geteffectivepolicy(collection)"], [1119, "org.apache.maven.exception.defaultexceptionhandler.defaultexceptionhandler()"], [1120, "org.apache.maven.model.profile.defaultprofileinjector.injectprofile(model;profile;modelbuildingrequest;modelproblemcollector)"], [1121, "org.apache.maven.model.dependencymanagement.getdependencies()"], [1122, "org.apache.maven.repository.legacy.resolver.conflict.nearestconflictresolver.nearestconflictresolver()"], [1123, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsedependencymanagement(string;xmlpullparser;boolean)"], [1124, "org.apache.maven.artifact.factory.defaultartifactfactory.createartifact(string;string;string;string;string;string;string)"], [1125, "org.apache.maven.model.superpom.defaultsuperpomprovider.defaultsuperpomprovider()"], [1126, "org.apache.maven.model.configurationcontainer.setconfiguration(object)"], [1127, "org.apache.maven.artifact.handler.defaultartifacthandler.getextension()"], [1128, "org.apache.maven.project.mavenproject.getdependencies()"], [1129, "org.apache.maven.model.contributor.setemail(string)"], [1130, "org.apache.maven.model.build.getsourcedirectory()"], [1131, "org.apache.maven.artifact.defaultartifact.setdependencytrail(list)"], [1132, "org.apache.maven.model.pluginexecution.setphase(string)"], [1133, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.evaluatearray(object)"], [1134, "org.apache.maven.model.profile.activation.jdkversionprofileactivator.getrelationorder(string;rangevalue;boolean)"], [1135, "org.apache.maven.execution.mavensession.isoffline()"], [1136, "org.apache.maven.model.merge.modelmerger.mergereportplugin_inherited(reportplugin;reportplugin;boolean;map)"], [1137, "org.apache.maven.project.defaultprojectbuildingrequest.setoffline(boolean)"], [1138, "org.apache.maven.execution.projectsortertest.createplugin(mavenproject)"], [1139, "org.apache.maven.artifact.defaultartifact.selectversionfromnewrangeifavailable()"], [1140, "org.apache.maven.artifact.resolver.filter.excludesartifactfilter.include(artifact)"], [1141, "org.apache.maven.model.profile.profile()"], [1142, "org.apache.maven.model.management.defaultdependencymanagementinjector$managementmodelmerger.mergemanageddependencies(model)"], [1143, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setremoterepositories(list)"], [1144, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.setresolvemanagedversions(boolean)"], [1145, "org.apache.maven.project.mavenproject.setfile(file)"], [1146, "org.apache.maven.model.repository.getsnapshots()"], [1147, "org.apache.maven.project.mavenproject.getproperties()"], [1148, "org.apache.maven.model.distributionmanagement.setstatus(string)"], [1149, "org.apache.maven.model.plugincontainer.getplugins()"], [1150, "org.apache.maven.execution.projectsorter.isspecificversion(string)"], [1151, "org.apache.maven.model.license.seturl(string)"], [1152, "org.apache.maven.model.build.clone()"], [1153, "org.apache.maven.model.extension.getartifactid()"], [1154, "org.apache.maven.model.model.setparent(parent)"], [1155, "org.apache.maven.execution.mavensession.mavensession(plexuscontainer;mavenexecutionrequest;mavenexecutionresult;list)"], [1156, "org.apache.maven.model.management.defaultdependencymanagementinjector.injectmanagement(model;modelbuildingrequest;modelproblemcollector)"], [1157, "org.apache.maven.repository.legacy.resolver.transform.latestartifacttransformation.latestartifacttransformation()"], [1158, "org.apache.maven.artifact.resolver.artifactresolutionrequest.getartifactdependencies()"], [1159, "org.apache.maven.repository.legacyrepositorysystem.createlocalrepository(file)"], [1160, "org.apache.maven.artifact.resolver.resolutionnode.adddependencies(set;list;artifactfilter)"], [1161, "org.apache.maven.projectdependenciesresolvertest.setup()"], [1162, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.stringsearchmodelinterpolator()"], [1163, "org.apache.maven.model.buildbase.setdirectory(string)"], [1164, "org.apache.maven.artifact.resolver.resolutionnode.getdependencytrail()"], [1165, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.getartifact()"], [1166, "org.apache.maven.artifact.resolver.artifactresolutionrequest.getlisteners()"], [1167, "org.apache.maven.model.activationos.getname()"], [1168, "org.apache.maven.execution.defaultmavenexecutionrequest.getremoterepositories()"], [1169, "org.apache.maven.execution.defaultmavenexecutionrequest.isoffline()"], [1170, "org.apache.maven.project.defaultprojectbuildingrequest.getprofiles()"], [1171, "org.apache.maven.model.merge.mavenmodelmerger.mergemodelbase_repositories(modelbase;modelbase;boolean;map)"], [1172, "org.apache.maven.model.modelbase.setdistributionmanagement(distributionmanagement)"], [1173, "org.apache.maven.model.modeltest.modeltest()"], [1174, "org.apache.maven.artifact.resolver.filter.cumulativescopeartifactfilter.cumulativescopeartifactfilter(cumulativescopeartifactfilter[])"], [1175, "org.apache.maven.settings.trackablebase.trackablebase()"], [1176, "org.apache.maven.artifact.resolver.artifactresolutionrequest.getlocalrepository()"], [1177, "org.apache.maven.repository.delegatinglocalartifactrepository.hashcode()"], [1178, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsedependency(string;xmlpullparser;boolean)"], [1179, "org.apache.maven.model.cimanagement.setsystem(string)"], [1180, "org.apache.maven.model.patternset.clone()"], [1181, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsedistributionmanagement(string;xmlpullparser;boolean)"], [1182, "org.apache.maven.artifact.resolver.filter.includesartifactfilter.includesartifactfilter(list)"], [1183, "org.apache.maven.execution.projectsortertest.createplugin(string;string;string)"], [1184, "org.apache.maven.execution.projectsortertest.createdependency(string;string;string)"], [1185, "org.apache.maven.model.prerequisites.clone()"], [1186, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_url(model;model;boolean;map)"], [1187, "org.apache.maven.model.building.defaultmodelbuilder.putcache(modelcache;string;string;string;modelcachetag;object)"], [1188, "org.apache.maven.model.normalization.defaultmodelnormalizer.injectdefaultvalues(model;modelbuildingrequest;modelproblemcollector)"], [1189, "org.apache.maven.artifact.resolver.artifactresolutionrequest.getmanagedversionmap()"], [1190, "org.apache.maven.model.repositorybase.seturl(string)"], [1191, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.getlocalrepository()"], [1192, "org.apache.maven.plugin.internal.defaultmavenpluginmanager.defaultmavenpluginmanager()"], [1193, "org.apache.maven.execution.defaultmavenexecutionrequest.getpluginartifactrepositories()"], [1194, "org.apache.maven.model.normalization.defaultmodelnormalizer$duplicatemerger.defaultmodelnormalizer$duplicatemerger(1)"], [1195, "org.apache.maven.project.artifact.defaultmavenmetadatacachetest.defaultmavenmetadatacachetest()"], [1196, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.interpolateinternal(string;list;list;modelproblemcollector)"], [1197, "org.apache.maven.model.model.setprofiles(list)"], [1198, "org.apache.maven.model.reporting.reporting()"], [1199, "org.apache.maven.model.cimanagement.clone()"], [1200, "org.apache.maven.project.artifact.mavenmetadatasource.mavenmetadatasource()"], [1201, "org.apache.maven.plugin.descriptor.mojodescriptor.mojodescriptor()"], [1202, "org.apache.maven.model.merge.modelmerger.mergecimanagement(cimanagement;cimanagement;boolean;map)"], [1203, "org.apache.maven.model.management.defaultdependencymanagementinjector$managementmodelmerger.defaultdependencymanagementinjector$managementmodelmerger(1)"], [1204, "org.apache.maven.artifact.versioning.restriction.isupperboundinclusive()"], [1205, "org.apache.maven.lifecycle.mapping.lifecycle.lifecycle()"], [1206, "org.apache.maven.model.merge.modelmerger.mergeissuemanagement_system(issuemanagement;issuemanagement;boolean;map)"], [1207, "org.apache.maven.artifact.versioning.comparableversion$stringitem.tostring()"], [1208, "org.apache.maven.model.building.modelbuildingeventcatapult$1.fire(modelbuildinglistener;modelbuildingevent)"], [1209, "org.apache.maven.model.model.setmailinglists(list)"], [1210, "org.apache.maven.project.defaultprojectbuildingrequest.setremoterepositories(list)"], [1211, "org.apache.maven.model.parent.getversion()"], [1212, "org.apache.maven.model.reportplugin.reportplugin()"], [1213, "org.apache.maven.model.activationos.getarch()"], [1214, "org.apache.maven.model.plugincontainer.clone()"], [1215, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_profiles(model;model;boolean;map)"], [1216, "org.apache.maven.model.dependency.getsystempath()"], [1217, "org.apache.maven.model.activationfile.activationfile()"], [1218, "org.apache.maven.model.organization.organization()"], [1219, "org.apache.maven.project.mavenproject.gettestcompilesourceroots()"], [1220, "org.apache.maven.model.building.defaultmodelproblemcollector.defaultmodelproblemcollector(list)"], [1221, "org.apache.maven.model.plugin.setexecutions(list)"], [1222, "org.apache.maven.model.merge.modelmerger.mergeorganization(organization;organization;boolean;map)"], [1223, "org.apache.maven.model.validation.defaultmodelvalidator.validatesubelementnotnull(object;string;modelproblemcollector;object)"], [1224, "org.apache.maven.model.extension.getgroupid()"], [1225, "org.apache.maven.model.site.geturl()"], [1226, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator$3.abstractstringbasedmodelinterpolator$3(abstractstringbasedmodelinterpolator;boolean;modelbuildingrequest)"], [1227, "org.apache.maven.repository.legacy.metadata.resolutiongroup.getmanagedversions()"], [1228, "org.apache.maven.model.plugin.isextensions()"], [1229, "org.apache.maven.model.modelbase.setdependencies(list)"], [1230, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseexclusion(string;xmlpullparser;boolean)"], [1231, "org.apache.maven.model.merge.mavenmodelmerger.getreportpluginkey(reportplugin)"], [1232, "org.apache.maven.artifact.defaultartifact.getfile()"], [1233, "org.apache.maven.model.model.getmodelversion()"], [1234, "org.apache.maven.model.profile.getsource()"], [1235, "org.apache.maven.model.model.getscm()"], [1236, "org.apache.maven.mavenlifecycleparticipanttest.mavenlifecycleparticipanttest()"], [1237, "org.apache.maven.project.defaultprojectbuildingrequest.defaultprojectbuildingrequest()"], [1238, "org.apache.maven.model.building.defaultmodelbuildingrequest.setsystemproperties(properties)"], [1239, "org.apache.maven.artifact.defaultartifact.isoptional()"], [1240, "org.apache.maven.model.inheritance.defaultinheritanceassembler$inheritancemodelmerger.mergeplugincontainer_plugins(plugincontainer;plugincontainer;boolean;map)"], [1241, "org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.newprofile(string)"], [1242, "org.apache.maven.model.building.modeldata.getmodel()"], [1243, "org.apache.maven.artifact.handler.defaultartifacthandler.defaultartifacthandler(string)"], [1244, "org.apache.maven.plugin.internal.defaultlegacysupport.defaultlegacysupport()"], [1245, "org.apache.maven.model.building.modeldata.getgroupid()"], [1246, "org.apache.maven.model.model.getlicenses()"], [1247, "org.apache.maven.model.building.defaultmodelbuildingresult.setactivepomprofiles(string;list)"], [1248, "org.apache.maven.defaultprojectdependenciesresolver.resolve(collection;collection;collection;mavensession)"], [1249, "org.apache.maven.model.profile.defaultprofileselector.isactivebydefault(profile)"], [1250, "org.apache.maven.artifact.repository.defaultrepositoryrequest.setlocalrepository(artifactrepository)"], [1251, "org.apache.maven.model.activation.getproperty()"], [1252, "org.apache.maven.repository.delegatinglocalartifactrepository.getideworspace()"], [1253, "org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.jdkversionprofileactivatortest()"], [1254, "org.apache.maven.model.validation.defaultmodelvalidatortest.assertviolations(simpleproblemcollector;int;int)"], [1255, "org.apache.maven.artifact.defaultartifact.setbaseversioninternal(string)"], [1256, "org.apache.maven.model.inheritance.defaultinheritanceassembler$inheritancemodelmerger.defaultinheritanceassembler$inheritancemodelmerger()"], [1257, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_developers(model;model;boolean;map)"], [1258, "org.apache.maven.project.defaultprojectbuilder.initproject(mavenproject;modelbuildingresult)"], [1259, "org.apache.maven.model.plugin.constructkey(string;string)"], [1260, "org.apache.maven.artifact.defaultartifact.setscope(string)"], [1261, "org.apache.maven.project.mavenproject.getcompilesourceroots()"], [1262, "org.apache.maven.artifact.handler.manager.defaultartifacthandlermanager.defaultartifacthandlermanager()"], [1263, "org.apache.maven.model.building.defaultmodelbuildingresult.getrawmodel()"], [1264, "org.apache.maven.model.plugin.flushexecutionmap()"], [1265, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.isoffline()"], [1266, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsebuild(string;xmlpullparser;boolean)"], [1267, "org.apache.maven.model.merge.mavenmodelmerger.mergedistributionmanagement_snapshotrepository(distributionmanagement;distributionmanagement;boolean;map)"], [1268, "org.apache.maven.artifact.factory.defaultartifactfactory.createdependencyartifact(string;string;versionrange;string;string;string)"], [1269, "org.apache.maven.artifact.defaultartifact.getclassifier()"], [1270, "org.apache.maven.artifact.repository.mavenartifactrepository.find(artifact)"], [1271, "org.apache.maven.model.merge.modelmerger.mergemodel_version(model;model;boolean;map)"], [1272, "org.apache.maven.model.merge.modelmerger.mergecimanagement_notifiers(cimanagement;cimanagement;boolean;map)"], [1273, "org.apache.maven.project.defaultprojectbuildingrequest.isoffline()"], [1274, "org.apache.maven.model.profile.defaultprofileinjector$profilemodelmerger.defaultprofileinjector$profilemodelmerger(1)"], [1275, "org.apache.maven.model.developer.clone()"], [1276, "org.apache.maven.model.validation.defaultmodelvalidator.validateid(string;modelproblemcollector;string)"], [1277, "org.apache.maven.model.site.clone()"], [1278, "org.apache.maven.model.merge.modelmerger.mergereporting_outputdirectory(reporting;reporting;boolean;map)"], [1279, "org.apache.maven.model.building.defaultmodelbuildingrequest.getuserproperties()"], [1280, "org.apache.maven.artifact.repository.defaultrepositoryrequest.setremoterepositories(list)"], [1281, "org.apache.maven.plugin.descriptor.plugindescriptor.setartifactid(string)"], [1282, "org.apache.maven.model.build.gettestsourcedirectory()"], [1283, "org.apache.maven.execution.projectsorter.getid(mavenproject)"], [1284, "org.apache.maven.model.merge.modelmerger.mergedependency_systempath(dependency;dependency;boolean;map)"], [1285, "org.apache.maven.model.building.defaultmodelbuildingrequest.getmodelcache()"], [1286, "org.apache.maven.artifact.versioning.versionrange.createfromversion(string)"], [1287, "org.apache.maven.model.building.modeldata.getid()"], [1288, "org.apache.maven.model.fileset.getdirectory()"], [1289, "org.apache.maven.model.activationfile.clone()"], [1290, "org.apache.maven.model.merge.modelmerger.mergerepositorybase(repositorybase;repositorybase;boolean;map)"], [1291, "org.apache.maven.model.mailinglist.setsubscribe(string)"], [1292, "org.apache.maven.repository.legacy.metadata.defaultmetadataresolutionrequest.isforceupdate()"], [1293, "org.apache.maven.artifact.repository.defaultrepositoryrequest.isoffline()"], [1294, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setcache(repositorycache)"], [1295, "org.apache.maven.model.reportset.reportset()"], [1296, "org.apache.maven.model.profile.activation.fileprofileactivator.isactive(profile;profileactivationcontext;modelproblemcollector)"], [1297, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_prerequisites(model;model;boolean;map)"], [1298, "org.apache.maven.model.buildbase.getdirectory()"], [1299, "org.apache.maven.model.plugin.adddependency(dependency)"], [1300, "org.apache.maven.model.building.defaultmodelbuildingrequest.setmodelresolver(modelresolver)"], [1301, "org.apache.maven.model.inheritance.defaultinheritanceassembler.getchildpathadjustment(model;model)"], [1302, "org.apache.maven.project.artifact.mavenmetadatasource.aggregaterepositories(list;list)"], [1303, "org.apache.maven.plugin.descriptor.plugindescriptor.constructpluginkey(string;string;string)"], [1304, "org.apache.maven.model.reportplugin.getinherited()"], [1305, "org.apache.maven.model.pluginexecution.setgoals(list)"], [1306, "org.apache.maven.repository.legacy.resolver.defaultlegacyartifactcollector.defaultlegacyartifactcollector()"], [1307, "org.apache.maven.model.validation.defaultmodelvalidator.validaterepositories(modelproblemcollector;list;string;modelbuildingrequest)"], [1308, "org.apache.maven.model.plugin.setdependencies(list)"], [1309, "org.apache.maven.repository.legacyrepositorysystem.getmirror(artifactrepository;list)"], [1310, "org.apache.maven.model.building.defaultmodelbuilder.interpolatemodel(model;modelbuildingrequest;modelproblemcollector)"], [1311, "org.apache.maven.repository.legacy.resolver.defaultlegacyartifactcollector.fireevent(int;list;resolutionnode)"], [1312, "org.apache.maven.model.model.getissuemanagement()"], [1313, "org.apache.maven.model.merge.modelmerger.mergeorganization_name(organization;organization;boolean;map)"], [1314, "org.apache.maven.model.contributor.setname(string)"], [1315, "org.apache.maven.model.repository.repository()"], [1316, "org.apache.maven.project.mavenproject.getmanagedversionmap()"], [1317, "org.apache.maven.artifact.versioning.restriction.<clinit>()"], [1318, "org.apache.maven.model.plugin.addexecution(pluginexecution)"], [1319, "org.apache.maven.project.artifact.projectartifact$pomartifacthandler.isincludesdependencies()"], [1320, "org.apache.maven.model.building.defaultmodelbuildingrequest.setprofiles(list)"], [1321, "org.apache.maven.artifact.versioning.comparableversion$listitem.comparableversion$listitem()"], [1322, "org.apache.maven.model.merge.modelmerger.mergeissuemanagement(issuemanagement;issuemanagement;boolean;map)"], [1323, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setcollectionfilter(artifactfilter)"], [1324, "org.apache.maven.project.artifact.defaultmavenmetadatacache.newcachekey(artifact;boolean;artifactrepository;list)"], [1325, "org.apache.maven.artifact.defaultartifact.getdependencytrail()"], [1326, "org.apache.maven.project.inheritance.t11.projectinheritancetest.projectinheritancetest()"], [1327, "org.apache.maven.model.extension.clone()"], [1328, "org.apache.maven.artifact.defaultartifact.getdownloadurl()"], [1329, "org.apache.maven.project.mavenproject.addcompilesourceroot(string)"], [1330, "org.apache.maven.model.repositorybase.setid(string)"], [1331, "org.apache.maven.model.merge.modelmerger.mergemodelbase_dependencymanagement(modelbase;modelbase;boolean;map)"], [1332, "org.apache.maven.artifact.versioning.restriction.getlowerbound()"], [1333, "org.apache.maven.artifact.resolver.filter.cumulativescopeartifactfilter.cumulativescopeartifactfilter(collection)"], [1334, "org.apache.maven.artifact.repository.defaultrepositoryrequest.isforceupdate()"], [1335, "org.apache.maven.model.merge.modelmerger.mergecimanagement_system(cimanagement;cimanagement;boolean;map)"], [1336, "org.apache.maven.execution.defaultmavenexecutionrequest.setsystemproperties(properties)"], [1337, "org.apache.maven.model.merge.mavenmodelmerger.mergescm_url(scm;scm;boolean;map)"], [1338, "org.apache.maven.model.activationfile.getexists()"], [1339, "org.apache.maven.model.activationproperty.clone()"], [1340, "org.apache.maven.model.dependency.gettype()"], [1341, "org.apache.maven.project.artifact.defaultmavenmetadatacache$cachekey.equals(object)"], [1342, "org.apache.maven.model.building.defaultmodelbuilder.build(modelbuildingrequest;modelbuildingresult)"], [1343, "org.apache.maven.model.model.getgroupid()"], [1344, "org.apache.maven.project.projectclasspathtest.projectclasspathtest()"], [1345, "org.apache.maven.artifact.defaultartifact.setresolved(boolean)"], [1346, "org.apache.maven.model.merge.modelmerger.mergemodel_description(model;model;boolean;map)"], [1347, "org.apache.maven.model.model.setorganization(organization)"], [1348, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parselicense(string;xmlpullparser;boolean)"], [1349, "org.apache.maven.model.repositorypolicy.isenabled()"], [1350, "org.apache.maven.model.building.defaultmodelbuildingrequest.getactiveprofileids()"], [1351, "org.apache.maven.model.merge.modelmerger.mergemodelbase(modelbase;modelbase;boolean;map)"], [1352, "org.apache.maven.model.building.defaultmodelbuilder.readparent(model;modelbuildingrequest;defaultmodelproblemcollector)"], [1353, "org.apache.maven.model.building.modeldata.setversion(string)"], [1354, "org.apache.maven.plugin.mojoexecution.getmojodescriptor()"], [1355, "org.apache.maven.artifact.resolver.defaultartifactresolver.islocalcopy(artifact)"], [1356, "org.apache.maven.artifact.resolver.artifactresolutionresult.initlist(list)"], [1357, "org.apache.maven.model.profile.setid(string)"], [1358, "org.apache.maven.repository.legacy.defaultupdatecheckmanager.defaultupdatecheckmanager()"], [1359, "org.apache.maven.plugin.descriptor.plugindescriptor.setartifacts(list)"], [1360, "org.apache.maven.model.dependency.setsystempath(string)"], [1361, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsepluginexecution(string;xmlpullparser;boolean)"], [1362, "org.apache.maven.model.build.setscriptsourcedirectory(string)"], [1363, "org.apache.maven.model.cimanagement.setnotifiers(list)"], [1364, "org.apache.maven.model.merge.modelmerger.mergedependency_groupid(dependency;dependency;boolean;map)"], [1365, "org.apache.maven.project.defaultprojectbuildingrequest.getvalidationlevel()"], [1366, "org.apache.maven.model.issuemanagement.issuemanagement()"], [1367, "org.apache.maven.execution.settingsadapter.settingsadapter(mavenexecutionrequest)"], [1368, "org.apache.maven.repository.legacy.resolver.transform.snapshottransformation.transformforresolve(artifact;repositoryrequest)"], [1369, "org.apache.maven.artifact.repository.layout.defaultrepositorylayout.pathof(artifact)"], [1370, "org.apache.maven.repository.legacy.resolver.transform.snapshottransformation.snapshottransformation()"], [1371, "org.apache.maven.model.pluginexecution.pluginexecution()"], [1372, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.createvaluesources(model;file;modelbuildingrequest)"], [1373, "org.apache.maven.model.prerequisites.prerequisites()"], [1374, "org.apache.maven.model.building.simpleproblemcollector.simpleproblemcollector()"], [1375, "org.apache.maven.model.management.defaultpluginmanagementinjector$managementmodelmerger.mergeplugincontainer_plugins(plugincontainer;plugincontainer)"], [1376, "org.apache.maven.project.defaultprojectbuildingrequest.getservers()"], [1377, "org.apache.maven.model.fileset.clone()"], [1378, "org.apache.maven.model.profile.defaultprofileselector.getactiveprofiles(collection;profileactivationcontext;modelproblemcollector)"], [1379, "org.apache.maven.model.merge.modelmerger.mergeplugin(plugin;plugin;boolean;map)"], [1380, "org.apache.maven.project.repositorymodelresolver.addrepository(repository)"], [1381, "org.apache.maven.model.validation.defaultmodelvalidator.validateboolean(string;modelproblemcollector;boolean;string;string)"], [1382, "org.apache.maven.model.reportplugin.getversion()"], [1383, "org.apache.maven.artifact.defaultartifact.getid()"], [1384, "org.apache.maven.plugin.descriptor.mojodescriptor.getgoal()"], [1385, "org.apache.maven.repository.ideworkspace.ideworkspacerepositorytest.ideworkspacerepositorytest()"], [1386, "org.apache.maven.artifact.defaultartifact.issnapshot()"], [1387, "org.apache.maven.artifact.repository.artifactrepositorypolicy.setenabled(boolean)"], [1388, "org.apache.maven.model.merge.mavenmodelmerger.getdependencykey(dependency)"], [1389, "org.apache.maven.model.profile.defaultprofileactivationcontext.getprojectdirectory()"], [1390, "org.apache.maven.project.defaultmodelbuildinglistener.defaultmodelbuildinglistener(mavenproject;projectbuildinghelper;projectbuildingrequest)"], [1391, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseprerequisites(string;xmlpullparser;boolean)"], [1392, "org.apache.maven.abstractcoremavencomponenttestcase.createstubmavenproject()"], [1393, "org.apache.maven.model.modelbase.getdependencymanagement()"], [1394, "org.apache.maven.plugin.descriptor.plugindescriptorbuilder.plugindescriptorbuilder()"], [1395, "org.apache.maven.project.inheritance.abstractprojectinheritancetestcase.abstractprojectinheritancetestcase()"], [1396, "org.apache.maven.model.merge.mavenmodelmerger.getpluginexecutionkey(pluginexecution)"], [1397, "org.apache.maven.artifact.defaultartifact.setavailableversions(list)"], [1398, "org.apache.maven.artifact.resolver.defaultartifactcollector.defaultartifactcollector()"], [1399, "org.apache.maven.model.merge.modelmerger.mergeplugincontainer(plugincontainer;plugincontainer;boolean;map)"], [1400, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_issuemanagement(model;model;boolean;map)"], [1401, "org.apache.maven.artifact.resolver.artifactresolutionrequest.setforceupdate(boolean)"], [1402, "org.apache.maven.project.mavenproject.getdependencymanagement()"], [1403, "org.apache.maven.model.merge.modelmerger.mergeexclusion(exclusion;exclusion;boolean;map)"], [1404, "org.apache.maven.project.artifact.defaultmavenmetadatacache.eq(object;object)"], [1405, "org.apache.maven.project.mavenproject.setremoteartifactrepositories(list)"], [1406, "org.apache.maven.artifact.resolver.resolutionnode.disable()"], [1407, "org.apache.maven.model.plugin.getversion()"], [1408, "org.apache.maven.model.profile.setbuild(buildbase)"], [1409, "org.apache.maven.lifecycle.lifecycle.getid()"], [1410, "org.apache.maven.project.defaultprojectbuilder.defaultprojectbuilder()"], [1411, "org.apache.maven.model.scm.scm()"], [1412, "org.apache.maven.model.merge.modelmerger.mergeplugin_version(plugin;plugin;boolean;map)"], [1413, "org.apache.maven.artifact.factory.defaultartifactfactory.createartifact(string;string;versionrange;string;string;string;string;boolean)"], [1414, "org.apache.maven.model.building.defaultmodelbuilder.assembleinheritance(list;modelbuildingrequest;modelproblemcollector)"], [1415, "org.apache.maven.model.building.defaultmodelbuildingresult.seteffectivemodel(model)"], [1416, "org.apache.maven.artifact.handler.manager.defaultartifacthandlermanager.getartifacthandler(string)"], [1417, "org.apache.maven.model.merge.modelmerger.mergeconfigurationcontainer(configurationcontainer;configurationcontainer;boolean;map)"], [1418, "org.apache.maven.model.validation.defaultmodelvalidatortest.setup()"], [1419, "org.apache.maven.repository.legacy.metadata.resolutiongroup.getpomartifact()"], [1420, "org.apache.maven.plugin.pluginparameterexpressionevaluator.evaluate(string)"], [1421, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.run()"], [1422, "org.apache.maven.artifact.defaultartifact.setdependencyfilter(artifactfilter)"], [1423, "org.apache.maven.artifact.resolver.artifactresolutionrequest.getresolutionfilter()"], [1424, "org.apache.maven.model.organization.seturl(string)"], [1425, "org.apache.maven.model.extension.extension()"], [1426, "org.apache.maven.model.parent.setrelativepath(string)"], [1427, "org.apache.maven.model.contributor.clone()"], [1428, "org.apache.maven.project.mavenproject.setparent(mavenproject)"], [1429, "org.apache.maven.profiles.defaultprofilemanager.explicitlydeactivate(string)"], [1430, "org.apache.maven.model.notifier.addconfiguration(string;string)"], [1431, "org.apache.maven.execution.defaultmavenexecutionrequest.setpom(file)"], [1432, "org.apache.maven.project.mavenproject.getmodel()"], [1433, "org.apache.maven.model.activation.clone()"], [1434, "org.apache.maven.model.license.clone()"], [1435, "org.apache.maven.repository.legacyrepositorysystem.resolve(artifactresolutionrequest)"], [1436, "org.apache.maven.model.dependency.setgroupid(string)"], [1437, "org.apache.maven.project.defaultprojectbuildingrequest.getactiveprofileids()"], [1438, "org.apache.maven.model.building.defaultmodelbuilder.readparentexternally(model;modelbuildingrequest;defaultmodelproblemcollector)"], [1439, "org.apache.maven.model.modelbase.getrepositories()"]], "initial_tests": ["org.apache.maven.plugin.pluginmanagertest.testmojowhereinternallystateddependencyisoverriddenbyproject", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnegatedvalue_systemproperty", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingresourcedirectory", "org.apache.maven.model.dependencytest.testequalsidentity", "org.apache.maven.execution.projectsortertest.testdependencyprecedesprojectthatusesunresolveddependencyversion", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissinggroupid", "org.apache.maven.model.profiletest.testtostringnullsafe", "org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldoverrideanddeactivateactiveprofile", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingpluginartifactid", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnegatedvalue_userproperty", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnameonly_userproperty", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnegatednameonly_userproperty", "org.apache.maven.project.modelutilstest.testshouldusemainplugindependencyversionovermanageddepversion", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testpluginartifactsexpressionreference", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testbasedirextractionwithmissingproject", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testtwoexpressions", "org.apache.maven.model.validation.defaultmodelvalidatortest.testinvalidaggregatorpackaging", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingversion", "org.apache.maven.projectdependenciesresolvertest.testsystemscopedependencies", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testescapedvariablepassthrough", "org.apache.maven.model.dependencytest.testequalsnullsafe", "org.apache.maven.model.modeltest.testtostringnullsafe", "org.apache.maven.lifecycle.lifecycleexecutortest.testlifecyclepluginsretrievalfordefaultlifecycle", "org.apache.maven.execution.projectsortertest.testmatchingartifactidsdifferentgroupids", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testvalueextractionfromsystempropertieswithmissingproject", "org.apache.maven.plugin.pluginmanagertest.testaggregatormojo", "org.apache.maven.execution.projectsortertest.testmatchingidsandversions", "org.apache.maven.execution.projectsortertest.testshouldnotfailwhenmanagedplugindepreferencescurrentproject", "org.apache.maven.execution.projectsortertest.testshouldnotfailwhenplugindepreferencescurrentproject", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingrepositoryid", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingpluginversion", "org.apache.maven.execution.projectsortertest.testdependencyprecedesprojectthatusesspecificdependencyversion", "org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.testversionrange", "org.apache.maven.projectdependenciesresolvertest.testexclusionsindependencies", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testescapedvariablepassthroughinlargerexpression", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testmultiplesubexpressionsinlargerexpression", "org.apache.maven.execution.projectsortertest.testplugindependenciesinfluencesorting_declarationinparent", "org.apache.maven.plugin.pluginmanagertest.testsurefireplugin", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnameonly_systemproperty", "org.apache.maven.model.validation.defaultmodelvalidatortest.testinvalidids", "org.apache.maven.repository.legacyrepositorysystemtest.testthatasystemscopeddependencyisnotresolvedfromrepositories", "org.apache.maven.model.validation.defaultmodelvalidatortest.testbaddependencyscope", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencyversion", "org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldactivatedefaultprofile", "org.apache.maven.model.profiletest.testhashcodenullsafe", "org.apache.maven.model.profiletest.testequalsnullsafe", "org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldnotactivatereversalofpresentsystemproperty", "org.apache.maven.model.profiletest.testequalsidentity", "org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldnotactivatedefaultprofile", "org.apache.maven.project.modelutilstest.testshouldkeeporiginalpluginexecutionordering", "org.apache.maven.model.validation.defaultmodelvalidatortest.testbadplugindependencyscope", "org.apache.maven.plugin.pluginmanagertest.testmojothatrequiresexecutiontoagivenphasebeforeexecutingitself", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testpluginartifactmapexpressionreference", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencygroupid", "org.apache.maven.execution.projectsortertest.testmatchingidsanddifferentversions", "org.apache.maven.execution.projectsortertest.testpluginversionsareconsidered", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testshouldextractpluginartifacts", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingmodelversion", "org.apache.maven.model.dependencytest.testtostringnullsafe", "org.apache.maven.execution.projectsortertest.testmatchinggroupidsdifferentartifactids", "org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.testprefixnegated", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testpompropertyextractionwithmissingproject_withdotnotation", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testpluginartifactidexpressionreference", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithvalue_systemproperty", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithvalue_userproperty", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testvalueextractionfromsystempropertieswithmissingproject_withdotnotation", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithvalue_userpropertydominantoversystemproperty", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencyartifactid", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testvalueextractionwithapomvaluecontainingapath", "org.apache.maven.plugin.pluginmanagertest.testmojoconfigurationismergedcorrectly", "org.apache.maven.execution.projectsortertest.testplugindependenciesinfluencesorting", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testplugindescriptorexpressionreference", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingartifactid", "org.apache.maven.plugin.pluginmanagertest.testmojothatispresentinthecurrentbuild", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencymanagementgroupid", "org.apache.maven.model.validation.defaultmodelvalidatortest.testbaddependencyversion", "org.apache.maven.model.dependencytest.testhashcodenullsafe", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testlocalrepositoryextraction", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testnullsafe", "org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldoverrideandactivateinactiveprofile", "org.apache.maven.plugin.pluginmanagertest.testremoteresourcesplugin", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingtype", "org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnegatednameonly_systemproperty", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencymanagementartifactid", "org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.testnullsafe", "org.apache.maven.model.modeltest.testequalsidentity", "org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingall", "org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.testprefix", "org.apache.maven.model.validation.defaultmodelvalidatortest.testbadmodelversion", "org.apache.maven.model.modeltest.testequalsnullsafe", "org.apache.maven.model.modeltest.testhashcodenullsafe", "org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testmissingpompropertyrefinlargerexpression"], "bugs": ["org.apache.maven.model.validation.defaultmodelvalidator.validateboolean(string;modelproblemcollector;boolean;string;string)", "org.apache.maven.model.validation.defaultmodelvalidator.validateenum(string;modelproblemcollector;boolean;string;string;string[])", "org.apache.maven.model.validation.defaultmodelvalidator.validateeffectivemodel(model;modelbuildingrequest;modelproblemcollector)"], "tests_details": [["org.apache.maven.plugin.pluginmanagertest.testmojowhereinternallystateddependencyisoverriddenbyproject", [17, 21, 52, 85, 110, 181, 231, 235, 240, 256, 266, 274, 309, 316, 331, 362, 419, 433, 449, 494, 535, 555, 565, 584, 632, 645, 663, 674, 679, 687, 703, 707, 717, 824, 833, 834, 858, 875, 886, 893, 896, 911, 954, 975, 985, 999, 1006, 1042, 1046, 1071, 1122, 1125, 1162, 1192, 1194, 1200, 1203, 1244, 1256, 1262, 1274, 1306, 1358, 1394, 1398, 1410], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnegatedvalue_systemproperty", [41, 55, 291, 333, 430, 440, 472, 486, 503, 530, 606, 628, 654, 744, 759, 868, 871, 883, 908, 930, 1084, 1141, 1251, 1374], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingresourcedirectory", [8, 36, 37, 61, 156, 171, 187, 192, 195, 241, 242, 297, 308, 311, 335, 355, 373, 398, 450, 492, 496, 517, 525, 534, 540, 557, 590, 606, 608, 614, 630, 632, 654, 660, 667, 713, 720, 727, 736, 773, 821, 843, 846, 847, 863, 877, 883, 894, 919, 964, 995, 1014, 1053, 1063, 1082, 1085, 1095, 1114, 1149, 1233, 1254, 1266, 1276, 1288, 1343, 1374, 1381, 1393, 1418, 1439], 0], ["org.apache.maven.model.dependencytest.testequalsidentity", [121, 422], 0], ["org.apache.maven.execution.projectsortertest.testdependencyprecedesprojectthatusesunresolveddependencyversion", [8, 49, 67, 93, 105, 116, 120, 121, 242, 247, 254, 272, 349, 398, 415, 420, 511, 525, 540, 541, 606, 627, 659, 660, 667, 736, 773, 775, 793, 809, 843, 847, 882, 894, 898, 912, 920, 938, 960, 995, 1014, 1025, 1128, 1149, 1150, 1184, 1283, 1343, 1432, 1436], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissinggroupid", [8, 61, 156, 171, 187, 192, 195, 297, 311, 335, 355, 373, 398, 450, 492, 496, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 821, 843, 846, 863, 877, 883, 894, 964, 1014, 1053, 1082, 1085, 1095, 1233, 1254, 1276, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.model.profiletest.testtostringnullsafe", [581, 606, 701, 1141, 1234], 0], ["org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldoverrideanddeactivateactiveprofile", [14, 169, 274, 307, 414, 430, 440, 472, 486, 503, 521, 530, 551, 554, 606, 658, 701, 759, 805, 871, 888, 908, 1141, 1357, 1378, 1429], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingpluginartifactid", [8, 61, 75, 131, 156, 171, 179, 187, 192, 195, 215, 241, 242, 297, 311, 335, 355, 364, 373, 398, 450, 492, 496, 517, 525, 531, 534, 540, 590, 601, 606, 608, 632, 654, 660, 667, 672, 712, 713, 720, 727, 736, 739, 751, 773, 821, 843, 846, 847, 863, 877, 883, 894, 928, 964, 995, 1014, 1016, 1053, 1082, 1085, 1095, 1114, 1149, 1233, 1254, 1259, 1266, 1276, 1343, 1374, 1381, 1393, 1407, 1418, 1439], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnegatedvalue_userproperty", [41, 55, 291, 333, 430, 440, 472, 486, 503, 530, 606, 628, 654, 744, 759, 871, 883, 908, 930, 1084, 1141, 1251, 1374], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnameonly_userproperty", [41, 55, 291, 333, 430, 440, 472, 486, 503, 530, 606, 628, 654, 744, 759, 868, 871, 883, 908, 930, 1084, 1141, 1251, 1374], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnegatednameonly_userproperty", [41, 55, 291, 333, 430, 440, 472, 486, 503, 530, 606, 628, 654, 744, 759, 868, 871, 883, 908, 930, 1084, 1141, 1251, 1374], 0], ["org.apache.maven.project.modelutilstest.testshouldusemainplugindependencyversionovermanageddepversion", [75, 121, 163, 271, 275, 364, 456, 509, 510, 531, 578, 739, 751, 775, 938, 960, 979, 1016, 1126, 1228, 1299, 1308, 1407, 1436], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testpluginartifactsexpressionreference", [12, 21, 27, 34, 52, 58, 63, 85, 94, 96, 146, 147, 154, 157, 165, 175, 181, 183, 189, 193, 198, 200, 208, 220, 231, 232, 233, 235, 236, 249, 250, 256, 263, 265, 266, 274, 276, 289, 295, 306, 309, 314, 316, 331, 347, 350, 362, 365, 382, 400, 402, 419, 424, 433, 449, 460, 468, 474, 477, 494, 495, 535, 540, 548, 555, 565, 571, 577, 584, 595, 598, 606, 632, 638, 640, 643, 645, 646, 649, 651, 653, 663, 674, 679, 687, 698, 700, 703, 707, 717, 737, 746, 768, 773, 793, 794, 803, 809, 817, 824, 825, 826, 833, 843, 858, 870, 872, 873, 875, 886, 893, 894, 896, 904, 906, 909, 911, 929, 948, 953, 954, 957, 965, 966, 968, 974, 975, 981, 985, 1005, 1006, 1021, 1034, 1042, 1068, 1069, 1071, 1076, 1081, 1091, 1092, 1102, 1108, 1122, 1125, 1139, 1146, 1155, 1159, 1162, 1168, 1175, 1190, 1193, 1194, 1200, 1201, 1203, 1210, 1237, 1255, 1256, 1262, 1268, 1274, 1281, 1286, 1306, 1315, 1321, 1330, 1354, 1358, 1359, 1367, 1392, 1398, 1405, 1410, 1413, 1416, 1420, 1431], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testbasedirextractionwithmissingproject", [21, 52, 85, 146, 147, 165, 181, 193, 200, 207, 231, 235, 249, 256, 263, 266, 274, 309, 316, 331, 362, 399, 419, 424, 433, 449, 494, 495, 535, 555, 565, 577, 584, 595, 617, 632, 638, 645, 651, 663, 674, 679, 687, 700, 703, 707, 717, 737, 803, 824, 833, 858, 872, 873, 875, 886, 893, 896, 909, 911, 948, 953, 954, 966, 975, 981, 985, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testtwoexpressions", [8, 21, 52, 85, 105, 146, 147, 165, 181, 193, 200, 207, 231, 235, 242, 249, 256, 263, 266, 274, 309, 316, 331, 360, 362, 399, 419, 420, 424, 433, 449, 494, 495, 535, 540, 555, 565, 577, 584, 595, 606, 617, 632, 638, 643, 645, 651, 660, 663, 667, 674, 679, 687, 700, 703, 707, 717, 737, 793, 794, 803, 809, 824, 833, 847, 858, 872, 873, 875, 886, 893, 896, 909, 911, 948, 953, 954, 966, 975, 981, 985, 995, 1003, 1005, 1006, 1012, 1021, 1042, 1068, 1071, 1122, 1125, 1155, 1162, 1163, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1298, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420, 1432], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testinvalidaggregatorpackaging", [8, 61, 156, 171, 187, 192, 195, 297, 311, 335, 355, 373, 398, 450, 492, 496, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 821, 843, 846, 863, 877, 883, 894, 897, 964, 1014, 1053, 1082, 1085, 1095, 1233, 1254, 1276, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingversion", [8, 61, 156, 171, 187, 192, 195, 297, 311, 335, 355, 373, 398, 450, 492, 496, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 821, 843, 846, 863, 877, 883, 964, 1014, 1053, 1082, 1085, 1095, 1233, 1254, 1276, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.projectdependenciesresolvertest.testsystemscopedependencies", [5, 12, 15, 21, 24, 27, 28, 32, 34, 40, 47, 52, 56, 57, 58, 63, 65, 68, 79, 80, 82, 85, 89, 92, 94, 96, 97, 98, 100, 102, 106, 116, 121, 139, 145, 146, 154, 157, 159, 160, 165, 175, 177, 181, 183, 189, 193, 198, 200, 208, 209, 217, 220, 221, 224, 226, 231, 232, 233, 234, 235, 248, 249, 250, 251, 256, 261, 263, 265, 266, 272, 274, 276, 283, 289, 295, 300, 306, 309, 314, 316, 320, 331, 332, 339, 343, 347, 350, 352, 357, 359, 362, 365, 366, 372, 375, 379, 380, 383, 389, 400, 401, 402, 406, 410, 413, 418, 419, 432, 433, 441, 445, 449, 458, 460, 461, 466, 467, 468, 469, 470, 471, 474, 477, 478, 481, 494, 495, 502, 511, 513, 520, 525, 533, 535, 537, 540, 548, 555, 559, 562, 565, 571, 573, 574, 577, 580, 584, 591, 595, 598, 606, 609, 621, 632, 640, 641, 643, 645, 649, 651, 663, 669, 674, 678, 679, 687, 688, 691, 694, 703, 704, 707, 709, 711, 717, 722, 725, 733, 736, 737, 746, 755, 764, 768, 773, 775, 776, 777, 779, 784, 787, 788, 789, 793, 800, 802, 803, 809, 811, 812, 817, 824, 825, 826, 832, 833, 835, 836, 837, 840, 843, 858, 859, 861, 866, 869, 870, 875, 879, 886, 893, 894, 896, 898, 899, 904, 905, 910, 911, 914, 923, 929, 938, 942, 946, 947, 948, 951, 954, 957, 960, 961, 962, 965, 968, 975, 980, 981, 983, 985, 992, 996, 1006, 1009, 1014, 1021, 1025, 1030, 1034, 1038, 1039, 1040, 1041, 1042, 1048, 1050, 1054, 1061, 1068, 1069, 1071, 1072, 1081, 1086, 1087, 1091, 1092, 1096, 1099, 1102, 1105, 1106, 1108, 1109, 1122, 1125, 1128, 1131, 1135, 1139, 1143, 1144, 1146, 1155, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1168, 1169, 1174, 1175, 1176, 1177, 1189, 1190, 1191, 1193, 1194, 1200, 1203, 1210, 1216, 1227, 1232, 1237, 1239, 1248, 1250, 1255, 1256, 1262, 1269, 1274, 1280, 1286, 1293, 1294, 1302, 1306, 1311, 1315, 1316, 1319, 1321, 1323, 1324, 1325, 1328, 1330, 1333, 1334, 1340, 1343, 1345, 1358, 1360, 1367, 1383, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1410, 1413, 1416, 1419, 1422, 1423, 1431, 1432, 1435, 1436], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testescapedvariablepassthrough", [21, 52, 85, 146, 147, 165, 181, 193, 200, 207, 231, 235, 249, 256, 263, 266, 274, 309, 316, 331, 362, 399, 419, 424, 433, 449, 494, 495, 535, 540, 555, 565, 577, 584, 595, 606, 617, 632, 638, 643, 645, 651, 663, 674, 679, 687, 700, 703, 707, 717, 737, 793, 794, 803, 809, 824, 833, 858, 872, 873, 875, 886, 893, 894, 896, 909, 911, 948, 953, 954, 966, 975, 981, 985, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1306, 1336, 1358, 1367, 1398, 1410, 1420], 0], ["org.apache.maven.model.dependencytest.testequalsnullsafe", [121], 0], ["org.apache.maven.model.modeltest.testtostringnullsafe", [525, 540, 606, 736, 901, 941, 1082, 1343], 0], ["org.apache.maven.lifecycle.lifecycleexecutortest.testlifecyclepluginsretrievalfordefaultlifecycle", [17, 21, 35, 51, 52, 81, 85, 124, 181, 194, 225, 231, 235, 240, 256, 266, 270, 271, 274, 292, 309, 310, 316, 331, 358, 362, 364, 394, 419, 433, 449, 455, 456, 494, 497, 506, 508, 524, 531, 535, 550, 555, 565, 566, 584, 601, 610, 623, 629, 632, 645, 663, 668, 674, 679, 687, 703, 705, 707, 717, 747, 764, 824, 833, 834, 858, 875, 886, 889, 893, 896, 911, 954, 975, 985, 999, 1006, 1011, 1016, 1037, 1042, 1055, 1071, 1073, 1119, 1122, 1125, 1132, 1162, 1192, 1194, 1200, 1203, 1205, 1244, 1256, 1259, 1262, 1274, 1306, 1358, 1371, 1394, 1398, 1409, 1410], 0], ["org.apache.maven.execution.projectsortertest.testmatchingartifactidsdifferentgroupids", [8, 49, 67, 93, 105, 116, 120, 121, 242, 247, 254, 272, 349, 398, 415, 420, 453, 511, 525, 540, 606, 627, 659, 660, 667, 736, 773, 775, 793, 809, 843, 847, 882, 894, 898, 912, 920, 938, 960, 995, 1014, 1025, 1128, 1149, 1150, 1184, 1283, 1343, 1432, 1436], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testvalueextractionfromsystempropertieswithmissingproject", [21, 52, 85, 146, 147, 165, 181, 193, 200, 207, 231, 235, 249, 256, 263, 266, 274, 309, 316, 331, 362, 399, 419, 424, 433, 449, 494, 495, 535, 555, 565, 577, 584, 595, 617, 632, 638, 645, 651, 663, 674, 679, 687, 700, 703, 707, 717, 737, 803, 824, 833, 858, 872, 873, 875, 886, 893, 896, 909, 911, 948, 953, 954, 966, 975, 981, 985, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420], 0], ["org.apache.maven.plugin.pluginmanagertest.testaggregatormojo", [17, 21, 52, 85, 110, 181, 231, 235, 240, 256, 266, 274, 309, 316, 331, 362, 419, 433, 449, 494, 535, 555, 565, 584, 632, 645, 663, 674, 679, 687, 703, 707, 717, 824, 833, 834, 858, 875, 886, 893, 896, 911, 954, 975, 985, 999, 1006, 1042, 1046, 1071, 1122, 1125, 1162, 1192, 1194, 1200, 1203, 1244, 1256, 1262, 1274, 1306, 1358, 1394, 1398, 1410], 0], ["org.apache.maven.execution.projectsortertest.testmatchingidsandversions", [49, 242, 272, 381, 511, 525, 540, 606, 627, 643, 660, 667, 736, 773, 793, 809, 843, 847, 882, 894, 898, 912, 995, 1283, 1343, 1432], 0], ["org.apache.maven.execution.projectsortertest.testshouldnotfailwhenmanagedplugindepreferencescurrentproject", [8, 49, 67, 105, 121, 242, 247, 271, 272, 398, 420, 456, 511, 525, 531, 540, 606, 616, 627, 660, 667, 736, 739, 751, 766, 773, 775, 793, 809, 843, 847, 882, 894, 898, 907, 912, 920, 938, 995, 1014, 1016, 1128, 1149, 1183, 1184, 1283, 1299, 1343, 1432, 1436], 0], ["org.apache.maven.execution.projectsortertest.testshouldnotfailwhenplugindepreferencescurrentproject", [8, 49, 67, 105, 116, 121, 179, 215, 242, 247, 271, 272, 349, 398, 415, 420, 456, 511, 525, 531, 540, 606, 627, 660, 667, 736, 739, 751, 773, 775, 793, 809, 843, 847, 882, 894, 898, 907, 912, 920, 938, 960, 995, 1014, 1016, 1025, 1128, 1149, 1150, 1183, 1184, 1283, 1299, 1343, 1407, 1432, 1436], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingrepositoryid", [0, 61, 95, 156, 171, 187, 192, 297, 311, 312, 314, 318, 335, 355, 373, 398, 492, 519, 525, 534, 540, 606, 608, 632, 640, 642, 654, 657, 720, 727, 736, 773, 821, 843, 846, 863, 877, 883, 894, 916, 957, 1001, 1014, 1060, 1085, 1095, 1233, 1254, 1307, 1315, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingpluginversion", [8, 61, 75, 131, 156, 171, 173, 179, 187, 192, 215, 241, 242, 271, 297, 311, 335, 355, 364, 373, 398, 450, 492, 496, 517, 525, 531, 534, 540, 590, 601, 606, 608, 632, 654, 660, 667, 672, 712, 713, 720, 727, 736, 739, 773, 821, 843, 846, 847, 863, 877, 883, 894, 928, 964, 995, 1014, 1016, 1053, 1082, 1085, 1095, 1114, 1149, 1233, 1254, 1259, 1266, 1276, 1343, 1374, 1381, 1393, 1407, 1418, 1439], 0], ["org.apache.maven.execution.projectsortertest.testdependencyprecedesprojectthatusesspecificdependencyversion", [8, 46, 49, 59, 67, 93, 105, 116, 120, 121, 128, 130, 140, 151, 184, 230, 237, 242, 247, 254, 257, 272, 292, 299, 341, 349, 396, 398, 415, 420, 442, 476, 511, 518, 525, 540, 541, 606, 627, 659, 660, 667, 668, 715, 732, 736, 742, 762, 773, 775, 793, 809, 843, 847, 855, 882, 890, 894, 898, 912, 917, 920, 938, 955, 960, 995, 1000, 1007, 1008, 1014, 1019, 1025, 1028, 1035, 1052, 1075, 1128, 1149, 1150, 1184, 1195, 1236, 1283, 1326, 1343, 1344, 1385, 1395, 1432, 1436], 0], ["org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.testversionrange", [42, 53, 136, 141, 174, 430, 452, 472, 486, 490, 503, 527, 529, 530, 572, 606, 619, 654, 818, 868, 883, 908, 1094, 1134, 1141, 1241, 1374], 0], ["org.apache.maven.projectdependenciesresolvertest.testexclusionsindependencies", [0, 4, 5, 6, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 24, 27, 28, 32, 34, 36, 37, 40, 41, 43, 45, 47, 52, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 82, 84, 85, 87, 89, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 112, 114, 116, 117, 119, 121, 124, 125, 127, 131, 133, 136, 138, 139, 142, 144, 145, 146, 148, 150, 154, 156, 157, 159, 160, 161, 162, 165, 166, 167, 168, 169, 174, 175, 177, 179, 180, 181, 183, 187, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 205, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 231, 232, 233, 234, 235, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 259, 261, 262, 263, 265, 266, 267, 269, 271, 272, 274, 275, 276, 278, 280, 281, 283, 284, 286, 287, 289, 290, 291, 292, 295, 296, 298, 300, 301, 305, 306, 308, 309, 311, 312, 314, 316, 317, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 339, 343, 346, 347, 350, 351, 352, 354, 356, 357, 359, 360, 362, 364, 365, 366, 368, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 383, 385, 387, 389, 390, 395, 398, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 416, 419, 420, 421, 423, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 448, 449, 451, 454, 456, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 499, 502, 503, 504, 505, 507, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 543, 547, 548, 552, 553, 554, 555, 558, 559, 562, 563, 565, 567, 569, 570, 571, 573, 577, 579, 580, 582, 584, 588, 589, 590, 591, 593, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 608, 609, 613, 614, 616, 620, 621, 624, 625, 628, 630, 632, 634, 636, 639, 640, 641, 643, 644, 645, 647, 648, 649, 651, 652, 657, 658, 660, 663, 664, 667, 669, 672, 674, 675, 676, 678, 679, 683, 685, 686, 687, 688, 689, 691, 692, 694, 697, 698, 699, 701, 703, 704, 706, 707, 709, 710, 711, 712, 713, 714, 717, 720, 721, 722, 723, 724, 725, 728, 730, 733, 736, 737, 738, 739, 743, 744, 745, 746, 748, 749, 751, 755, 757, 758, 759, 761, 764, 765, 766, 767, 768, 773, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 787, 788, 789, 791, 792, 793, 794, 798, 799, 800, 801, 802, 803, 806, 807, 808, 809, 811, 812, 813, 816, 817, 818, 821, 822, 824, 825, 826, 828, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 843, 845, 847, 850, 851, 852, 856, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 871, 874, 875, 877, 879, 881, 884, 886, 887, 888, 891, 893, 894, 895, 896, 898, 899, 904, 905, 908, 910, 911, 913, 914, 915, 919, 921, 923, 924, 925, 926, 929, 931, 933, 934, 935, 937, 938, 939, 941, 942, 943, 946, 947, 948, 949, 950, 951, 952, 954, 957, 960, 961, 962, 963, 964, 965, 968, 975, 977, 978, 980, 981, 983, 985, 987, 990, 991, 992, 994, 995, 996, 998, 1001, 1002, 1006, 1009, 1012, 1013, 1014, 1016, 1017, 1020, 1021, 1022, 1025, 1030, 1031, 1034, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1050, 1051, 1054, 1059, 1061, 1062, 1065, 1067, 1068, 1069, 1071, 1072, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1091, 1092, 1096, 1098, 1099, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1122, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1135, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1149, 1152, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1180, 1182, 1186, 1188, 1189, 1190, 1191, 1193, 1194, 1196, 1197, 1198, 1200, 1203, 1208, 1209, 1210, 1214, 1215, 1216, 1219, 1220, 1221, 1226, 1227, 1229, 1230, 1232, 1233, 1235, 1237, 1238, 1239, 1240, 1242, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1269, 1270, 1271, 1273, 1274, 1276, 1278, 1279, 1280, 1282, 1286, 1287, 1292, 1293, 1294, 1296, 1297, 1298, 1300, 1301, 1302, 1305, 1306, 1310, 1311, 1312, 1315, 1316, 1317, 1319, 1320, 1321, 1323, 1324, 1325, 1328, 1329, 1330, 1331, 1333, 1334, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1350, 1351, 1352, 1353, 1355, 1357, 1358, 1361, 1362, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1375, 1377, 1378, 1379, 1383, 1386, 1390, 1392, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1405, 1407, 1408, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1421, 1422, 1423, 1431, 1432, 1433, 1435, 1436, 1437, 1439], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testescapedvariablepassthroughinlargerexpression", [21, 52, 85, 146, 147, 165, 181, 193, 200, 207, 231, 235, 249, 256, 263, 266, 274, 309, 316, 331, 362, 399, 419, 424, 433, 449, 494, 495, 511, 535, 540, 555, 565, 577, 584, 595, 606, 617, 632, 638, 643, 645, 651, 663, 674, 679, 687, 700, 703, 707, 717, 736, 737, 793, 794, 803, 809, 824, 833, 858, 872, 873, 875, 886, 893, 894, 896, 909, 911, 948, 953, 954, 966, 975, 981, 985, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420, 1432], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testmultiplesubexpressionsinlargerexpression", [21, 52, 85, 146, 147, 165, 181, 193, 200, 207, 231, 235, 249, 256, 263, 266, 274, 309, 316, 331, 362, 399, 419, 424, 433, 449, 494, 495, 511, 525, 535, 540, 555, 565, 577, 584, 595, 606, 617, 632, 638, 643, 645, 651, 663, 674, 679, 687, 700, 703, 707, 717, 736, 737, 793, 794, 803, 809, 824, 833, 843, 858, 872, 873, 875, 886, 893, 894, 896, 898, 909, 911, 948, 953, 954, 966, 975, 981, 985, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420, 1432], 0], ["org.apache.maven.execution.projectsortertest.testplugindependenciesinfluencesorting_declarationinparent", [8, 31, 33, 49, 50, 67, 88, 93, 105, 116, 120, 121, 179, 182, 215, 242, 247, 254, 271, 272, 349, 363, 398, 415, 420, 453, 456, 511, 525, 531, 540, 606, 627, 643, 659, 660, 667, 736, 739, 750, 751, 773, 775, 793, 809, 843, 847, 882, 894, 898, 907, 912, 920, 922, 938, 960, 989, 995, 1014, 1016, 1025, 1027, 1128, 1138, 1149, 1150, 1154, 1183, 1184, 1211, 1283, 1299, 1343, 1407, 1428, 1432, 1436], 0], ["org.apache.maven.plugin.pluginmanagertest.testsurefireplugin", [17, 21, 52, 85, 110, 181, 231, 235, 240, 256, 266, 274, 309, 316, 331, 362, 419, 433, 449, 494, 535, 555, 565, 584, 632, 645, 663, 674, 679, 687, 703, 707, 717, 824, 833, 834, 858, 875, 886, 893, 896, 911, 954, 975, 985, 999, 1006, 1042, 1046, 1071, 1122, 1125, 1162, 1192, 1194, 1200, 1203, 1244, 1256, 1262, 1274, 1306, 1358, 1394, 1398, 1410], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnameonly_systemproperty", [41, 55, 291, 333, 430, 440, 472, 486, 503, 530, 606, 628, 654, 744, 759, 868, 871, 883, 908, 930, 1084, 1141, 1251, 1374], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testinvalidids", [8, 61, 156, 171, 187, 192, 195, 297, 311, 335, 355, 373, 398, 450, 492, 496, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 821, 843, 846, 863, 877, 883, 894, 964, 1014, 1053, 1082, 1085, 1095, 1233, 1254, 1276, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.repository.legacyrepositorysystemtest.testthatasystemscopeddependencyisnotresolvedfromrepositories", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 52, 54, 55, 56, 57, 60, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 199, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 242, 243, 244, 245, 246, 247, 248, 252, 253, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 451, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 496, 498, 499, 500, 501, 502, 503, 504, 505, 507, 510, 511, 512, 514, 515, 517, 519, 520, 521, 522, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 545, 546, 547, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 618, 620, 621, 622, 624, 625, 626, 628, 630, 631, 632, 633, 635, 636, 637, 639, 640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 710, 712, 713, 714, 716, 717, 718, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 804, 806, 807, 808, 810, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 832, 833, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 867, 868, 869, 871, 874, 875, 876, 877, 878, 880, 881, 884, 885, 886, 887, 888, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 911, 913, 915, 918, 919, 921, 922, 924, 925, 926, 927, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 954, 956, 957, 958, 959, 960, 962, 963, 964, 965, 967, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 980, 982, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1004, 1006, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1022, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1032, 1034, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1107, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1170, 1171, 1172, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1320, 1321, 1322, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testbaddependencyscope", [8, 98, 116, 121, 156, 171, 173, 187, 192, 195, 311, 335, 355, 373, 398, 450, 492, 496, 510, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 775, 776, 821, 843, 846, 863, 877, 878, 883, 894, 916, 938, 960, 964, 1014, 1025, 1053, 1082, 1085, 1095, 1178, 1216, 1229, 1233, 1254, 1276, 1340, 1343, 1374, 1381, 1393, 1418, 1436, 1439], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencyversion", [8, 61, 98, 116, 121, 156, 171, 187, 192, 195, 297, 311, 335, 355, 373, 398, 450, 492, 496, 510, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 775, 821, 843, 846, 863, 877, 878, 883, 894, 916, 960, 964, 1014, 1025, 1053, 1082, 1085, 1095, 1178, 1216, 1229, 1233, 1254, 1276, 1340, 1343, 1374, 1381, 1393, 1418, 1436, 1439], 0], ["org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldactivatedefaultprofile", [14, 76, 136, 169, 174, 266, 274, 291, 307, 414, 430, 465, 472, 486, 503, 521, 530, 543, 551, 554, 572, 606, 658, 701, 719, 744, 805, 818, 828, 868, 888, 908, 939, 963, 1077, 1094, 1141, 1234, 1249, 1251, 1296, 1357, 1378], 0], ["org.apache.maven.model.profiletest.testhashcodenullsafe", [606, 1141], 0], ["org.apache.maven.model.profiletest.testequalsnullsafe", [606, 1141], 0], ["org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldnotactivatereversalofpresentsystemproperty", [14, 55, 136, 169, 174, 266, 274, 291, 307, 414, 430, 440, 465, 472, 486, 503, 521, 530, 543, 551, 554, 606, 628, 658, 701, 744, 759, 805, 818, 828, 871, 888, 908, 939, 963, 1033, 1077, 1084, 1141, 1249, 1251, 1296, 1357, 1378], 0], ["org.apache.maven.model.profiletest.testequalsidentity", [66, 606, 1141], 0], ["org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldnotactivatedefaultprofile", [14, 55, 76, 136, 169, 174, 266, 274, 291, 307, 414, 430, 440, 465, 472, 486, 503, 521, 530, 543, 551, 554, 606, 628, 658, 701, 719, 744, 759, 805, 818, 828, 871, 888, 908, 939, 963, 1077, 1084, 1141, 1234, 1249, 1251, 1296, 1357, 1378], 0], ["org.apache.maven.project.modelutilstest.testshouldkeeporiginalpluginexecutionordering", [75, 121, 124, 163, 271, 275, 294, 364, 456, 510, 531, 739, 751, 775, 928, 938, 979, 1016, 1126, 1221, 1228, 1264, 1308, 1318, 1371, 1407, 1436], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testbadplugindependencyscope", [8, 61, 75, 98, 121, 131, 156, 171, 179, 187, 192, 195, 215, 241, 242, 271, 311, 335, 355, 364, 373, 398, 450, 492, 496, 510, 517, 525, 531, 534, 540, 590, 601, 606, 608, 632, 654, 660, 667, 672, 712, 713, 720, 727, 736, 739, 751, 773, 775, 776, 821, 843, 846, 847, 863, 877, 883, 894, 916, 928, 938, 964, 995, 1014, 1016, 1053, 1082, 1085, 1095, 1114, 1149, 1178, 1233, 1254, 1259, 1266, 1276, 1308, 1343, 1374, 1381, 1393, 1407, 1418, 1436, 1439], 0], ["org.apache.maven.plugin.pluginmanagertest.testmojothatrequiresexecutiontoagivenphasebeforeexecutingitself", [17, 21, 52, 85, 110, 181, 231, 235, 240, 256, 266, 274, 292, 309, 316, 331, 362, 419, 433, 449, 494, 535, 555, 565, 584, 632, 645, 663, 674, 679, 687, 703, 707, 717, 824, 833, 834, 858, 875, 886, 893, 896, 911, 954, 975, 985, 999, 1006, 1042, 1046, 1071, 1075, 1122, 1125, 1162, 1192, 1194, 1200, 1203, 1244, 1256, 1262, 1274, 1306, 1358, 1394, 1398, 1410], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testpluginartifactmapexpressionreference", [12, 21, 27, 34, 52, 58, 63, 85, 94, 96, 146, 147, 154, 157, 165, 175, 181, 183, 188, 189, 193, 198, 200, 208, 220, 231, 232, 233, 235, 236, 249, 250, 256, 263, 265, 266, 274, 276, 289, 295, 306, 309, 314, 316, 331, 347, 350, 362, 365, 382, 400, 402, 419, 424, 433, 449, 460, 468, 474, 477, 494, 495, 535, 540, 544, 548, 555, 565, 571, 577, 584, 595, 598, 606, 632, 638, 640, 643, 645, 646, 649, 651, 653, 663, 674, 679, 687, 698, 700, 703, 707, 717, 737, 746, 768, 773, 793, 794, 803, 809, 817, 824, 825, 826, 833, 843, 858, 870, 872, 873, 875, 886, 893, 894, 896, 904, 906, 909, 911, 912, 929, 948, 953, 954, 957, 965, 966, 968, 974, 975, 981, 985, 1005, 1006, 1021, 1034, 1042, 1068, 1069, 1071, 1076, 1081, 1091, 1092, 1102, 1108, 1110, 1122, 1125, 1139, 1146, 1155, 1159, 1162, 1168, 1175, 1190, 1193, 1194, 1200, 1201, 1203, 1210, 1237, 1255, 1256, 1262, 1268, 1274, 1281, 1286, 1306, 1315, 1321, 1330, 1354, 1358, 1359, 1367, 1392, 1398, 1405, 1410, 1413, 1416, 1420, 1431], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencygroupid", [8, 61, 98, 116, 121, 156, 171, 187, 192, 195, 297, 311, 335, 355, 373, 398, 450, 492, 496, 510, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 775, 821, 843, 846, 863, 877, 878, 883, 894, 916, 938, 960, 964, 1014, 1025, 1053, 1082, 1085, 1095, 1178, 1216, 1229, 1233, 1254, 1276, 1340, 1343, 1374, 1381, 1393, 1418, 1439], 0], ["org.apache.maven.execution.projectsortertest.testmatchingidsanddifferentversions", [8, 49, 67, 105, 120, 242, 247, 254, 272, 398, 420, 511, 525, 540, 606, 627, 660, 667, 736, 773, 793, 809, 843, 847, 882, 894, 898, 912, 920, 995, 1014, 1128, 1149, 1283, 1343, 1432], 0], ["org.apache.maven.execution.projectsortertest.testpluginversionsareconsidered", [8, 49, 50, 67, 105, 120, 179, 215, 242, 247, 254, 271, 272, 349, 398, 420, 456, 511, 525, 531, 540, 606, 627, 660, 667, 736, 739, 751, 773, 793, 809, 843, 847, 882, 894, 898, 907, 912, 920, 995, 1014, 1016, 1128, 1149, 1150, 1183, 1283, 1343, 1407, 1432], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testshouldextractpluginartifacts", [21, 27, 34, 52, 85, 94, 96, 146, 147, 154, 157, 165, 181, 193, 200, 207, 231, 233, 235, 236, 249, 256, 263, 266, 274, 276, 309, 316, 331, 350, 362, 365, 382, 399, 400, 419, 424, 425, 433, 449, 460, 468, 470, 477, 494, 495, 535, 540, 555, 565, 577, 584, 595, 606, 617, 632, 638, 643, 645, 646, 649, 651, 663, 674, 679, 687, 698, 700, 703, 707, 717, 737, 793, 794, 803, 809, 824, 825, 833, 858, 872, 873, 875, 886, 893, 896, 904, 909, 911, 948, 953, 954, 966, 975, 981, 985, 1003, 1005, 1006, 1021, 1042, 1068, 1069, 1071, 1091, 1092, 1102, 1122, 1124, 1125, 1139, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1255, 1256, 1262, 1274, 1286, 1306, 1321, 1336, 1354, 1358, 1359, 1367, 1398, 1410, 1413, 1416, 1420], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingmodelversion", [8, 61, 156, 171, 187, 192, 195, 297, 335, 355, 373, 398, 450, 492, 496, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 821, 843, 846, 863, 877, 883, 894, 964, 1014, 1053, 1082, 1085, 1095, 1233, 1254, 1276, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.model.dependencytest.testtostringnullsafe", [121, 549], 0], ["org.apache.maven.execution.projectsortertest.testmatchinggroupidsdifferentartifactids", [8, 49, 67, 93, 105, 116, 120, 121, 242, 247, 254, 272, 349, 398, 415, 420, 453, 511, 525, 540, 606, 627, 659, 660, 667, 736, 773, 775, 793, 809, 843, 847, 882, 894, 898, 912, 920, 938, 960, 995, 1014, 1025, 1128, 1149, 1150, 1184, 1283, 1343, 1432, 1436], 0], ["org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.testprefixnegated", [136, 174, 206, 430, 472, 486, 503, 530, 606, 619, 654, 696, 818, 868, 883, 908, 1094, 1141, 1241, 1253, 1374], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testpompropertyextractionwithmissingproject_withdotnotation", [21, 52, 85, 146, 147, 165, 181, 193, 200, 207, 231, 235, 249, 256, 263, 266, 274, 309, 316, 331, 362, 399, 419, 424, 433, 449, 494, 495, 535, 540, 555, 565, 577, 584, 595, 606, 617, 632, 638, 643, 645, 651, 663, 674, 679, 687, 700, 703, 707, 717, 737, 783, 793, 794, 803, 809, 824, 833, 858, 872, 873, 875, 886, 893, 896, 909, 911, 948, 953, 954, 966, 975, 981, 985, 987, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1147, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420, 1432], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testpluginartifactidexpressionreference", [12, 21, 52, 58, 63, 85, 146, 147, 165, 175, 181, 183, 189, 193, 198, 200, 208, 220, 231, 232, 235, 249, 250, 256, 263, 265, 266, 274, 289, 306, 309, 314, 316, 331, 347, 362, 382, 402, 419, 424, 433, 449, 474, 494, 495, 523, 535, 540, 548, 555, 565, 577, 584, 595, 598, 606, 632, 638, 640, 643, 645, 646, 651, 663, 674, 679, 687, 700, 703, 707, 717, 737, 746, 768, 773, 793, 794, 803, 809, 817, 824, 833, 843, 858, 870, 872, 873, 875, 886, 893, 894, 896, 909, 911, 929, 948, 953, 954, 957, 965, 966, 968, 974, 975, 981, 985, 1005, 1006, 1021, 1034, 1042, 1068, 1071, 1076, 1108, 1122, 1125, 1146, 1155, 1159, 1162, 1168, 1175, 1190, 1193, 1194, 1200, 1201, 1203, 1210, 1237, 1256, 1262, 1274, 1281, 1306, 1315, 1330, 1354, 1358, 1367, 1392, 1398, 1405, 1410, 1420, 1431], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithvalue_systemproperty", [41, 55, 206, 291, 333, 430, 440, 472, 486, 503, 530, 606, 628, 654, 744, 759, 868, 871, 883, 908, 930, 1084, 1141, 1251, 1374], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithvalue_userproperty", [41, 55, 291, 333, 430, 440, 472, 486, 503, 530, 606, 628, 654, 744, 759, 871, 883, 908, 930, 1084, 1141, 1251, 1374], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testvalueextractionfromsystempropertieswithmissingproject_withdotnotation", [21, 52, 85, 146, 147, 165, 181, 193, 200, 207, 231, 235, 249, 256, 263, 266, 274, 309, 316, 331, 362, 399, 419, 424, 433, 449, 494, 495, 535, 555, 565, 577, 584, 595, 617, 632, 638, 645, 651, 663, 674, 679, 687, 700, 703, 707, 717, 737, 803, 824, 833, 858, 872, 873, 875, 886, 893, 896, 909, 911, 948, 953, 954, 966, 975, 981, 985, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithvalue_userpropertydominantoversystemproperty", [41, 55, 291, 333, 430, 440, 472, 486, 503, 530, 606, 628, 654, 744, 759, 871, 883, 908, 930, 1084, 1141, 1251, 1374], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencyartifactid", [8, 61, 98, 116, 121, 156, 171, 187, 192, 195, 297, 311, 335, 355, 373, 398, 450, 492, 496, 510, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 821, 843, 846, 863, 877, 878, 883, 894, 916, 938, 960, 964, 1014, 1025, 1053, 1082, 1085, 1095, 1178, 1216, 1229, 1233, 1254, 1276, 1340, 1343, 1374, 1381, 1393, 1418, 1436, 1439], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testvalueextractionwithapomvaluecontainingapath", [8, 21, 52, 85, 105, 146, 165, 181, 193, 200, 207, 231, 235, 242, 249, 256, 263, 266, 274, 309, 316, 331, 362, 399, 419, 420, 424, 433, 449, 494, 495, 535, 540, 555, 565, 577, 584, 595, 606, 617, 632, 638, 643, 645, 651, 660, 663, 667, 674, 679, 687, 700, 703, 707, 717, 737, 793, 794, 803, 809, 824, 833, 847, 858, 872, 873, 875, 886, 893, 896, 911, 948, 953, 954, 966, 975, 981, 985, 995, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1145, 1155, 1162, 1163, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1298, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420, 1432], 0], ["org.apache.maven.plugin.pluginmanagertest.testmojoconfigurationismergedcorrectly", [17, 21, 52, 85, 110, 181, 231, 235, 240, 256, 266, 274, 309, 316, 331, 362, 419, 433, 449, 494, 535, 555, 565, 584, 632, 645, 663, 674, 679, 687, 703, 707, 717, 824, 833, 834, 858, 875, 886, 893, 896, 911, 954, 975, 985, 999, 1006, 1042, 1046, 1071, 1122, 1125, 1162, 1192, 1194, 1200, 1203, 1244, 1256, 1262, 1274, 1306, 1358, 1394, 1398, 1410], 0], ["org.apache.maven.execution.projectsortertest.testplugindependenciesinfluencesorting", [8, 31, 49, 50, 67, 88, 93, 105, 116, 120, 121, 179, 182, 215, 242, 247, 254, 271, 272, 349, 363, 398, 415, 420, 453, 456, 511, 525, 531, 540, 606, 627, 659, 660, 667, 736, 739, 750, 751, 773, 775, 793, 809, 843, 847, 882, 894, 898, 907, 912, 920, 922, 938, 960, 989, 995, 1014, 1016, 1025, 1027, 1128, 1138, 1149, 1150, 1154, 1183, 1184, 1211, 1283, 1299, 1343, 1407, 1428, 1432, 1436], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testplugindescriptorexpressionreference", [12, 21, 52, 58, 63, 85, 86, 146, 147, 165, 175, 181, 183, 189, 193, 198, 200, 208, 220, 231, 232, 235, 249, 250, 256, 263, 265, 266, 274, 289, 306, 309, 314, 316, 331, 347, 362, 382, 402, 419, 424, 433, 449, 474, 494, 495, 535, 540, 548, 555, 565, 577, 584, 595, 598, 606, 632, 638, 640, 643, 645, 646, 651, 663, 674, 679, 687, 700, 703, 707, 717, 737, 741, 746, 768, 773, 793, 794, 796, 803, 809, 817, 823, 824, 833, 843, 858, 870, 872, 873, 875, 886, 893, 894, 896, 909, 911, 929, 948, 953, 954, 957, 965, 966, 968, 974, 975, 981, 985, 1005, 1006, 1021, 1034, 1042, 1068, 1071, 1076, 1108, 1122, 1125, 1146, 1155, 1159, 1162, 1168, 1175, 1190, 1193, 1194, 1200, 1201, 1203, 1210, 1237, 1256, 1262, 1274, 1281, 1303, 1306, 1315, 1330, 1354, 1358, 1367, 1384, 1392, 1398, 1405, 1410, 1420, 1431], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingartifactid", [8, 61, 156, 171, 187, 192, 195, 297, 311, 335, 355, 373, 398, 450, 492, 496, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 821, 846, 863, 877, 883, 894, 964, 1014, 1053, 1082, 1085, 1095, 1233, 1254, 1276, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.plugin.pluginmanagertest.testmojothatispresentinthecurrentbuild", [17, 21, 52, 85, 110, 181, 231, 235, 240, 256, 266, 274, 309, 316, 331, 362, 419, 433, 449, 494, 535, 555, 565, 584, 632, 645, 663, 674, 679, 687, 703, 707, 717, 824, 833, 834, 858, 875, 886, 893, 896, 911, 954, 975, 985, 999, 1006, 1042, 1046, 1071, 1122, 1125, 1162, 1192, 1194, 1200, 1203, 1244, 1256, 1262, 1274, 1306, 1358, 1394, 1398, 1410], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencymanagementgroupid", [8, 61, 98, 116, 121, 156, 171, 187, 192, 195, 273, 288, 297, 311, 335, 355, 367, 373, 398, 450, 492, 496, 510, 525, 534, 540, 549, 585, 590, 606, 608, 632, 654, 696, 713, 720, 727, 736, 773, 775, 821, 843, 846, 863, 877, 878, 883, 894, 938, 964, 1014, 1025, 1053, 1082, 1085, 1095, 1121, 1123, 1178, 1216, 1223, 1233, 1254, 1276, 1343, 1374, 1381, 1393, 1418, 1439], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testbaddependencyversion", [8, 98, 116, 121, 156, 171, 187, 192, 195, 311, 335, 355, 373, 398, 450, 492, 496, 510, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 736, 773, 775, 821, 843, 846, 863, 877, 878, 894, 916, 938, 960, 964, 1014, 1025, 1053, 1082, 1085, 1095, 1178, 1216, 1229, 1233, 1254, 1276, 1340, 1343, 1374, 1381, 1393, 1418, 1436, 1439], 1], ["org.apache.maven.model.dependencytest.testhashcodenullsafe", [121], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testlocalrepositoryextraction", [21, 52, 85, 146, 147, 165, 181, 193, 200, 207, 231, 235, 249, 250, 256, 263, 266, 274, 292, 309, 316, 331, 362, 399, 419, 424, 433, 449, 494, 495, 516, 535, 540, 555, 565, 577, 584, 595, 606, 617, 632, 638, 643, 645, 651, 663, 674, 679, 687, 700, 703, 707, 717, 737, 793, 794, 803, 809, 811, 812, 824, 833, 858, 872, 873, 875, 886, 893, 896, 909, 911, 948, 953, 954, 966, 975, 981, 985, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testnullsafe", [291, 430, 472, 486, 503, 530, 606, 654, 744, 883, 908, 1141, 1251, 1374], 0], ["org.apache.maven.profiles.manager.defaultprofilemanagertest.testshouldoverrideandactivateinactiveprofile", [14, 169, 274, 307, 414, 430, 440, 472, 486, 503, 521, 530, 551, 554, 606, 658, 701, 753, 759, 805, 871, 888, 908, 1141, 1234, 1357, 1378], 0], ["org.apache.maven.plugin.pluginmanagertest.testremoteresourcesplugin", [17, 21, 52, 85, 110, 181, 231, 235, 240, 256, 266, 274, 309, 316, 331, 362, 419, 433, 449, 494, 535, 555, 565, 584, 632, 645, 663, 674, 679, 687, 703, 707, 717, 824, 833, 834, 858, 875, 886, 893, 896, 911, 954, 975, 985, 999, 1006, 1042, 1046, 1071, 1122, 1125, 1162, 1192, 1194, 1200, 1203, 1244, 1256, 1262, 1274, 1306, 1358, 1394, 1398, 1410], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingtype", [8, 61, 156, 171, 187, 192, 195, 297, 311, 335, 355, 373, 398, 450, 492, 496, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 821, 843, 846, 863, 877, 883, 894, 964, 1014, 1053, 1082, 1085, 1095, 1233, 1254, 1276, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.model.profile.activation.propertyprofileactivatortest.testwithnegatednameonly_systemproperty", [41, 55, 291, 333, 430, 440, 472, 486, 503, 530, 606, 628, 654, 744, 759, 868, 871, 883, 908, 930, 1084, 1141, 1251, 1374], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingdependencymanagementartifactid", [8, 61, 98, 116, 121, 156, 171, 187, 192, 195, 273, 288, 297, 311, 335, 355, 367, 373, 398, 450, 492, 496, 510, 525, 534, 540, 549, 585, 590, 606, 608, 632, 654, 713, 720, 727, 736, 773, 821, 843, 846, 863, 877, 878, 883, 894, 938, 964, 1014, 1025, 1053, 1082, 1085, 1095, 1121, 1123, 1178, 1216, 1223, 1233, 1254, 1276, 1343, 1374, 1381, 1393, 1418, 1436, 1439], 0], ["org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.testnullsafe", [136, 174, 430, 472, 486, 503, 530, 606, 654, 818, 883, 908, 1141, 1374], 0], ["org.apache.maven.model.modeltest.testequalsidentity", [540, 606, 1173], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testmissingall", [8, 61, 156, 171, 187, 195, 335, 355, 373, 398, 450, 496, 525, 534, 540, 590, 606, 608, 632, 654, 713, 720, 727, 736, 821, 846, 863, 877, 883, 964, 1014, 1053, 1082, 1085, 1095, 1233, 1254, 1276, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.testprefix", [136, 174, 430, 472, 486, 503, 530, 572, 606, 619, 654, 818, 868, 883, 908, 1094, 1141, 1241, 1374], 0], ["org.apache.maven.model.validation.defaultmodelvalidatortest.testbadmodelversion", [61, 95, 156, 171, 187, 192, 311, 312, 318, 355, 398, 492, 525, 534, 540, 606, 608, 632, 642, 654, 657, 720, 727, 736, 773, 843, 846, 863, 877, 883, 894, 916, 1014, 1060, 1085, 1095, 1233, 1254, 1307, 1343, 1374, 1393, 1418, 1439], 0], ["org.apache.maven.model.modeltest.testequalsnullsafe", [540, 606], 0], ["org.apache.maven.model.modeltest.testhashcodenullsafe", [540, 606], 0], ["org.apache.maven.plugin.pluginparameterexpressionevaluatortest.testmissingpompropertyrefinlargerexpression", [21, 52, 85, 146, 147, 165, 181, 193, 200, 207, 231, 235, 249, 256, 263, 266, 274, 309, 316, 331, 362, 399, 419, 424, 433, 449, 494, 495, 535, 540, 555, 565, 577, 584, 595, 606, 617, 632, 638, 643, 645, 651, 663, 674, 679, 687, 700, 703, 707, 717, 737, 793, 794, 803, 809, 824, 833, 858, 872, 873, 875, 886, 893, 896, 909, 911, 948, 953, 954, 966, 975, 981, 985, 987, 1003, 1005, 1006, 1021, 1042, 1068, 1071, 1122, 1125, 1147, 1155, 1162, 1175, 1194, 1200, 1201, 1203, 1256, 1262, 1274, 1306, 1336, 1354, 1358, 1367, 1398, 1410, 1420, 1432], 0]]}