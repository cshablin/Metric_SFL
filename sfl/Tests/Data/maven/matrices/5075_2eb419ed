{"components_names": [[0, "org.apache.maven.model.building.defaultmodelbuilderfactory.newpathtranslator()"], [1, "org.apache.maven.repository.internal.defaultartifactdescriptorreader.setartifactresolver(artifactresolver)"], [2, "org.apache.maven.model.plugin.getextensions()"], [3, "org.apache.maven.model.building.defaultmodelbuilder.readparent(model;modelsource;modelbuildingrequest;defaultmodelproblemcollector)"], [4, "org.apache.maven.model.modelbase.getdistributionmanagement()"], [5, "org.apache.maven.model.building.defaultmodelbuildingrequest.getmodelsource()"], [6, "org.apache.maven.model.building.defaultmodelbuildingrequest.islocationtracking()"], [7, "org.apache.maven.model.merge.modelmerger.mergeplugin_groupid(plugin;plugin;boolean;map)"], [8, "org.apache.maven.model.validation.defaultmodelvalidator.validate20effectiverepository(modelproblemcollector;repository;string;modelbuildingrequest)"], [9, "org.apache.maven.model.merge.modelmerger.mergebuild_testoutputdirectory(build;build;boolean;map)"], [10, "org.apache.maven.model.profile.defaultprofileselector.addprofileactivator(profileactivator)"], [11, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_contributors(model;model;boolean;map)"], [12, "org.apache.maven.model.model.getbuild()"], [13, "org.apache.maven.model.merge.modelmerger.mergebuildbase_finalname(buildbase;buildbase;boolean;map)"], [14, "org.apache.maven.model.io.xpp3.mavenxpp3reader.read(reader;boolean)"], [15, "org.apache.maven.model.building.modeldata.setartifactid(string)"], [16, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_name(model;model;boolean;map)"], [17, "org.apache.maven.model.merge.modelmerger.mergepluginmanagement(pluginmanagement;pluginmanagement;boolean;map)"], [18, "org.apache.maven.model.building.defaultmodelprocessor.read(inputstream;map)"], [19, "org.apache.maven.model.building.defaultmodelbuilderfactory$stublifecyclebindingsinjector.defaultmodelbuilderfactory$stublifecyclebindingsinjector(1)"], [20, "org.apache.maven.model.building.defaultmodelbuilder.fireevent(model;modelbuildingrequest;modelproblemcollector;modelbuildingeventcatapult)"], [21, "org.apache.maven.model.building.defaultmodelbuilder.readmodel(modelsource;file;modelbuildingrequest;defaultmodelproblemcollector)"], [22, "org.apache.maven.model.building.modeldata.getactiveprofiles()"], [23, "org.apache.maven.model.path.defaultmodelurlnormalizer.defaultmodelurlnormalizer()"], [24, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator$2.abstractstringbasedmodelinterpolator$2(abstractstringbasedmodelinterpolator;boolean;file)"], [25, "org.apache.maven.model.model.seturl(string)"], [26, "org.apache.maven.model.profile.defaultprofileinjector.injectprofile(model;profile;modelbuildingrequest;modelproblemcollector)"], [27, "org.apache.maven.model.buildbase.getfinalname()"], [28, "org.apache.maven.model.model.getversion()"], [29, "org.apache.maven.model.merge.modelmerger.mergebuild(build;build;boolean;map)"], [30, "org.apache.maven.model.model.getorganization()"], [31, "org.apache.maven.model.building.defaultmodelbuildingresult.setrawmodel(string;model)"], [32, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseplugin(xmlpullparser;boolean)"], [33, "org.apache.maven.repository.internal.versionsmetadatageneratorfactory.versionsmetadatageneratorfactory()"], [34, "org.apache.maven.model.plugin.getexecutions()"], [35, "org.apache.maven.model.management.defaultdependencymanagementinjector.defaultdependencymanagementinjector()"], [36, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$objectfield.stringsearchmodelinterpolator$interpolateobjectaction$objectfield(field)"], [37, "org.apache.maven.model.building.modelproblem$version.<clinit>()"], [38, "org.apache.maven.model.superpom.defaultsuperpomprovider.defaultsuperpomprovider()"], [39, "org.apache.maven.model.plugin.defaultreportconfigurationexpander.defaultreportconfigurationexpander()"], [40, "org.apache.maven.model.interpolation.urlnormalizingpostprocessor.urlnormalizingpostprocessor(urlnormalizer)"], [41, "org.apache.maven.model.building.defaultmodelbuilderfactory.newpluginmanagementinjector()"], [42, "org.apache.maven.model.configurationcontainer.setconfiguration(object)"], [43, "org.apache.maven.model.interpolation.problemdetectingvaluesource.clearfeedback()"], [44, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_artifactid(model;model;boolean;map)"], [45, "org.apache.maven.model.merge.modelmerger.mergebuild_outputdirectory(build;build;boolean;map)"], [46, "org.apache.maven.model.profile.activation.propertyprofileactivator.propertyprofileactivator()"], [47, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.seturlnormalizer(urlnormalizer)"], [48, "org.apache.maven.model.activationfile.setexists(string)"], [49, "org.apache.maven.model.merge.modelmerger.mergebuildbase(buildbase;buildbase;boolean;map)"], [50, "org.apache.maven.model.build.getsourcedirectory()"], [51, "org.apache.maven.model.modelbase.clone()"], [52, "org.apache.maven.model.building.defaultmodelbuilder.setmodelnormalizer(modelnormalizer)"], [53, "org.apache.maven.model.plugin.setversion(string)"], [54, "org.apache.maven.model.building.modeldata.setmodel(model)"], [55, "org.apache.maven.model.inheritance.defaultinheritanceassembler$inheritancemodelmerger.mergereporting_plugins(reporting;reporting;boolean;map)"], [56, "org.apache.maven.model.model.getprofiles()"], [57, "org.apache.maven.model.interpolation.pathtranslatingpostprocessor.pathtranslatingpostprocessor(list;collection;file;pathtranslator)"], [58, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.interpolateobject(object;model;file;modelbuildingrequest;modelproblemcollector)"], [59, "org.apache.maven.model.interpolation.urlnormalizingpostprocessor.execute(string;object)"], [60, "org.apache.maven.repository.internal.defaultversionresolver.setloggerfactory(loggerfactory)"], [61, "org.apache.maven.model.building.modeldata.setgroupid(string)"], [62, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$cacheitem.isqualifiedforinterpolation(field;class)"], [63, "org.apache.maven.model.merge.modelmerger.mergeconfigurationcontainer_inherited(configurationcontainer;configurationcontainer;boolean;map)"], [64, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$cacheitem.stringsearchmodelinterpolator$interpolateobjectaction$cacheitem(class)"], [65, "org.apache.maven.model.building.defaultmodelbuilder.setsuperpomprovider(superpomprovider)"], [66, "org.apache.maven.model.building.defaultmodelbuilderfactory.newsuperpomprovider()"], [67, "org.apache.maven.model.buildbase.getresources()"], [68, "org.apache.maven.model.activationproperty.setname(string)"], [69, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.createinterpolator()"], [70, "org.apache.maven.model.buildbase.setresources(list)"], [71, "org.apache.maven.model.validation.defaultmodelvalidator.<clinit>()"], [72, "org.apache.maven.model.building.defaultmodelbuilder.build(modelbuildingrequest;modelbuildingresult;collection)"], [73, "org.apache.maven.model.patternset.patternset()"], [74, "org.apache.maven.model.locator.defaultmodellocator.defaultmodellocator()"], [75, "org.apache.maven.model.building.defaultmodelbuilder.setmodelurlnormalizer(modelurlnormalizer)"], [76, "org.apache.maven.model.activationproperty.setvalue(string)"], [77, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator$2.getvalue(string)"], [78, "org.apache.maven.model.modelbase.setreporting(reporting)"], [79, "org.apache.maven.model.management.defaultdependencymanagementinjector$managementmodelmerger.mergemanageddependencies(model)"], [80, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsepluginexecution(xmlpullparser;boolean)"], [81, "org.apache.maven.model.profile.defaultprofileactivationcontext.tomap(properties)"], [82, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_mailinglists(model;model;boolean;map)"], [83, "org.apache.maven.model.profile.defaultprofileactivationcontext.setprojectproperties(properties)"], [84, "org.apache.maven.model.plugincontainer.getplugins()"], [85, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_cimanagement(model;model;boolean;map)"], [86, "org.apache.maven.model.pluginconfiguration.setpluginmanagement(pluginmanagement)"], [87, "org.apache.maven.model.merge.mavenmodelmerger.mergemodelbase_pluginrepositories(modelbase;modelbase;boolean;map)"], [88, "org.apache.maven.model.building.defaultmodelbuilder.importdependencymanagement(model;modelbuildingrequest;defaultmodelproblemcollector;collection)"], [89, "org.apache.maven.model.build.clone()"], [90, "org.apache.maven.model.model.getdescription()"], [91, "org.apache.maven.model.model.getparent()"], [92, "org.apache.maven.model.model.setgroupid(string)"], [93, "org.apache.maven.model.path.defaultmodelpathtranslator.aligntobasedirectory(model;file;modelbuildingrequest)"], [94, "org.apache.maven.model.modelbase.setrepositories(list)"], [95, "org.apache.maven.model.management.defaultdependencymanagementinjector.injectmanagement(model;modelbuildingrequest;modelproblemcollector)"], [96, "org.apache.maven.model.validation.defaultmodelvalidator.validate20effectiveplugindependencies(modelproblemcollector;plugin;modelbuildingrequest)"], [97, "org.apache.maven.model.management.defaultpluginmanagementinjector$managementmodelmerger.mergemanagedbuildplugins(model)"], [98, "org.apache.maven.model.building.defaultmodelproblemcollector.defaultmodelproblemcollector(modelbuildingresult)"], [99, "org.apache.maven.model.building.defaultmodelbuilder.setpluginconfigurationexpander(pluginconfigurationexpander)"], [100, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.getcacheentry(class)"], [101, "org.apache.maven.model.building.defaultmodelbuildingrequest.getinactiveprofileids()"], [102, "org.apache.maven.model.activationproperty.getvalue()"], [103, "org.apache.maven.model.building.modelproblem$version.modelproblem$version(string;int)"], [104, "org.apache.maven.model.building.defaultmodelbuildingresult.addmodelid(string)"], [105, "org.apache.maven.model.buildbase.setdirectory(string)"], [106, "org.apache.maven.model.building.defaultmodelproblemcollector.setsource(string)"], [107, "org.apache.maven.model.interpolation.buildtimestampvaluesource.buildtimestampvaluesource(date;string)"], [108, "org.apache.maven.repository.internal.defaultversionresolver.setsynccontextfactory(synccontextfactory)"], [109, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$cachefield.stringsearchmodelinterpolator$interpolateobjectaction$cachefield(field)"], [110, "org.apache.maven.model.building.defaultmodelprocessor.setmodellocator(modellocator)"], [111, "org.apache.maven.model.superpom.defaultsuperpomprovider.setmodelprocessor(modelprocessor)"], [112, "org.apache.maven.repository.internal.defaultversionrangeresolver.defaultversionrangeresolver()"], [113, "org.apache.maven.model.path.defaultmodelurlnormalizer.seturlnormalizer(urlnormalizer)"], [114, "org.apache.maven.model.merge.modelmerger.mergebuild_sourcedirectory(build;build;boolean;map)"], [115, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.createvaluesources(model;file;modelbuildingrequest;modelproblemcollector)"], [116, "org.apache.maven.model.building.defaultmodelbuilderfactory.newmodelvalidator()"], [117, "org.apache.maven.model.modelbase.setproperties(properties)"], [118, "org.apache.maven.model.merge.mavenmodelmerger.mergemodelbase_repositories(modelbase;modelbase;boolean;map)"], [119, "org.apache.maven.model.merge.modelmerger.mergemodel_inceptionyear(model;model;boolean;map)"], [120, "org.apache.maven.model.model.setlicenses(list)"], [121, "org.apache.maven.model.configurationcontainer.clone()"], [122, "org.apache.maven.model.building.defaultmodelbuildingresult.setactiveexternalprofiles(list)"], [123, "org.apache.maven.model.building.defaultmodelproblemcollector.setsource(model)"], [124, "org.apache.maven.model.building.filemodelsource.getlocation()"], [125, "org.apache.maven.model.merge.mavenmodelmerger.mergebuildbase_testresources(buildbase;buildbase;boolean;map)"], [126, "org.apache.maven.model.repository.setsnapshots(repositorypolicy)"], [127, "org.apache.maven.model.repositorybase.setname(string)"], [128, "org.apache.maven.model.patternset.clone()"], [129, "org.apache.maven.model.building.defaultmodelbuildingrequest.getsystemproperties()"], [130, "org.apache.maven.model.profile.defaultprofileactivationcontext.setsystemproperties(properties)"], [131, "org.apache.maven.model.building.defaultmodelbuildingrequest.istwophasebuilding()"], [132, "org.apache.maven.model.plugincontainer.setplugins(list)"], [133, "org.apache.maven.model.reporting.getplugins()"], [134, "org.apache.maven.model.building.defaultmodelbuilderfactory$stublifecyclebindingsinjector.defaultmodelbuilderfactory$stublifecyclebindingsinjector()"], [135, "org.apache.maven.model.building.defaultmodelbuilder.setmodelprocessor(modelprocessor)"], [136, "org.apache.maven.model.building.defaultmodelbuildingrequest.getbuildstarttime()"], [137, "org.apache.maven.model.configurationcontainer.getinherited()"], [138, "org.apache.maven.model.repositorypolicy.setupdatepolicy(string)"], [139, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_url(model;model;boolean;map)"], [140, "org.apache.maven.model.building.defaultmodelbuilder.getprofileactivationcontext(modelbuildingrequest)"], [141, "org.apache.maven.model.building.modelproblemutils.toid(string;string;string)"], [142, "org.apache.maven.model.normalization.defaultmodelnormalizer.injectdefaultvalues(model;modelbuildingrequest;modelproblemcollector)"], [143, "org.apache.maven.model.profile.defaultprofileinjector$profilemodelmerger.defaultprofileinjector$profilemodelmerger()"], [144, "org.apache.maven.model.building.defaultmodelbuildingrequest.isprocessplugins()"], [145, "org.apache.maven.model.repositorybase.seturl(string)"], [146, "org.apache.maven.model.building.defaultmodelbuilder.setinheritanceassembler(inheritanceassembler)"], [147, "org.apache.maven.model.repositorypolicy.clone()"], [148, "org.apache.maven.model.plugin.getkey()"], [149, "org.apache.maven.model.merge.mavenmodelmerger.mergebuildbase_resources(buildbase;buildbase;boolean;map)"], [150, "org.apache.maven.model.activationproperty.activationproperty()"], [151, "org.apache.maven.model.merge.modelmerger.mergepluginconfiguration_pluginmanagement(pluginconfiguration;pluginconfiguration;boolean;map)"], [152, "org.apache.maven.model.merge.mavenmodelmerger.mergemodelbase_modules(modelbase;modelbase;boolean;map)"], [153, "org.apache.maven.model.model.setprofiles(list)"], [154, "org.apache.maven.model.build.setsourcedirectory(string)"], [155, "org.apache.maven.model.activationfile.clone()"], [156, "org.apache.maven.model.repository.clone()"], [157, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseactivationproperty(xmlpullparser;boolean)"], [158, "org.apache.maven.model.path.defaulturlnormalizer.normalize(string)"], [159, "org.apache.maven.repository.internal.mavenrepositorysystemutilstest.mavenrepositorysystemutilstest()"], [160, "org.apache.maven.model.buildbase.clone()"], [161, "org.apache.maven.model.activation.setfile(activationfile)"], [162, "org.apache.maven.model.building.modeldata.getid()"], [163, "org.apache.maven.model.profile.activation.operatingsystemprofileactivator.isactive(profile;profileactivationcontext;modelproblemcollector)"], [164, "org.apache.maven.model.building.defaultmodelbuilder.hasfatalerrors(modelproblemcollectorext)"], [165, "org.apache.maven.model.modelbase.getlocation(object)"], [166, "org.apache.maven.model.building.defaultmodelbuilderfactory.newinheritanceassembler()"], [167, "org.apache.maven.model.merge.modelmerger.mergemodel_description(model;model;boolean;map)"], [168, "org.apache.maven.model.building.modelproblemutils.toid(model)"], [169, "org.apache.maven.model.fileset.getdirectory()"], [170, "org.apache.maven.model.buildbase.getfilters()"], [171, "org.apache.maven.model.pluginexecution.setid(string)"], [172, "org.apache.maven.model.buildbase.setfinalname(string)"], [173, "org.apache.maven.model.validation.defaultmodelvalidator.validatebannedcharacters(string;modelproblemcollector;severity;version;string;string;inputlocationtracker;string)"], [174, "org.apache.maven.model.pluginconfiguration.clone()"], [175, "org.apache.maven.model.model.setmailinglists(list)"], [176, "org.apache.maven.model.building.defaultmodelbuilder.setprofileinjector(profileinjector)"], [177, "org.apache.maven.model.profile.defaultprofileactivationcontext.setprojectdirectory(file)"], [178, "org.apache.maven.model.merge.modelmerger.mergebuild_extensions(build;build;boolean;map)"], [179, "org.apache.maven.model.validation.defaultmodelvalidator.validateboolean(string;modelproblemcollector;severity;version;string;string;inputlocationtracker)"], [180, "org.apache.maven.model.model.setartifactid(string)"], [181, "org.apache.maven.model.plugin.getdependencies()"], [182, "org.apache.maven.repository.internal.defaultversionresolver.defaultversionresolver()"], [183, "org.apache.maven.model.plugin.setgroupid(string)"], [184, "org.apache.maven.model.validation.defaultmodelvalidator.validatestringnoexpression(string;modelproblemcollector;severity;version;string;inputlocationtracker)"], [185, "org.apache.maven.model.validation.defaultmodelvalidator.validate20rawplugins(modelproblemcollector;list;string;modelbuildingrequest)"], [186, "org.apache.maven.model.modelbase.getdependencies()"], [187, "org.apache.maven.model.fileset.setdirectory(string)"], [188, "org.apache.maven.model.pluginconfiguration.pluginconfiguration()"], [189, "org.apache.maven.model.merge.mavenmodelmerger.getpluginkey(plugin)"], [190, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_profiles(model;model;boolean;map)"], [191, "org.apache.maven.model.buildbase.getdefaultgoal()"], [192, "org.apache.maven.model.repositorypolicy.setenabled(string)"], [193, "org.apache.maven.model.merge.mavenmodelmerger.getrepositorybasekey(repositorybase)"], [194, "org.apache.maven.model.plugin.setexecutions(list)"], [195, "org.apache.maven.model.building.defaultmodelbuilderfactory.newmodelreader()"], [196, "org.apache.maven.model.management.defaultpluginmanagementinjector.injectmanagement(model;modelbuildingrequest;modelproblemcollector)"], [197, "org.apache.maven.model.activation.getfile()"], [198, "org.apache.maven.model.management.defaultpluginmanagementinjector.defaultpluginmanagementinjector()"], [199, "org.apache.maven.model.building.defaultmodelproblemcollector.haserrors()"], [200, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator$3.abstractstringbasedmodelinterpolator$3(abstractstringbasedmodelinterpolator;boolean;modelbuildingrequest)"], [201, "org.apache.maven.model.building.defaultmodelbuildingrequest.setprocessplugins(boolean)"], [202, "org.apache.maven.model.validation.defaultmodelvalidator.validateenum(string;modelproblemcollector;severity;version;string;string;inputlocationtracker;string[])"], [203, "org.apache.maven.model.building.defaultmodelbuilderfactory.newreportconfigurationexpander()"], [204, "org.apache.maven.model.profile.defaultprofileactivationcontext.defaultprofileactivationcontext()"], [205, "org.apache.maven.model.profile.defaultprofileinjector.defaultprofileinjector()"], [206, "org.apache.maven.model.profile.activation.fileprofileactivator.setpathtranslator(pathtranslator)"], [207, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parserepositorypolicy(xmlpullparser;boolean)"], [208, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.access$100()"], [209, "org.apache.maven.model.profile.defaultprofileactivationcontext.getsystemproperties()"], [210, "org.apache.maven.project.abstractmavenprojecttestcase.getcustomconfigurationname()"], [211, "org.apache.maven.model.profile.getsource()"], [212, "org.apache.maven.model.activation.setproperty(activationproperty)"], [213, "org.apache.maven.model.validation.defaultmodelvalidator.validateid(string;modelproblemcollector;severity;version;string;string;inputlocationtracker)"], [214, "org.apache.maven.model.model.getscm()"], [215, "org.apache.maven.model.building.defaultmodelbuildingresult.geteffectivemodel()"], [216, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.traverseobjectwithparents(class;object)"], [217, "org.apache.maven.model.modelbase.addproperty(string;string)"], [218, "org.apache.maven.model.activation.setactivebydefault(boolean)"], [219, "org.apache.maven.model.validation.defaultmodelvalidator.validatestringnotempty(string;modelproblemcollector;severity;version;string;string;inputlocationtracker)"], [220, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsemodel(xmlpullparser;boolean)"], [221, "org.apache.maven.model.inheritance.defaultinheritanceassembler$inheritancemodelmerger.mergeplugincontainer_plugins(plugincontainer;plugincontainer;boolean;map)"], [222, "org.apache.maven.model.profile.getactivation()"], [223, "org.apache.maven.model.io.defaultmodelreader.getsource(map)"], [224, "org.apache.maven.model.interpolation.abstractmodelinterpolatortest.abstractmodelinterpolatortest()"], [225, "org.apache.maven.model.reporting.clone()"], [226, "org.apache.maven.model.building.defaultmodelbuildingrequest.defaultmodelbuildingrequest()"], [227, "org.apache.maven.model.plugincontainer.setlocation(object;inputlocation)"], [228, "org.apache.maven.model.building.modeldata.getmodel()"], [229, "org.apache.maven.model.validation.defaultmodelvalidator.getseverity(int;int)"], [230, "org.apache.maven.model.validation.defaultmodelvalidator.validate20propersnapshotversion(string;modelproblemcollector;severity;version;string;string;inputlocationtracker)"], [231, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.interpolatemodel(model;file;modelbuildingrequest;modelproblemcollector)"], [232, "org.apache.maven.model.validation.defaultmodelvalidator.validaterawmodel(model;modelbuildingrequest;modelproblemcollector)"], [233, "org.apache.maven.model.building.modeldata.setrawmodel(model)"], [234, "org.apache.maven.model.io.xpp3.mavenxpp3reader.checkfieldwithduplicate(xmlpullparser;string;string;set)"], [235, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_modelversion(model;model;boolean;map)"], [236, "org.apache.maven.repository.internal.defaultartifactdescriptorreader.setloggerfactory(loggerfactory)"], [237, "org.apache.maven.model.model.getinceptionyear()"], [238, "org.apache.maven.model.path.defaultmodelpathtranslator.setpathtranslator(pathtranslator)"], [239, "org.apache.maven.model.model.setpomfile(file)"], [240, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.setpathtranslator(pathtranslator)"], [241, "org.apache.maven.model.model.getlicenses()"], [242, "org.apache.maven.model.interpolation.urlnormalizingpostprocessor.<clinit>()"], [243, "org.apache.maven.model.merge.modelmerger.mergemodel_groupid(model;model;boolean;map)"], [244, "org.apache.maven.model.building.defaultmodelbuildingresult.setactivepomprofiles(string;list)"], [245, "org.apache.maven.model.profile.activation.jdkversionprofileactivator.isactive(profile;profileactivationcontext;modelproblemcollector)"], [246, "org.apache.maven.model.profile.defaultprofileselector.isactivebydefault(profile)"], [247, "org.apache.maven.model.management.defaultpluginmanagementinjector$managementmodelmerger.mergeplugin_executions(plugin;plugin;boolean;map)"], [248, "org.apache.maven.model.management.defaultpluginmanagementinjector$managementmodelmerger.defaultpluginmanagementinjector$managementmodelmerger()"], [249, "org.apache.maven.model.building.defaultmodelbuilderfactory.newurlnormalizer()"], [250, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsereporting(xmlpullparser;boolean)"], [251, "org.apache.maven.model.validation.defaultmodelvalidator.validate20rawdependencies(modelproblemcollector;list;string;modelbuildingrequest)"], [252, "org.apache.maven.model.model.getdevelopers()"], [253, "org.apache.maven.model.building.defaultmodelbuilder.setmodelpathtranslator(modelpathtranslator)"], [254, "org.apache.maven.model.activation.getproperty()"], [255, "org.apache.maven.model.building.defaultmodelbuilder.setmodelinterpolator(modelinterpolator)"], [256, "org.apache.maven.model.profile.setactivation(activation)"], [257, "org.apache.maven.model.build.settestsourcedirectory(string)"], [258, "org.apache.maven.model.building.defaultmodelbuilder.hasmodelerrors(modelproblemcollectorext)"], [259, "org.apache.maven.model.merge.modelmerger.mergemodelbase(modelbase;modelbase;boolean;map)"], [260, "org.apache.maven.model.normalization.defaultmodelnormalizer.mergeduplicates(model;modelbuildingrequest;modelproblemcollector)"], [261, "org.apache.maven.model.normalization.defaultmodelnormalizer.injectdependencydefaults(list)"], [262, "org.apache.maven.model.building.modeldata.getsource()"], [263, "org.apache.maven.model.superpom.defaultsuperpomprovider.getsupermodel(string)"], [264, "org.apache.maven.model.plugin.defaultreportingconverter.defaultreportingconverter()"], [265, "org.apache.maven.model.model.setversion(string)"], [266, "org.apache.maven.model.build.setoutputdirectory(string)"], [267, "org.apache.maven.model.inheritance.defaultinheritanceassembler$inheritancemodelmerger.defaultinheritanceassembler$inheritancemodelmerger()"], [268, "org.apache.maven.model.building.modeldata.getrawmodel()"], [269, "org.apache.maven.model.merge.modelmerger.modelmerger()"], [270, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.<clinit>()"], [271, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$cacheitem.interpolate(object;interpolateobjectaction)"], [272, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_developers(model;model;boolean;map)"], [273, "org.apache.maven.repository.internal.defaultversionrangeresolver.initservice(servicelocator)"], [274, "org.apache.maven.model.plugin.constructkey(string;string)"], [275, "org.apache.maven.repository.internal.defaultversionresolver.setrepositoryeventdispatcher(repositoryeventdispatcher)"], [276, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$stringfield.stringsearchmodelinterpolator$interpolateobjectaction$stringfield(field)"], [277, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_organization(model;model;boolean;map)"], [278, "org.apache.maven.model.building.modeldata.getversion()"], [279, "org.apache.maven.model.path.defaultmodelpathtranslator.aligntobasedirectory(string;file)"], [280, "org.apache.maven.model.building.defaultmodelbuilderfactory.newpluginconfigurationexpander()"], [281, "org.apache.maven.model.plugincontainer.addplugin(plugin)"], [282, "org.apache.maven.model.model.setmodelencoding(string)"], [283, "org.apache.maven.model.profile.defaultprofileactivationcontext.setuserproperties(properties)"], [284, "org.apache.maven.model.building.defaultmodelbuilder.setdependencymanagementimporter(dependencymanagementimporter)"], [285, "org.apache.maven.model.pluginexecution.clone()"], [286, "org.apache.maven.model.configurationcontainer.isinherited()"], [287, "org.apache.maven.model.buildbase.gettestresources()"], [288, "org.apache.maven.model.io.defaultmodelreader.read(inputstream;map)"], [289, "org.apache.maven.model.modelbase.setpluginrepositories(list)"], [290, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parserepository(xmlpullparser;boolean)"], [291, "org.apache.maven.model.model.getmailinglists()"], [292, "org.apache.maven.model.building.defaultmodelbuilder.setmodelvalidator(modelvalidator)"], [293, "org.apache.maven.model.modelbase.setlocation(object;inputlocation)"], [294, "org.apache.maven.model.profile.defaultprofileactivationcontext.getactiveprofileids()"], [295, "org.apache.maven.model.merge.modelmerger.mergeplugin_dependencies(plugin;plugin;boolean;map)"], [296, "org.apache.maven.model.activation.isactivebydefault()"], [297, "org.apache.maven.model.plugin.defaultpluginconfigurationexpander.expandpluginconfiguration(model;modelbuildingrequest;modelproblemcollector)"], [298, "org.apache.maven.model.building.defaultmodelbuilderfactory.newlifecyclebindingsinjector()"], [299, "org.apache.maven.model.buildbase.setfilters(list)"], [300, "org.apache.maven.model.buildbase.settestresources(list)"], [301, "org.apache.maven.model.profile.activation.fileprofileactivator.isactive(profile;profileactivationcontext;modelproblemcollector)"], [302, "org.apache.maven.model.profile.activation.jdkversionprofileactivator.jdkversionprofileactivator()"], [303, "org.apache.maven.model.configurationcontainer.setinherited(string)"], [304, "org.apache.maven.model.merge.modelmerger.mergereporting_outputdirectory(reporting;reporting;boolean;map)"], [305, "org.apache.maven.model.building.defaultmodelbuildingrequest.getuserproperties()"], [306, "org.apache.maven.model.activation.getjdk()"], [307, "org.apache.maven.model.plugin.getgroupid()"], [308, "org.apache.maven.model.plugin.defaultreportingconverter.issiteplugin(plugin)"], [309, "org.apache.maven.model.profile.defaultprofileactivationcontext.getinactiveprofileids()"], [310, "org.apache.maven.model.io.xpp3.mavenxpp3reader.getbooleanvalue(string;string;xmlpullparser;string)"], [311, "org.apache.maven.model.repository.setreleases(repositorypolicy)"], [312, "org.apache.maven.model.repositorybase.clone()"], [313, "org.apache.maven.model.building.defaultmodelbuilder.setdependencymanagementinjector(dependencymanagementinjector)"], [314, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$listfield.dointerpolate(object;interpolateobjectaction)"], [315, "org.apache.maven.model.activation.activation()"], [316, "org.apache.maven.model.plugin.plugin()"], [317, "org.apache.maven.model.build.gettestsourcedirectory()"], [318, "org.apache.maven.model.repositorybase.getlayout()"], [319, "org.apache.maven.model.profile.defaultprofileinjector$profilemodelmerger.mergemodelbase(modelbase;modelbase)"], [320, "org.apache.maven.model.build.settestoutputdirectory(string)"], [321, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.interpolateinternal(string;list;list;modelproblemcollector)"], [322, "org.apache.maven.model.model.clonehook(model)"], [323, "org.apache.maven.model.merge.modelmerger.mergeplugin_extensions(plugin;plugin;boolean;map)"], [324, "org.apache.maven.model.model.getpomfile()"], [325, "org.apache.maven.model.model.model()"], [326, "org.apache.maven.model.build.gettestoutputdirectory()"], [327, "org.apache.maven.model.pluginmanagement.pluginmanagement()"], [328, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.interpolate(string)"], [329, "org.apache.maven.model.activation.getos()"], [330, "org.apache.maven.model.plugin.defaultreportingconverter.findsiteplugin(build)"], [331, "org.apache.maven.model.merge.modelmerger.mergebuildbase_resources(buildbase;buildbase;boolean;map)"], [332, "org.apache.maven.model.io.xpp3.mavenxpp3reader.gettrimmedvalue(string)"], [333, "org.apache.maven.model.validation.defaultmodelvalidator.validaterawrepositories(modelproblemcollector;list;string;modelbuildingrequest)"], [334, "org.apache.maven.model.reporting.reporting()"], [335, "org.apache.maven.model.model.getcimanagement()"], [336, "org.apache.maven.model.model.getmodelversion()"], [337, "org.apache.maven.model.profile.clone()"], [338, "org.apache.maven.model.model.getpackaging()"], [339, "org.apache.maven.model.repositorybase.setlayout(string)"], [340, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseactivationfile(xmlpullparser;boolean)"], [341, "org.apache.maven.model.building.defaultmodelbuilder.checkpluginversions(list;modelbuildingrequest;modelproblemcollector)"], [342, "org.apache.maven.model.merge.modelmerger.mergebuildbase_directory(buildbase;buildbase;boolean;map)"], [343, "org.apache.maven.model.inputlocation.merge(inputlocation;inputlocation;boolean)"], [344, "org.apache.maven.model.profile.defaultprofileactivationcontext.setactiveprofileids(list)"], [345, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_prerequisites(model;model;boolean;map)"], [346, "org.apache.maven.model.building.defaultmodelbuilderfactory.newmodelpathtranslator()"], [347, "org.apache.maven.model.resource.<clinit>()"], [348, "org.apache.maven.model.buildbase.getdirectory()"], [349, "org.apache.maven.model.building.defaultmodelbuilder.setpluginmanagementinjector(pluginmanagementinjector)"], [350, "org.apache.maven.model.model.setdevelopers(list)"], [351, "org.apache.maven.repository.internal.defaultartifactdescriptorreader.setversionresolver(versionresolver)"], [352, "org.apache.maven.model.building.defaultmodelbuilderfactory.newdependencymanagementinjector()"], [353, "org.apache.maven.model.management.defaultdependencymanagementinjector$managementmodelmerger.defaultdependencymanagementinjector$managementmodelmerger()"], [354, "org.apache.maven.model.pluginconfiguration.getpluginmanagement()"], [355, "org.apache.maven.model.profile.defaultprofileselector.defaultprofileselector()"], [356, "org.apache.maven.model.model.geturl()"], [357, "org.apache.maven.model.profile.activation.propertyprofileactivatortest.propertyprofileactivatortest()"], [358, "org.apache.maven.model.inheritance.defaultinheritanceassembler.getchildpathadjustment(model;model)"], [359, "org.apache.maven.model.repositorybase.repositorybase()"], [360, "org.apache.maven.model.inheritance.defaultinheritanceassembler.assemblemodelinheritance(model;model;modelbuildingrequest;modelproblemcollector)"], [361, "org.apache.maven.repository.internal.defaultartifactdescriptorreader.initservice(servicelocator)"], [362, "org.apache.maven.model.pluginmanagement.clone()"], [363, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.getinterpolator()"], [364, "org.apache.maven.model.interpolation.buildtimestampvaluesource.getvalue(string)"], [365, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$mapfield.stringsearchmodelinterpolator$interpolateobjectaction$mapfield(field)"], [366, "org.apache.maven.model.pluginexecution.setgoals(list)"], [367, "org.apache.maven.model.building.defaultmodelprocessor.setmodelreader(modelreader)"], [368, "org.apache.maven.model.reporting.getexcludedefaults()"], [369, "org.apache.maven.model.plugin.getartifactid()"], [370, "org.apache.maven.model.profile.activation.operatingsystemprofileactivator.operatingsystemprofileactivator()"], [371, "org.apache.maven.model.merge.modelmerger.mergemodel_packaging(model;model;boolean;map)"], [372, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator$1.getvalue(string)"], [373, "org.apache.maven.model.modelbase.getreporting()"], [374, "org.apache.maven.model.building.defaultmodelbuildingrequest.getprofiles()"], [375, "org.apache.maven.model.merge.modelmerger.mergemodelbase_distributionmanagement(modelbase;modelbase;boolean;map)"], [376, "org.apache.maven.model.building.defaultmodelbuilder.interpolatemodel(model;modelbuildingrequest;modelproblemcollector)"], [377, "org.apache.maven.model.plugin.defaultpluginconfigurationexpander.expand(list)"], [378, "org.apache.maven.model.building.modelbuildingeventcatapult$1.modelbuildingeventcatapult$1()"], [379, "org.apache.maven.model.model.getissuemanagement()"], [380, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$cacheitem.isqualifiedforinterpolation(class)"], [381, "org.apache.maven.model.validation.defaultmodelvalidator.getseverity(modelbuildingrequest;int)"], [382, "org.apache.maven.model.building.filemodelsource.filemodelsource(file)"], [383, "org.apache.maven.model.merge.modelmerger.mergemodelbase_properties(modelbase;modelbase;boolean;map)"], [384, "org.apache.maven.model.plugincontainer.getlocation(object)"], [385, "org.apache.maven.model.path.defaulturlnormalizer.defaulturlnormalizer()"], [386, "org.apache.maven.model.building.defaultmodelbuildingrequest.getpomfile()"], [387, "org.apache.maven.model.merge.modelmerger.mergereporting_excludedefaults(reporting;reporting;boolean;map)"], [388, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.<clinit>()"], [389, "org.apache.maven.model.repository.repository()"], [390, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$stringfield.dointerpolate(object;interpolateobjectaction)"], [391, "org.apache.maven.model.normalization.defaultmodelnormalizer.defaultmodelnormalizer()"], [392, "org.apache.maven.model.validation.defaultmodelvalidator.validatestringnotempty(string;modelproblemcollector;severity;version;string;inputlocationtracker)"], [393, "org.apache.maven.repository.internal.defaultartifactdescriptorreader.defaultartifactdescriptorreader()"], [394, "org.apache.maven.model.merge.modelmerger.mergemodel_build(model;model;boolean;map)"], [395, "org.apache.maven.model.model.getname()"], [396, "org.apache.maven.model.inheritance.defaultinheritanceassembler.defaultinheritanceassembler()"], [397, "org.apache.maven.model.plugin.defaultreportingconverter.convertreporting(model;modelbuildingrequest;modelproblemcollector)"], [398, "org.apache.maven.model.profile.profile()"], [399, "org.apache.maven.model.modelbase.getproperties()"], [400, "org.apache.maven.model.validation.defaultmodelvalidator.validateversion(string;modelproblemcollector;severity;version;string;string;inputlocationtracker)"], [401, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_licenses(model;model;boolean;map)"], [402, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseactivation(xmlpullparser;boolean)"], [403, "org.apache.maven.model.building.defaultmodelprocessor.defaultmodelprocessor()"], [404, "org.apache.maven.model.repositorybase.setid(string)"], [405, "org.apache.maven.model.plugin.defaultreportingconverter.adddom(xpp3dom;string;string)"], [406, "org.apache.maven.model.merge.modelmerger.mergemodelbase_dependencymanagement(modelbase;modelbase;boolean;map)"], [407, "org.apache.maven.model.io.xpp3.mavenxpp3reader.mavenxpp3reader()"], [408, "org.apache.maven.model.merge.modelmerger.mergemodel(model;model;boolean;map)"], [409, "org.apache.maven.model.modelbase.getmodules()"], [410, "org.apache.maven.model.path.defaultpathtranslator.aligntobasedirectory(string;file)"], [411, "org.apache.maven.model.plugincontainer.plugincontainer()"], [412, "org.apache.maven.repository.internal.defaultversionresolver.initservice(servicelocator)"], [413, "org.apache.maven.model.io.defaultmodelreader.read(reader;boolean;inputsource)"], [414, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsebuild(xmlpullparser;boolean)"], [415, "org.apache.maven.model.validation.defaultmodelvalidator.validatenotnull(string;modelproblemcollector;severity;version;object;string;inputlocationtracker)"], [416, "org.apache.maven.model.model.setbuild(build)"], [417, "org.apache.maven.model.building.defaultmodelbuilderfactorytest.getpom(string)"], [418, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsepluginmanagement(xmlpullparser;boolean)"], [419, "org.apache.maven.model.interpolation.problemdetectingvaluesource.problemdetectingvaluesource(valuesource;string;string;modelproblemcollector)"], [420, "org.apache.maven.project.abstractmavenprojecttestcase.setup()"], [421, "org.apache.maven.model.activationfile.getexists()"], [422, "org.apache.maven.model.normalization.defaultmodelnormalizer$duplicatemerger.defaultmodelnormalizer$duplicatemerger()"], [423, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.abstractstringbasedmodelinterpolator()"], [424, "org.apache.maven.model.reporting.setlocation(object;inputlocation)"], [425, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.access$300(interpolateobjectaction;string)"], [426, "org.apache.maven.model.build.getextensions()"], [427, "org.apache.maven.model.merge.modelmerger.merge(model;model;boolean;map)"], [428, "org.apache.maven.model.building.defaultmodelbuildingrequest.getmodelresolver()"], [429, "org.apache.maven.model.building.modelproblem$severity.<clinit>()"], [430, "org.apache.maven.model.modelbase.modelbase()"], [431, "org.apache.maven.model.building.defaultmodelbuilder.setprofileselector(profileselector)"], [432, "org.apache.maven.model.plugin.defaultreportconfigurationexpander.expandpluginconfiguration(model;modelbuildingrequest;modelproblemcollector)"], [433, "org.apache.maven.model.interpolation.problemdetectingvaluesource.getvalue(string)"], [434, "org.apache.maven.model.io.defaultmodelreader.defaultmodelreader()"], [435, "org.apache.maven.model.building.defaultmodelbuilderfactory.newprofileactivators()"], [436, "org.apache.maven.model.modelbase.getpluginrepositories()"], [437, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel(model;model;boolean;map)"], [438, "org.apache.maven.model.building.defaultmodelbuilder.build(modelbuildingrequest;modelbuildingresult)"], [439, "org.apache.maven.model.model.getgroupid()"], [440, "org.apache.maven.model.merge.modelmerger.mergemodel_scm(model;model;boolean;map)"], [441, "org.apache.maven.model.building.defaultmodelbuilder.getsupermodel()"], [442, "org.apache.maven.model.interpolation.pathtranslatingpostprocessor.execute(string;object)"], [443, "org.apache.maven.model.merge.modelmerger.mergemodelbase_dependencies(modelbase;modelbase;boolean;map)"], [444, "org.apache.maven.model.fileset.fileset()"], [445, "org.apache.maven.model.io.xpp3.mavenxpp3reader.read(xmlpullparser;boolean)"], [446, "org.apache.maven.model.profile.defaultprofileactivationcontext.getprojectproperties()"], [447, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$objectfield.dointerpolate(object;interpolateobjectaction)"], [448, "org.apache.maven.model.building.defaultmodelbuilderfactory.newmodelurlnormalizer()"], [449, "org.apache.maven.model.inheritance.defaultinheritanceassemblertest.defaultinheritanceassemblertest()"], [450, "org.apache.maven.model.configurationcontainer.configurationcontainer()"], [451, "org.apache.maven.model.building.modeldata.getartifactid()"], [452, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$cacheitem.isarray()"], [453, "org.apache.maven.repository.internal.defaultversionrangeresolver.setsynccontextfactory(synccontextfactory)"], [454, "org.apache.maven.model.building.defaultmodelbuilder.configureresolver(modelresolver;model;defaultmodelproblemcollector)"], [455, "org.apache.maven.model.building.defaultmodelbuilder.build(modelbuildingrequest)"], [456, "org.apache.maven.model.model.getartifactid()"], [457, "org.apache.maven.model.building.modeldata.setversion(string)"], [458, "org.apache.maven.model.merge.modelmerger.mergebuild_scriptsourcedirectory(build;build;boolean;map)"], [459, "org.apache.maven.model.profile.setid(string)"], [460, "org.apache.maven.model.profile.activation.fileprofileactivator$1.fileprofileactivator$1(fileprofileactivator;boolean;file)"], [461, "org.apache.maven.model.repositorypolicy.repositorypolicy()"], [462, "org.apache.maven.model.plugin.setartifactid(string)"], [463, "org.apache.maven.model.building.defaultmodelbuildingresult.getproblems()"], [464, "org.apache.maven.model.building.defaultmodelbuilderfactory.newprofileinjector()"], [465, "org.apache.maven.model.reporting.getlocation(object)"], [466, "org.apache.maven.model.configurationcontainer.getconfiguration()"], [467, "org.apache.maven.model.validation.defaultmodelvalidator.validateid(string;modelproblemcollector;string;inputlocationtracker)"], [468, "org.apache.maven.model.build.setscriptsourcedirectory(string)"], [469, "org.apache.maven.model.management.defaultpluginmanagementinjector$managementmodelmerger.mergeplugincontainer_plugins(plugincontainer;plugincontainer)"], [470, "org.apache.maven.model.activationproperty.getname()"], [471, "org.apache.maven.repository.internal.mavenrepositorysystemutils.newservicelocator()"], [472, "org.apache.maven.model.path.defaultmodelurlnormalizer.normalize(string)"], [473, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseresource(xmlpullparser;boolean)"], [474, "org.apache.maven.model.building.defaultmodelbuilderfactory.newmodelprocessor()"], [475, "org.apache.maven.model.merge.modelmerger.getrepositorykey(repository)"], [476, "org.apache.maven.model.resource.resource()"], [477, "org.apache.maven.model.building.defaultmodelproblemcollector.setrootmodel(model)"], [478, "org.apache.maven.model.path.defaultmodelurlnormalizer.normalize(model;modelbuildingrequest)"], [479, "org.apache.maven.model.pluginexecution.pluginexecution()"], [480, "org.apache.maven.model.validation.defaultmodelvalidator.defaultmodelvalidator()"], [481, "org.apache.maven.model.model.clone()"], [482, "org.apache.maven.model.plugin.defaultpluginconfigurationexpander.defaultpluginconfigurationexpander()"], [483, "org.apache.maven.model.reporting.setoutputdirectory(string)"], [484, "org.apache.maven.model.merge.modelmerger.mergeplugin_artifactid(plugin;plugin;boolean;map)"], [485, "org.apache.maven.model.building.modelproblem$severity.modelproblem$severity(string;int)"], [486, "org.apache.maven.model.configurationcontainer.getlocation(object)"], [487, "org.apache.maven.model.validation.defaultmodelvalidator.validate20rawresources(modelproblemcollector;list;string;modelbuildingrequest)"], [488, "org.apache.maven.model.building.defaultmodelbuilderfactory.newmodellocator()"], [489, "org.apache.maven.model.building.defaultmodelbuildingrequest.setpomfile(file)"], [490, "org.apache.maven.model.plugin.clone()"], [491, "org.apache.maven.model.building.modelproblem$severity.values()"], [492, "org.apache.maven.model.merge.modelmerger.mergebuild_testsourcedirectory(build;build;boolean;map)"], [493, "org.apache.maven.model.building.defaultmodelbuilderfactorytest.defaultmodelbuilderfactorytest()"], [494, "org.apache.maven.model.merge.modelmerger.mergebuildbase_defaultgoal(buildbase;buildbase;boolean;map)"], [495, "org.apache.maven.model.repositorybase.getid()"], [496, "org.apache.maven.project.abstractmavenprojecttestcase.customizecontainerconfiguration(containerconfiguration)"], [497, "org.apache.maven.model.fileset.clone()"], [498, "org.apache.maven.model.profile.defaultprofileselector.getactiveprofiles(collection;profileactivationcontext;modelproblemcollector)"], [499, "org.apache.maven.model.merge.modelmerger.mergeplugin(plugin;plugin;boolean;map)"], [500, "org.apache.maven.model.validation.defaultmodelvalidator.hasexpression(string)"], [501, "org.apache.maven.model.build.getoutputdirectory()"], [502, "org.apache.maven.model.plugincontainer.clone()"], [503, "org.apache.maven.model.profile.activation.propertyprofileactivator.isactive(profile;profileactivationcontext;modelproblemcollector)"], [504, "org.apache.maven.model.profile.activation.jdkversionprofileactivatortest.jdkversionprofileactivatortest()"], [505, "org.apache.maven.model.pluginexecution.getid()"], [506, "org.apache.maven.model.build.getscriptsourcedirectory()"], [507, "org.apache.maven.model.building.modeldata.setactiveprofiles(list)"], [508, "org.apache.maven.repository.internal.defaultversionrangeresolver.setloggerfactory(loggerfactory)"], [509, "org.apache.maven.repository.internal.defaultversionresolver.setmetadataresolver(metadataresolver)"], [510, "org.apache.maven.model.model.setpackaging(string)"], [511, "org.apache.maven.model.building.modeldata.modeldata(modelsource;model)"], [512, "org.apache.maven.model.profile.defaultprofileactivationcontext.getprojectdirectory()"], [513, "org.apache.maven.model.building.defaultmodelbuilderfactory.newreportingconverter()"], [514, "org.apache.maven.model.path.defaulturlnormalizertest.defaulturlnormalizertest()"], [515, "org.apache.maven.model.profile.defaultprofileactivationcontext.setinactiveprofileids(list)"], [516, "org.apache.maven.repository.internal.defaultversionrangeresolver.setrepositoryeventdispatcher(repositoryeventdispatcher)"], [517, "org.apache.maven.model.resource.clone()"], [518, "org.apache.maven.model.modelbase.getdependencymanagement()"], [519, "org.apache.maven.model.plugin.defaultreportingconverter.newdom(string;string)"], [520, "org.apache.maven.model.buildbase.buildbase()"], [521, "org.apache.maven.model.validation.defaultmodelvalidator.validateeffectivedependencies(modelproblemcollector;list;boolean;modelbuildingrequest)"], [522, "org.apache.maven.model.merge.modelmerger.mergemodel_parent(model;model;boolean;map)"], [523, "org.apache.maven.model.reporting.isexcludedefaults()"], [524, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.run()"], [525, "org.apache.maven.model.resource.getfiltering()"], [526, "org.apache.maven.model.merge.modelmerger.mergebuildbase_testresources(buildbase;buildbase;boolean;map)"], [527, "org.apache.maven.model.building.defaultmodelbuilder.setreportconfigurationexpander(reportconfigurationexpander)"], [528, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.stringsearchmodelinterpolator$interpolateobjectaction(object;list;list;stringsearchmodelinterpolator;modelproblemcollector)"], [529, "org.apache.maven.repository.internal.defaultartifactdescriptorreader.setmodelbuilder(modelbuilder)"], [530, "org.apache.maven.model.inheritance.defaultinheritanceassembler$inheritancemodelmerger.mergeplugin(plugin;plugin;boolean;map)"], [531, "org.apache.maven.model.build.build()"], [532, "org.apache.maven.model.merge.modelmerger.mergeplugincontainer(plugincontainer;plugincontainer;boolean;map)"], [533, "org.apache.maven.model.merge.mavenmodelmerger.mergemodel_issuemanagement(model;model;boolean;map)"], [534, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$cachefield.interpolate(object;interpolateobjectaction)"], [535, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.access$400(object;interpolateobjectaction)"], [536, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator$1.abstractstringbasedmodelinterpolator$1(abstractstringbasedmodelinterpolator;boolean;file)"], [537, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$mapfield.dointerpolate(object;interpolateobjectaction)"], [538, "org.apache.maven.model.building.modeldata.getgroupid()"], [539, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$cacheitem.access$000(cacheitem)"], [540, "org.apache.maven.model.merge.modelmerger.mergemodel_version(model;model;boolean;map)"], [541, "org.apache.maven.model.building.defaultmodelbuilderfactory.newinstance()"], [542, "org.apache.maven.model.model.setmodelversion(string)"], [543, "org.apache.maven.model.plugin.getversion()"], [544, "org.apache.maven.model.profile.setbuild(buildbase)"], [545, "org.apache.maven.model.building.defaultmodelbuilder.defaultmodelbuilder()"], [546, "org.apache.maven.project.defaultprojectbuilder.defaultprojectbuilder()"], [547, "org.apache.maven.model.profile.activation.fileprofileactivator.fileprofileactivator()"], [548, "org.apache.maven.model.merge.mavenmodelmerger.mergeplugin_executions(plugin;plugin;boolean;map)"], [549, "org.apache.maven.model.merge.modelmerger.mergeconfigurationcontainer_configuration(configurationcontainer;configurationcontainer;boolean;map)"], [550, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parseprofile(xmlpullparser;boolean)"], [551, "org.apache.maven.model.path.defaultpathtranslator.defaultpathtranslator()"], [552, "org.apache.maven.model.merge.mavenmodelmerger.mergebuildbase_filters(buildbase;buildbase;boolean;map)"], [553, "org.apache.maven.model.reporting.getoutputdirectory()"], [554, "org.apache.maven.model.merge.modelmerger.mergeplugin_version(plugin;plugin;boolean;map)"], [555, "org.apache.maven.model.building.defaultmodelbuilder.assembleinheritance(list;modelbuildingrequest;modelproblemcollector)"], [556, "org.apache.maven.model.activationproperty.clone()"], [557, "org.apache.maven.model.io.xpp3.mavenxpp3reader.parsebuildbase(xmlpullparser;boolean)"], [558, "org.apache.maven.model.building.defaultmodelbuildingresult.seteffectivemodel(model)"], [559, "org.apache.maven.model.io.defaultmodelreader.isstrict(map)"], [560, "org.apache.maven.model.validation.defaultmodelvalidator.validate20pluginversion(string;modelproblemcollector;string;string;inputlocationtracker;modelbuildingrequest)"], [561, "org.apache.maven.repository.internal.snapshotmetadatageneratorfactory.snapshotmetadatageneratorfactory()"], [562, "org.apache.maven.model.profile.defaultprofileactivationcontext.getuserproperties()"], [563, "org.apache.maven.model.building.defaultmodelbuildingrequest.getvalidationlevel()"], [564, "org.apache.maven.model.activationfile.activationfile()"], [565, "org.apache.maven.model.interpolation.abstractstringbasedmodelinterpolator.createpostprocessors(model;file;modelbuildingrequest)"], [566, "org.apache.maven.model.model.setcontributors(list)"], [567, "org.apache.maven.model.merge.modelmerger.mergeconfigurationcontainer(configurationcontainer;configurationcontainer;boolean;map)"], [568, "org.apache.maven.model.model.getcontributors()"], [569, "org.apache.maven.model.merge.modelmerger.mergemodelbase_reporting(modelbase;modelbase;boolean;map)"], [570, "org.apache.maven.model.merge.modelmerger.getresourcekey(resource)"], [571, "org.apache.maven.model.building.defaultmodelbuildingrequest.getmodelbuildinglistener()"], [572, "org.apache.maven.model.validation.defaultmodelvalidatortest.defaultmodelvalidatortest()"], [573, "org.apache.maven.model.merge.modelmerger.mergepluginconfiguration(pluginconfiguration;pluginconfiguration;boolean;map)"], [574, "org.apache.maven.model.building.defaultmodelbuilderfactory.newprofileselector()"], [575, "org.apache.maven.model.merge.modelmerger.mergereporting(reporting;reporting;boolean;map)"], [576, "org.apache.maven.model.building.defaultmodelbuildingrequest.getactiveprofileids()"], [577, "org.apache.maven.repository.internal.defaultartifactdescriptorreader.setrepositoryeventdispatcher(repositoryeventdispatcher)"], [578, "org.apache.maven.model.model.getprojectdirectory()"], [579, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction$listfield.stringsearchmodelinterpolator$interpolateobjectaction$listfield(field)"], [580, "org.apache.maven.model.building.defaultmodelbuilderfactory$stublifecyclebindingsinjector.injectlifecyclebindings(model;modelbuildingrequest;modelproblemcollector)"], [581, "org.apache.maven.model.path.defaultmodelpathtranslator.defaultmodelpathtranslator()"], [582, "org.apache.maven.model.validation.defaultmodelvalidator.validateeffectivemodel(model;modelbuildingrequest;modelproblemcollector)"], [583, "org.apache.maven.model.profile.getid()"], [584, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.evaluatearray(object;interpolateobjectaction)"], [585, "org.apache.maven.model.building.defaultmodelbuilderfactory.defaultmodelbuilderfactory()"], [586, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator$interpolateobjectaction.access$500(interpolateobjectaction)"], [587, "org.apache.maven.model.configurationcontainer.setlocation(object;inputlocation)"], [588, "org.apache.maven.model.merge.mavenmodelmerger.mavenmodelmerger()"], [589, "org.apache.maven.model.building.defaultmodelproblemcollector.hasfatalerrors()"], [590, "org.apache.maven.model.profile.defaultprofileselector.isactive(profile;profileactivationcontext;modelproblemcollector)"], [591, "org.apache.maven.model.building.defaultmodelbuilder.setlifecyclebindingsinjector(lifecyclebindingsinjector)"], [592, "org.apache.maven.model.building.defaultmodelbuilderfactory.newmodelinterpolator()"], [593, "org.apache.maven.model.activation.clone()"], [594, "org.apache.maven.repository.internal.defaultartifactdescriptorreader.setremoterepositorymanager(remoterepositorymanager)"], [595, "org.apache.maven.model.composition.defaultdependencymanagementimporter.defaultdependencymanagementimporter()"], [596, "org.apache.maven.model.profile.getbuild()"], [597, "org.apache.maven.model.building.defaultmodelbuildingresult.defaultmodelbuildingresult()"], [598, "org.apache.maven.model.building.defaultmodelbuilder.setreportingconverter(reportingconverter)"], [599, "org.apache.maven.model.building.defaultmodelbuilderfactory.newmodelnormalizer()"], [600, "org.apache.maven.model.building.defaultmodelbuilderfactory.newdependencymanagementimporter()"], [601, "org.apache.maven.model.interpolation.stringsearchmodelinterpolator.stringsearchmodelinterpolator()"], [602, "org.apache.maven.model.building.filemodelsource.getinputstream()"], [603, "org.apache.maven.model.modelbase.getrepositories()"], [604, "org.apache.maven.repository.internal.defaultversionrangeresolver.setmetadataresolver(metadataresolver)"], [605, "org.apache.maven.model.interpolation.stringsearchmodelinterpolatortest.stringsearchmodelinterpolatortest()"]], "initial_tests": ["org.apache.maven.model.building.defaultmodelbuilderfactorytest.testcompletewiring", "org.apache.maven.project.mavenprojecttest.testinvalidparent", "org.apache.maven.repository.internal.mavenrepositorysystemutilstest.testgetrepositorysystem"], "bugs": ["org.apache.maven.project.mavenproject.getparent()"], "tests_details": [["org.apache.maven.model.building.defaultmodelbuilderfactorytest.testcompletewiring", [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605], 0], ["org.apache.maven.project.mavenprojecttest.testinvalidparent", [210, 420, 482, 496, 545, 546], 1], ["org.apache.maven.repository.internal.mavenrepositorysystemutilstest.testgetrepositorysystem", [0, 1, 10, 19, 23, 33, 35, 38, 39, 41, 46, 47, 52, 60, 65, 66, 69, 71, 74, 75, 99, 108, 110, 111, 112, 113, 116, 134, 135, 143, 146, 159, 166, 176, 182, 195, 198, 203, 205, 206, 236, 238, 240, 248, 249, 253, 255, 264, 267, 269, 270, 273, 275, 280, 284, 292, 298, 302, 313, 346, 349, 351, 352, 353, 355, 361, 367, 370, 385, 388, 391, 393, 396, 403, 412, 422, 423, 431, 434, 435, 448, 453, 464, 471, 474, 480, 482, 488, 508, 509, 513, 516, 527, 529, 541, 545, 547, 551, 561, 574, 577, 581, 585, 588, 591, 592, 594, 595, 598, 599, 600, 601, 604], 0]]}