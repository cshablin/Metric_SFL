{"arrayliststack": {"distance": 1.25, "methods": ["org.apache.wicket.util.collections.arrayliststack.peek()", "org.apache.wicket.util.collections.arrayliststack.pop()", "org.apache.wicket.util.collections.arrayliststack.arrayliststack()", "org.apache.wicket.util.collections.arrayliststack.push(object)", "org.apache.wicket.util.collections.arrayliststack.arrayliststack(int)"]}, "request": {"distance": 0.9667, "methods": ["org.apache.wicket.protocol.http.request.webrequestcodingstrategy$mountsmap.<clinit>()", "org.apache.wicket.request.requestparameters.setpath(string)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.detach(requestcycle)", "org.apache.wicket.request.request()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.bookmarkablepagerequesttarget(class;pageparameters)", "org.apache.wicket.protocol.http.request.urlcompressing.urlcompressingwebrequestprocessortest.urlcompressingwebrequestprocessortest()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.addresourceparameters(request;requestparameters)", "org.apache.wicket.request.requestparameters.setresourcekey(string)", "org.apache.wicket.request.requestparameters.getresourcekey()", "org.apache.wicket.request.requestparameters.getparameters()", "org.apache.wicket.request.target.component.listener.abstractlistenerinterfacerequesttarget.gettarget()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy$mountsmap.webrequestcodingstrategy$mountsmap(boolean)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy$mountsmap.strategies()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpagemapname()", "org.apache.wicket.request.target.coding.querystringurlcodingstrategytest.<clinit>()", "org.apache.wicket.request.target.coding.webrequestencoder.webrequestencoder(appendingstringbuffer)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpageclass()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy$mountsmap$1.webrequestcodingstrategy$mountsmap$1()", "org.apache.wicket.request.target.component.listener.behaviorrequesttarget.behaviorrequesttarget(page;component;requestlistenerinterface;requestparameters)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.getrequestpath(request)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.getmountencoder(irequesttarget)", "org.apache.wicket.request.getrequestparameters()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.addinterfaceparameters(string;requestparameters)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.newpage(class;requestcycle)", "org.apache.wicket.request.target.coding.indexedsharedresourcecodingstrategytest.indexedsharedresourcecodingstrategytest()", "org.apache.wicket.request.requestparameters.getbehaviorid()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy$settings.webrequestcodingstrategy$settings()", "org.apache.wicket.request.abstractrequestcycleprocessor.getrequestcodingstrategy()", "org.apache.wicket.request.target.coding.indexedhybridurlcodingstrategytest.indexedhybridurlcodingstrategytest()", "org.apache.wicket.request.target.coding.mixedparamurlcodingstrategytest.mixedparamurlcodingstrategytest()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.webrequestcodingstrategy(settings)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.decode(request)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.encode(requestcycle;irequesttarget)", "org.apache.wicket.request.abstractrequestcycleprocessor.respond(requestcycle)", "org.apache.wicket.request.target.resource.sharedresourcerequesttarget.getresourcekey()", "org.apache.wicket.request.target.component.listener.abstractlistenerinterfacerequesttarget.getrequestlistenerinterface()", "org.apache.wicket.request.requestparameters.geturldepth()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.decodepagemapname(string)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.encode(requestcycle;ilistenerinterfacerequesttarget)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.addbookmarkablepageparameters(request;requestparameters)", "org.apache.wicket.request.requestparameters.getpagemapname()", "org.apache.wicket.request.target.coding.querystringurlcodingstrategytest.querystringurlcodingstrategytest()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.processevents(requestcycle)", "org.apache.wicket.request.target.resource.sharedresourcerequesttarget.<clinit>()", "org.apache.wicket.request.requestparameters.setpagemapname(string)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.pathfortarget(irequesttarget)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.encode(requestcycle;ibookmarkablepagerequesttarget)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy$settings.aremountscasesensitive()", "org.apache.wicket.request.requestparameters.setparameters(map)", "org.apache.wicket.request.requestparameters.requestparameters()", "org.apache.wicket.request.requestparameters.seturldepth(int)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpage(requestcycle)", "org.apache.wicket.request.requestparameters.setquerystring(string)", "org.apache.wicket.request.target.resource.sharedresourcerequesttarget.sharedresourcerequesttarget(requestparameters)", "org.apache.wicket.request.requestparameters.setbehaviorid(string)", "org.apache.wicket.request.requestparameters.setbookmarkablepageclass(string)", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.encode(requestcycle;isharedresourcerequesttarget)", "org.apache.wicket.request.target.component.pagerequesttarget.pagerequesttarget(page)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpageparameters()", "org.apache.wicket.request.abstractrequestcycleprocessor.processevents(requestcycle)", "org.apache.wicket.request.target.component.listener.abstractlistenerinterfacerequesttarget.abstractlistenerinterfacerequesttarget(page;component;requestlistenerinterface;requestparameters)", "org.apache.wicket.request.abstractrequestcycleprocessor.abstractrequestcycleprocessor()", "org.apache.wicket.request.target.component.listener.abstractlistenerinterfacerequesttarget.getrequestparameters()", "org.apache.wicket.request.target.coding.statelessstatefullurlcodingstrategytest.statelessstatefullurlcodingstrategytest()", "org.apache.wicket.request.target.coding.webrequestencoder.addvalue(string;string)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.bookmarkablepagerequesttarget(string;class;pageparameters)", "org.apache.wicket.request.target.coding.urlmountingtest.urlmountingtest()", "org.apache.wicket.request.target.coding.indexparamwithstatelessiframetest.indexparamwithstatelessiframetest()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.<clinit>()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.respond(requestcycle)", "org.apache.wicket.request.target.resource.sharedresourcerequesttarget.getrequestparameters()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.addinterfaceparameters(request;requestparameters)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpage()", "org.apache.wicket.protocol.http.request.webrequestcodingstrategy.webrequestcodingstrategy()"]}, "metadatakey": {"distance": 1.3333, "methods": ["org.apache.wicket.metadatakey.get(metadataentry[])", "org.apache.wicket.metadatakey.set(metadataentry[];object)", "org.apache.wicket.metadatakey.metadatakey()", "org.apache.wicket.metadatakey.equals(object)"]}, "component$addedbehaviorchange": {"distance": 1.0, "methods": ["org.apache.wicket.component$addedbehaviorchange.component$addedbehaviorchange(component;ibehavior)"]}, "requestcycle": {"distance": 0.9945, "methods": ["org.apache.wicket.requestcycle.encodeurlfor(irequesttarget)", "org.apache.wicket.requestcycle.urlfor(resourcereference;valuemap)", "org.apache.wicket.requestcycle.getresponse()", "org.apache.wicket.requestcycle.urlfor(irequesttarget)", "org.apache.wicket.requestcycle.getresponsepage()", "org.apache.wicket.requestcycle.isredirect()", "org.apache.wicket.requestcycle.setmetadata(metadatakey;object)", "org.apache.wicket.requestcycle.urlfor(component;ibehavior;requestlistenerinterface)", "org.apache.wicket.requestcycle.getoriginalresponse()", "org.apache.wicket.requestcycle.getmetadata(metadatakey)", "org.apache.wicket.requestcycle.get()", "org.apache.wicket.requestcycle.sessionexists()", "org.apache.wicket.requestcycle.safegetrequestprocessor()", "org.apache.wicket.requestcycle.set(requestcycle)", "org.apache.wicket.requestcycle.onbeginrequest()", "org.apache.wicket.requestcycle.threaddetach()", "org.apache.wicket.requestcycle.setpageparameters(pageparameters)", "org.apache.wicket.requestcycle.step()", "org.apache.wicket.requestcycle.requestcycle(application;request;response)", "org.apache.wicket.requestcycle.setautomaticallyclearfeedbackmessages(boolean)", "org.apache.wicket.requestcycle.urlfor(resourcereference)", "org.apache.wicket.requestcycle.getrequest()", "org.apache.wicket.requestcycle.onendrequest()", "org.apache.wicket.requestcycle.request(irequesttarget)", "org.apache.wicket.requestcycle.steps()", "org.apache.wicket.requestcycle.setresponse(response)", "org.apache.wicket.requestcycle.<clinit>()", "org.apache.wicket.requestcycle.getapplication()", "org.apache.wicket.requestcycle.checkreuse()", "org.apache.wicket.requestcycle.detach()", "org.apache.wicket.requestcycle.getrequesttarget()", "org.apache.wicket.requestcycle.getsession()", "org.apache.wicket.requestcycle.processeventsandrespond()"]}, "markupcontainer": {"distance": 0.9671, "methods": ["org.apache.wicket.markupcontainer.getmarkupstream()", "org.apache.wicket.markupcontainer.children_remove(int)", "org.apache.wicket.markupcontainer.children_get(int;boolean)", "org.apache.wicket.markupcontainer.<clinit>()", "org.apache.wicket.markupcontainer.autoadd(component;markupstream)", "org.apache.wicket.markupcontainer.addedcomponent(component)", "org.apache.wicket.markupcontainer.access$000(markupcontainer)", "org.apache.wicket.markupcontainer.detachchildren()", "org.apache.wicket.markupcontainer.getid(object)", "org.apache.wicket.markupcontainer.add(component[])", "org.apache.wicket.markupcontainer.getassociatedmarkupstream(boolean)", "org.apache.wicket.markupcontainer.children_add(component)", "org.apache.wicket.markupcontainer.children_get(int)", "org.apache.wicket.markupcontainer.renderall(markupstream)", "org.apache.wicket.markupcontainer.access$100(markupcontainer;int)", "org.apache.wicket.markupcontainer.setrenderallowed()", "org.apache.wicket.markupcontainer.iterator()", "org.apache.wicket.markupcontainer.rendernext(markupstream)", "org.apache.wicket.markupcontainer.markupcontainer(string;imodel)", "org.apache.wicket.markupcontainer.istransparentresolver()", "org.apache.wicket.markupcontainer.visitchildren(ivisitor)", "org.apache.wicket.markupcontainer.children_indexof(component)", "org.apache.wicket.markupcontainer.markupcontainer(string)", "org.apache.wicket.markupcontainer.copychildren()", "org.apache.wicket.markupcontainer.put(component)", "org.apache.wicket.markupcontainer.rendercomponenttagbody(markupstream;componenttag)", "org.apache.wicket.markupcontainer.postprocess(object;boolean;markupcontainer;int)", "org.apache.wicket.markupcontainer.children_size()", "org.apache.wicket.markupcontainer.setmarkupstream(markupstream)", "org.apache.wicket.markupcontainer.internalmarkrendering(boolean)", "org.apache.wicket.markupcontainer.get(string)", "org.apache.wicket.markupcontainer.onrender(markupstream)", "org.apache.wicket.markupcontainer.children_get(string)", "org.apache.wicket.markupcontainer.visitchildren(class;ivisitor)", "org.apache.wicket.markupcontainer.oncomponenttagbody(markupstream;componenttag)", "org.apache.wicket.markupcontainer.onbeforerenderchildren()", "org.apache.wicket.markupcontainer.onafterrenderchildren()", "org.apache.wicket.markupcontainer.findmarkupstream()"]}, "application": {"distance": 0.9946, "methods": ["org.apache.wicket.application.get()", "org.apache.wicket.application.getmarkupsettings()", "org.apache.wicket.application.addcomponentinstantiationlistener(icomponentinstantiationlistener)", "org.apache.wicket.application.getrequestlogger()", "org.apache.wicket.application.defaultclassresolver.getresources(string)", "org.apache.wicket.application.notifyrenderheadlistener(iheaderresponse)", "org.apache.wicket.application.application()", "org.apache.wicket.application.logresponsetarget(irequesttarget)", "org.apache.wicket.application.notifycomponentinstantiationlisteners(component)", "org.apache.wicket.application.newconverterlocator()", "org.apache.wicket.application.notifypostcomponentonbeforerenderlisteners(component)", "org.apache.wicket.application.callinitializers()", "org.apache.wicket.application.configure()", "org.apache.wicket.application.getsettings()", "org.apache.wicket.application.getpagesettings()", "org.apache.wicket.application.logeventtarget(irequesttarget)", "org.apache.wicket.application.unset()", "org.apache.wicket.application.set(application)", "org.apache.wicket.application.getdebugsettings()", "org.apache.wicket.application.internaldestroy()", "org.apache.wicket.application.getsharedresources()", "org.apache.wicket.application.load(properties)", "org.apache.wicket.application.<clinit>()", "org.apache.wicket.application.defaultclassresolver.resolveclass(string)", "org.apache.wicket.application.getapplicationsettings()", "org.apache.wicket.application.calldestroyers()", "org.apache.wicket.application.internalinit()", "org.apache.wicket.application.getrequestloggersettings()", "org.apache.wicket.application.addinitializer(string)", "org.apache.wicket.application.initializecomponents()", "org.apache.wicket.application.getsecuritysettings()", "org.apache.wicket.application.notifycomponentonafterrenderlisteners(component)", "org.apache.wicket.application.exists()", "org.apache.wicket.application.getframeworksettings()", "org.apache.wicket.application.getresourcesettings()", "org.apache.wicket.application.defaultclassresolver.loadresources(enumeration;set)", "org.apache.wicket.application.defaultclassresolver.defaultclassresolver()", "org.apache.wicket.application.getexceptionsettings()", "org.apache.wicket.application.ondestroy()", "org.apache.wicket.application.getsessionstore()", "org.apache.wicket.application.getname()", "org.apache.wicket.application.getsessionsettings()", "org.apache.wicket.application.notifyprecomponentonbeforerenderlisteners(component)", "org.apache.wicket.application.getrequestcyclesettings()"]}, "response": {"distance": 1.0, "methods": ["org.apache.wicket.response.stringresponse.write(charsequence)", "org.apache.wicket.response.<clinit>()", "org.apache.wicket.response.response()", "org.apache.wicket.response.stringresponse.stringresponse()", "org.apache.wicket.response.stringresponse.getbuffer()", "org.apache.wicket.response.println(charsequence)", "org.apache.wicket.response.stringresponsetest.stringresponsetest()"]}, "session": {"distance": 0.9878, "methods": ["org.apache.wicket.session.nextsequencevalue()", "org.apache.wicket.session.getid()", "org.apache.wicket.session.getattribute(string)", "org.apache.wicket.session.issessioninvalidated()", "org.apache.wicket.session.dirtypage(page)", "org.apache.wicket.session.touch(page)", "org.apache.wicket.session.findorcreate(request;response)", "org.apache.wicket.session.pagemapforname(string;boolean)", "org.apache.wicket.session.unset()", "org.apache.wicket.session.defaultpagefactory.newpage(class)", "org.apache.wicket.session.newpagemap(string)", "org.apache.wicket.session.findorcreate()", "org.apache.wicket.session.pagemap.leastrecentlyaccessedevictionstrategy.evict(ipagemap)", "org.apache.wicket.session.session(request)", "org.apache.wicket.session.dirty()", "org.apache.wicket.session.pagemap.leastrecentlyaccessedevictionstrategy.leastrecentlyaccessedevictionstrategy(int)", "org.apache.wicket.session.getdirtyobjectslist()", "org.apache.wicket.session.getauthorizationstrategy()", "org.apache.wicket.session.getsessionstore()", "org.apache.wicket.session.defaultpagefactory.defaultpagefactory()", "org.apache.wicket.session.dirtypagemap(ipagemap)", "org.apache.wicket.session.attach()", "org.apache.wicket.session.invalidatesessiontest.invalidatesessiontest()", "org.apache.wicket.session.getapplication()", "org.apache.wicket.session.exists()", "org.apache.wicket.session.detach()", "org.apache.wicket.session.getlocale()", "org.apache.wicket.session.set(session)", "org.apache.wicket.session.get()", "org.apache.wicket.session.requestdetached()", "org.apache.wicket.session.istemporary()", "org.apache.wicket.session.<clinit>()", "org.apache.wicket.session.attributeforpagemapname(string)", "org.apache.wicket.session.defaultpagefactorytest.defaultpagefactorytest(string)", "org.apache.wicket.session.getstyle()", "org.apache.wicket.session.defaultpagefactory.newpage(constructor;object)", "org.apache.wicket.session.setattribute(string;object)", "org.apache.wicket.session.nextpageid()"]}, "page": {"distance": 0.9688, "methods": ["org.apache.wicket.page.renderpage()", "org.apache.wicket.page.setstatelesshint(boolean)", "org.apache.wicket.page.componentrendered(component)", "org.apache.wicket.page.maytrackchangesfor(component;markupcontainer)", "org.apache.wicket.page.setpagemap(ipagemap)", "org.apache.wicket.page.ispagestateless()", "org.apache.wicket.page.endversion()", "org.apache.wicket.page.getstatelesshint()", "org.apache.wicket.page.getautoindex()", "org.apache.wicket.page.getpagemap()", "org.apache.wicket.page.setformcomponentvaluesfromcookies()", "org.apache.wicket.page.setnextavailableid()", "org.apache.wicket.page.getnumericid()", "org.apache.wicket.page.ondetach()", "org.apache.wicket.page.init()", "org.apache.wicket.page.checkrendering(markupcontainer)", "org.apache.wicket.page.init(ipagemap)", "org.apache.wicket.page.componentadded(component)", "org.apache.wicket.page.<clinit>()", "org.apache.wicket.page.dirty()", "org.apache.wicket.page.getpagemapentry()", "org.apache.wicket.page.setnumericid(int)", "org.apache.wicket.page.componentchanged(component;markupcontainer)", "org.apache.wicket.page.configureresponse()", "org.apache.wicket.page.onrender(markupstream)", "org.apache.wicket.page.page()", "org.apache.wicket.page.access$000(page)", "org.apache.wicket.page.getid()", "org.apache.wicket.page.onbeforerender()", "org.apache.wicket.page.getcurrentversionnumber()", "org.apache.wicket.page.detachmodels()", "org.apache.wicket.page.isbookmarkable()"]}, "component": {"distance": 1.0016, "methods": ["org.apache.wicket.component.<clinit>()", "org.apache.wicket.component.detachmodels()", "org.apache.wicket.component.getmodelimpl()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.detach(requestcycle)", "org.apache.wicket.component.detachchildren()", "org.apache.wicket.component.isvisibilityallowed()", "org.apache.wicket.component.notifybehaviorscomponentbeforerender()", "org.apache.wicket.component.getrenderbodyonly()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.bookmarkablepagerequesttarget(class;pageparameters)", "org.apache.wicket.component.rendered()", "org.apache.wicket.component.getmarkupid(boolean)", "org.apache.wicket.component.addstatechange(change)", "org.apache.wicket.component.markrendering(boolean)", "org.apache.wicket.request.target.component.listener.abstractlistenerinterfacerequesttarget.gettarget()", "org.apache.wicket.component.getstatelesshint()", "org.apache.wicket.component.render(markupstream)", "org.apache.wicket.component.prepareforrender(boolean)", "org.apache.wicket.component.component(string;imodel)", "org.apache.wicket.component.getlocale()", "org.apache.wicket.component.isignoreattributemodifier()", "org.apache.wicket.component.isactionauthorized(action)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpagemapname()", "org.apache.wicket.component.renderclosingcomponenttag(markupstream;componenttag;boolean)", "org.apache.wicket.component.isversioned()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpageclass()", "org.apache.wicket.component.addbehavior(ibehavior)", "org.apache.wicket.component.onbeforerenderchildren()", "org.apache.wicket.component.add(ibehavior[])", "org.apache.wicket.component.isstateless()", "org.apache.wicket.component.getapplication()", "org.apache.wicket.component.internalbeforerender()", "org.apache.wicket.component.getbehaviorsimpl()", "org.apache.wicket.component.data_add(object)", "org.apache.wicket.component.onafterrender()", "org.apache.wicket.component.data_get(int)", "org.apache.wicket.component.setid(string)", "org.apache.wicket.component.determinevisibility()", "org.apache.wicket.component.setflag(short;boolean)", "org.apache.wicket.request.target.component.listener.behaviorrequesttarget.behaviorrequesttarget(page;component;requestlistenerinterface;requestparameters)", "org.apache.wicket.component.checkhierarchychange(component)", "org.apache.wicket.component.getvariation()", "org.apache.wicket.component.data_insert(int;object)", "org.apache.wicket.component.getflag(short)", "org.apache.wicket.component.detachmodel()", "org.apache.wicket.component.rendercomponenttag(componenttag)", "org.apache.wicket.component.setmetadata(metadatakey;object)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.newpage(class;requestcycle)", "org.apache.wicket.component.isauto()", "org.apache.wicket.component.getmarkupid()", "org.apache.wicket.component.getmetadata()", "org.apache.wicket.component.getrequestcycle()", "org.apache.wicket.component.beforerender()", "org.apache.wicket.component.setoutputmarkupid(boolean)", "org.apache.wicket.component.getcomponentborder()", "org.apache.wicket.component.setmarkupidimpl(object)", "org.apache.wicket.component.data_set(int;object)", "org.apache.wicket.component.setauto(boolean)", "org.apache.wicket.request.target.component.listener.abstractlistenerinterfacerequesttarget.getrequestlistenerinterface()", "org.apache.wicket.component.getpage()", "org.apache.wicket.component.afterrender()", "org.apache.wicket.component.setparent(markupcontainer)", "org.apache.wicket.component.onbeforerender()", "org.apache.wicket.component.getresponse()", "org.apache.wicket.component.setmarkupid(string)", "org.apache.wicket.component.getparent()", "org.apache.wicket.component.getstyle()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.processevents(requestcycle)", "org.apache.wicket.component.notifybehaviorscomponentrendered()", "org.apache.wicket.component.prepareforrender()", "org.apache.wicket.component.data_length()", "org.apache.wicket.component.setflag(int;boolean)", "org.apache.wicket.component.getmetadata(metadatakey)", "org.apache.wicket.component.urlfor(ibehavior;requestlistenerinterface)", "org.apache.wicket.component.findparent(class)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpage(requestcycle)", "org.apache.wicket.component.detach()", "org.apache.wicket.component.getrequest()", "org.apache.wicket.component.getsession()", "org.apache.wicket.component.isrenderallowed()", "org.apache.wicket.request.target.component.pagerequesttarget.pagerequesttarget(page)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpageparameters()", "org.apache.wicket.component.setrenderallowed()", "org.apache.wicket.component.getid()", "org.apache.wicket.request.target.component.listener.abstractlistenerinterfacerequesttarget.abstractlistenerinterfacerequesttarget(page;component;requestlistenerinterface;requestparameters)", "org.apache.wicket.component.findpage()", "org.apache.wicket.component.internalmarkrendering(boolean)", "org.apache.wicket.component.renderhead(htmlheadercontainer)", "org.apache.wicket.request.target.component.listener.abstractlistenerinterfacerequesttarget.getrequestparameters()", "org.apache.wicket.component.rendercomponent(markupstream)", "org.apache.wicket.component.getpath()", "org.apache.wicket.component.isbehavioraccepted(ibehavior)", "org.apache.wicket.component.getmarkupidimpl()", "org.apache.wicket.component.ondetach()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.bookmarkablepagerequesttarget(string;class;pageparameters)", "org.apache.wicket.component.isvisible()", "org.apache.wicket.component.onafterrenderchildren()", "org.apache.wicket.component.getbehaviors()", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.respond(requestcycle)", "org.apache.wicket.component.getbehaviors(class)", "org.apache.wicket.request.target.component.bookmarkablepagerequesttarget.getpage()", "org.apache.wicket.component.setversioned(boolean)", "org.apache.wicket.component.setrenderbodyonly(boolean)", "org.apache.wicket.component.oncomponenttag(componenttag)", "org.apache.wicket.component.getflag(int)", "org.apache.wicket.component.ispreparedforrender()", "org.apache.wicket.component.setrenderallowed(boolean)", "org.apache.wicket.component.detachbehaviors()"]}, "feedbackmessages": {"distance": 0.8667, "methods": ["org.apache.wicket.feedback.feedbackmessages.<clinit>()", "org.apache.wicket.feedback.feedbackmessages.feedbackmessages()"]}}