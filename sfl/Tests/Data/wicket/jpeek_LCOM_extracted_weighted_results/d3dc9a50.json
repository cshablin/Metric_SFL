{"abstracttime": {"distance": 1.0833, "methods": ["org.apache.wicket.util.time.abstracttime.after(abstracttimevalue)", "org.apache.wicket.util.time.abstracttime.abstracttime(long)"]}, "time": {"distance": 1.0312, "methods": ["org.apache.wicket.util.time.duration.milliseconds(long)", "org.apache.wicket.util.time.duration.hours(int)", "org.apache.wicket.util.time.duration.duration(long)", "org.apache.wicket.util.time.time.fromnow()", "org.apache.wicket.util.time.duration.sleep()", "org.apache.wicket.util.time.abstracttimevalue.abstracttimevalue(long)", "org.apache.wicket.util.time.time.time(long)", "org.apache.wicket.util.time.time.milliseconds(long)", "org.apache.wicket.util.time.time.subtract(time)", "org.apache.wicket.util.time.duration.minutes(int)", "org.apache.wicket.util.time.time.elapsedsince()", "org.apache.wicket.util.time.time.add(duration)", "org.apache.wicket.util.time.abstracttime.after(abstracttimevalue)", "org.apache.wicket.util.time.abstracttimevalue.getmilliseconds()", "org.apache.wicket.util.time.time.now()", "org.apache.wicket.util.time.duration.seconds(int)", "org.apache.wicket.util.time.abstracttime.abstracttime(long)"]}, "duration": {"distance": 1.1111, "methods": ["org.apache.wicket.util.time.duration.milliseconds(long)", "org.apache.wicket.util.time.duration.hours(int)", "org.apache.wicket.util.time.duration.duration(long)", "org.apache.wicket.util.time.duration.sleep()", "org.apache.wicket.util.time.duration.minutes(int)", "org.apache.wicket.util.time.duration.seconds(int)"]}, "arrayliststack": {"distance": 1.25, "methods": ["org.apache.wicket.util.collections.arrayliststack.peek()", "org.apache.wicket.util.collections.arrayliststack.pop()", "org.apache.wicket.util.collections.arrayliststack.push(object)", "org.apache.wicket.util.collections.arrayliststack.arrayliststack()", "org.apache.wicket.util.collections.arrayliststack.arrayliststack(int)"]}, "feedbackmessages": {"distance": 0.85, "methods": ["org.apache.wicket.feedback.feedbackmessages.clear(ifeedbackmessagefilter)", "org.apache.wicket.feedback.feedbackmessages.feedbackmessages()", "org.apache.wicket.feedback.feedbackmessages.messages(ifeedbackmessagefilter)"]}, "request": {"distance": 0.9375, "methods": ["org.apache.wicket.request.mapper.basicresourcereferencemapper.istimestampsenabled()", "org.apache.wicket.request.mapper.parameter.pageparameters$namedpair.getkey()", "org.apache.wicket.request.url.setcharset(charset)", "org.apache.wicket.request.handler.render.webpagerenderer.getandremovebufferedresponse(url)", "org.apache.wicket.request.handler.render.pagerenderer.getredirectpolicy()", "org.apache.wicket.request.resource.resourcereference$key.getstyle()", "org.apache.wicket.request.url$queryparameter.getvalue()", "org.apache.wicket.request.url.url(list;list)", "org.apache.wicket.request.mapper.bookmarkablemapper.buildurl(urlinfo)", "org.apache.wicket.request.parameter.urlrequestparametersadapter.urlrequestparametersadapter(url)", "org.apache.wicket.request.mapper.compoundrequestmapper.add(irequestmapper)", "org.apache.wicket.request.requesthandlerstack.executerequesthandler(irequesthandler)", "org.apache.wicket.request.handler.listenerinterfacerequesthandler.listenerinterfacerequesthandler(pageandcomponentprovider;requestlistenerinterface)", "org.apache.wicket.request.resource.resourcereference.getlocale()", "org.apache.wicket.request.url.isabsolute()", "org.apache.wicket.request.cycle.requestcycle.set(requestcycle)", "org.apache.wicket.request.url.url()", "org.apache.wicket.request.handler.pageprovider.detach()", "org.apache.wicket.request.handler.render.pagerenderer.getpageprovider()", "org.apache.wicket.request.mapper.homepagemapper.homepagemapper()", "org.apache.wicket.request.mapper.compoundrequestmapper.compoundrequestmapper()", "org.apache.wicket.request.handler.resource.resourcereferencerequesthandler.getpageparameters()", "org.apache.wicket.request.mapper.parameter.pageparameters.getnamedkeys()", "org.apache.wicket.request.handler.pageprovider.setpageclass(class)", "org.apache.wicket.request.mapper.abstractbookmarkablemapper.checkpageclass(class)", "org.apache.wicket.request.mapper.parameter.pageparameters.clearindexed()", "org.apache.wicket.request.url.url(list;list;charset)", "org.apache.wicket.request.mapper.info.componentinfo.componentinfo(integer;string;string;integer)", "org.apache.wicket.request.cycle.requestcycle.geturlrenderer()", "org.apache.wicket.request.mapper.pageinstancemapper.pageinstancemapper()", "org.apache.wicket.request.mapper.abstractbookmarkablemapper.maphandler(irequesthandler)", "org.apache.wicket.request.resource.resourcereferenceregistry.resourcereferenceregistry()", "org.apache.wicket.request.cycle.requestcycle.getmetadata(metadatakey)", "org.apache.wicket.request.mapper.info.pagecomponentinfo.pagecomponentinfo(pageinfo;componentinfo)", "org.apache.wicket.request.handler.renderpagerequesthandler.respond(irequestcycle)", "org.apache.wicket.request.mapper.info.pageinfo.pageinfo()", "org.apache.wicket.request.mapper.abstractresourcereferencemapper.encoderesourcereferenceattributes(url;resourcereference)", "org.apache.wicket.request.http.webresponse.disablecaching()", "org.apache.wicket.request.mapper.abstractmapper.abstractmapper()", "org.apache.wicket.request.urlrenderer.getbaseurl()", "org.apache.wicket.request.handler.pageprovider.setpagesource(ipagesource)", "org.apache.wicket.request.request.getrequestparameters()", "org.apache.wicket.request.mapper.parameter.pageparametersencoder.pageparametersencoder()", "org.apache.wicket.request.handler.bufferedresponserequesthandler.detach(irequestcycle)", "org.apache.wicket.request.url.parse(string;charset)", "org.apache.wicket.request.resource.resourcereference$urlattributes.hashcode()", "org.apache.wicket.request.cycle.requestcycle.detach()", "org.apache.wicket.request.url.getqueryparametervalue(string)", "org.apache.wicket.request.mapper.bookmarkablemapper.pagemusthavebeencreatedbookmarkable()", "org.apache.wicket.request.requesthandlerstack.detach()", "org.apache.wicket.request.mapper.basicresourcereferencemapper.basicresourcereferencemapper(ipageparametersencoder;iprovider)", "org.apache.wicket.request.urldecoder.decode(string;string)", "org.apache.wicket.request.mapper.info.componentinfo.getlistenerinterface()", "org.apache.wicket.request.resource.resourcereference.getname()", "org.apache.wicket.request.mapper.abstractcomponentmapper.requestlistenerinterfacetostring(requestlistenerinterface)", "org.apache.wicket.request.mapper.compoundrequestmapper$encoderwithsegmentscount.compareto(encoderwithsegmentscount)", "org.apache.wicket.request.parameter.combinedrequestparametersadapter.combinedrequestparametersadapter(irequestparameters[])", "org.apache.wicket.request.url$queryparameter.tostring(charset)", "org.apache.wicket.request.mapper.abstractbookmarkablemapper.processbookmarkable(class;pageparameters)", "org.apache.wicket.request.handler.render.pagerenderer.pagerenderer(renderpagerequesthandler)", "org.apache.wicket.request.mapper.compoundrequestmapper$encoderwithsegmentscount.getmapper()", "org.apache.wicket.request.cycle.requestcyclecontext.getrequestmapper()", "org.apache.wicket.request.handler.resource.resourcereferencerequesthandler.getresourcereference()", "org.apache.wicket.request.cycle.requestcycle.onendrequest()", "org.apache.wicket.request.url.islastsegmentempty(list)", "org.apache.wicket.request.resource.resourcereference$urlattributes.equals(object)", "org.apache.wicket.request.cycle.requestcyclecontext.getresponse()", "org.apache.wicket.request.handler.pageprovider.getpageparameters()", "org.apache.wicket.request.resource.resourcereferenceregistry.registerresourcereference(resourcereference)", "org.apache.wicket.request.cycle.requestcyclecontext.getexceptionmapper()", "org.apache.wicket.request.urlrenderer.rendercontextpathrelativeurl(string;request)", "org.apache.wicket.request.handler.render.pagerenderer.getrenderpagerequesthandler()", "org.apache.wicket.request.mapper.info.componentinfo.getrendercount()", "org.apache.wicket.request.url$queryparameter.getname()", "org.apache.wicket.request.resource.resourcereferenceregistry$1.resourcereferenceregistry$1(resourcereferenceregistry)", "org.apache.wicket.request.mapper.resourcereferencemapper.resourcereferencemapper(ipageparametersencoder;iprovider;iprovider)", "org.apache.wicket.request.requesthandlerstack.getresponse()", "org.apache.wicket.request.mapper.homepagemapper.getcompatibilityscore(request)", "org.apache.wicket.request.handler.bufferedresponserequesthandler.bufferedresponserequesthandler(bufferedwebresponse)", "org.apache.wicket.request.handler.pageprovider.setpageparameters(pageparameters)", "org.apache.wicket.request.handler.render.webpagerenderer.isredirecttobuffer()", "org.apache.wicket.request.mapper.pageinstancemapper.getcompatibilityscore(request)", "org.apache.wicket.request.resource.resourcereference$urlattributes.resourcereference$urlattributes(locale;string;string)", "org.apache.wicket.request.mapper.info.componentinfo.getbehaviorindex()", "org.apache.wicket.request.resource.resourcereference.resourcereference(class;string;locale;string;string)", "org.apache.wicket.request.mapper.bufferedresponsemapper.hasbufferedresponse(url)", "org.apache.wicket.request.mapper.bookmarkablemapper.getcompatibilityscore(request)", "org.apache.wicket.request.mapper.parameter.pageparametersencoder.decodepageparameters(request)", "org.apache.wicket.request.mapper.abstractbookmarkablemapper$urlinfo.getpageparameters()", "org.apache.wicket.request.handler.listenerinterfacerequesthandler.invokelistener()", "org.apache.wicket.request.cycle.requestcycle.setrequest(request)", "org.apache.wicket.request.handler.render.webpagerenderer.storebufferedresponse(url;bufferedwebresponse)", "org.apache.wicket.request.cycle.requestcyclecontext.getrequest()", "org.apache.wicket.request.resource.resourcereferenceregistry.setautoaddedcapacity(int)", "org.apache.wicket.request.response.response()", "org.apache.wicket.request.handler.pageprovider.getpageclass()", "org.apache.wicket.request.mapper.compoundrequestmapper.maprequest(request)", "org.apache.wicket.request.resource.resourcereference$urlattributes.getvariation()", "org.apache.wicket.request.mapper.info.pageinfo.tostring()", "org.apache.wicket.request.mapper.parameter.pageparametersencoder.encodepageparameters(pageparameters)", "org.apache.wicket.request.resource.resourcereference$urlattributes.getlocale()", "org.apache.wicket.request.mapper.bookmarkablemapper.bookmarkablemapper()", "org.apache.wicket.request.requesthandlerstack.setresponse(response)", "org.apache.wicket.request.handler.render.webpagerenderer.issessiontemporary()", "org.apache.wicket.request.mapper.bookmarkablemapper.bookmarkablemapper(ipageparametersencoder)", "org.apache.wicket.request.url.parsequeryparameter(string;charset)", "org.apache.wicket.request.handler.pageandcomponentprovider.pageandcomponentprovider(int;integer;string)", "org.apache.wicket.request.mapper.abstractbookmarkablemapper.abstractbookmarkablemapper()", "org.apache.wicket.request.resource.resourcereference.canberegistered()", "org.apache.wicket.request.cycle.requestcycle.getrequest()", "org.apache.wicket.request.mapper.bufferedresponsemapper.bufferedresponsemapper()", "org.apache.wicket.request.parameter.urlrequestparametersadapter.getparametervalue(string)", "org.apache.wicket.request.url.decodeparameter(string;charset)", "org.apache.wicket.request.handler.render.webpagerenderer.renderpage(url;requestcycle)", "org.apache.wicket.request.resource.resourcereference$key.getname()", "org.apache.wicket.request.mapper.parameter.pageparameters$namedpair.pageparameters$namedpair(string;string;1)", "org.apache.wicket.request.cycle.requestcycle.register(detachcallback)", "org.apache.wicket.request.resource.resourcereference$key.hashcode()", "org.apache.wicket.request.mapper.compoundrequestmapper$encoderwithsegmentscount.compareto(object)", "org.apache.wicket.request.handler.pageandcomponentprovider.getcomponent()", "org.apache.wicket.request.resource.packageresourcereference$streaminfo.packageresourcereference$streaminfo(iresourcestream;locale;string;string)", "org.apache.wicket.request.mapper.basicresourcereferencemapper.getcompatibilityscore(request)", "org.apache.wicket.request.mapper.parameter.pageparameters$namedpair.pageparameters$namedpair(string;string)", "org.apache.wicket.request.resource.resourcereferenceregistry._registerresourcereference(resourcereference)", "org.apache.wicket.request.mapper.bookmarkablemapper.parserequest(request)", "org.apache.wicket.request.mapper.abstractbookmarkablemapper$urlinfo.abstractbookmarkablemapper$urlinfo(pagecomponentinfo;class;pageparameters)", "org.apache.wicket.request.handler.pageprovider.prepareforrendernewpage()", "org.apache.wicket.request.cycle.requestcycle.mapurlfor(irequesthandler)", "org.apache.wicket.request.url.concatsegments(list)", "org.apache.wicket.request.mapper.compoundrequestmapper.maphandler(irequesthandler)", "org.apache.wicket.request.cycle.requestcycle.get()", "org.apache.wicket.request.url.equals(object)", "org.apache.wicket.request.resource.resourcereference$key.getvariation()", "org.apache.wicket.request.handler.render.webpagerenderer.isredirecttorender()", "org.apache.wicket.request.parameter.combinedrequestparametersadapter.getparametervalue(string)", "org.apache.wicket.request.cycle.requestcycle.urlfor(class;pageparameters)", "org.apache.wicket.request.url.isatleastonsegmentreal(list)", "org.apache.wicket.request.url$queryparameter.url$queryparameter(string;string)", "org.apache.wicket.request.mapper.abstractbookmarkablemapper$urlinfo.getpageclass()", "org.apache.wicket.request.mapper.basicresourcereferencemapper.maphandler(irequesthandler)", "org.apache.wicket.request.resource.resourcereference$urlattributes.getstyle()", "org.apache.wicket.request.mapper.abstractresourcereferencemapper.abstractresourcereferencemapper()", "org.apache.wicket.request.url.getqueryparameter(string)", "org.apache.wicket.request.url.decodesegment(string;charset)", "org.apache.wicket.request.resource.packageresourcereference.packageresourcereference(class;string;locale;string;string)", "org.apache.wicket.request.mapper.abstractbookmarkablemapper$urlinfo.getpagecomponentinfo()", "org.apache.wicket.request.mapper.info.componentinfo.tostring()", "org.apache.wicket.request.resource.resourcereference$key.getlocale()", "org.apache.wicket.request.mapper.info.pageinfo.parse(string)", "org.apache.wicket.request.resource.packageresourcereference.geturlattributes()", "org.apache.wicket.request.resource.resourcereference.getstyle()", "org.apache.wicket.request.resource.resourcereference$key.getscope()", "org.apache.wicket.request.mapper.info.componentinfo.getcomponentpath()", "org.apache.wicket.request.mapper.info.componentinfo.encodecomponentpath(string)", "org.apache.wicket.request.url.url(url)", "org.apache.wicket.request.mapper.info.componentinfo.isnumber(string)", "org.apache.wicket.request.handler.pageprovider.touchpageinstance()", "org.apache.wicket.request.requesthandlerstack.getrequesthandlerscheduledaftercurrent()", "org.apache.wicket.request.handler.resource.resourcereferencerequesthandler.resourcereferencerequesthandler(resourcereference)", "org.apache.wicket.request.url.getqueryparameters()", "org.apache.wicket.request.handler.listenerinterfacerequesthandler.getbehaviorindex()", "org.apache.wicket.request.handler.listenerinterfacerequesthandler.respond(irequestcycle)", "org.apache.wicket.request.request.getqueryparameters()", "org.apache.wicket.request.mapper.bufferedresponsemapper.maprequest(request)", "org.apache.wicket.request.mapper.abstractcomponentmapper.encodepagecomponentinfo(url;pagecomponentinfo)", "org.apache.wicket.request.mapper.parameter.pageparameters$entry.pageparameters$entry(1)", "org.apache.wicket.request.mapper.homepagemapper.homepagemapper(ipageparametersencoder)", "org.apache.wicket.request.handler.pageandcomponentprovider.pageandcomponentprovider(irequestablepage;irequestablecomponent)", "org.apache.wicket.request.mapper.info.pagecomponentinfo.tostring()", "org.apache.wicket.request.mapper.info.pagecomponentinfo.parse(string)", "org.apache.wicket.request.mapper.abstractcomponentmapper.getcontext()", "org.apache.wicket.request.mapper.info.pagecomponentinfo.getcomponentinfo()", "org.apache.wicket.request.resource.classscanner.classscanner()", "org.apache.wicket.request.mapper.parentpathreferencerewriter.getcompatibilityscore(request)", "org.apache.wicket.request.mapper.info.componentinfo.parse(string)", "org.apache.wicket.request.urlrenderer.setbaseurl(url)", "org.apache.wicket.request.url.url(charset)", "org.apache.wicket.request.cycle.requestcyclecontext.setrequestmapper(irequestmapper)", "org.apache.wicket.request.handler.renderpagerequesthandler.getpageprovider()", "org.apache.wicket.request.urlrenderer.urlrenderer(url)", "org.apache.wicket.request.handler.render.webpagerenderer.isonepassrender()", "org.apache.wicket.request.mapper.pageinstancemapper.maprequest(request)", "org.apache.wicket.request.mapper.parameter.pageparameters.add(string;object)", "org.apache.wicket.request.mapper.abstractcomponentmapper.getpagecomponentinfo(url)", "org.apache.wicket.request.resource.resourcereference.getscope()", "org.apache.wicket.request.url.tostring(charset)", "org.apache.wicket.request.handler.resource.resourcereferencerequesthandler.resourcereferencerequesthandler(resourcereference;pageparameters)", "org.apache.wicket.request.mapper.parentpathreferencerewriter.parentpathreferencerewriter(irequestmapper;iprovider)", "org.apache.wicket.request.handler.renderpagerequesthandler.renderpagerequesthandler(ipageprovider;redirectpolicy)", "org.apache.wicket.request.cycle.requestcycle.mapurlfor(class;pageparameters)", "org.apache.wicket.request.mapper.abstractresourcereferencemapper.encoderesourcereferenceattributes(urlattributes)", "org.apache.wicket.request.mapper.abstractbookmarkablemapper.maprequest(request)", "org.apache.wicket.request.url.islastsegmentempty()", "org.apache.wicket.request.urlrenderer.renderurl(url)", "org.apache.wicket.request.url.encodesegment(string;charset)", "org.apache.wicket.request.request.request()", "org.apache.wicket.request.mapper.info.pageinfo.getpageid()", "org.apache.wicket.request.mapper.parameter.pageparameters.add(string;object;int)", "org.apache.wicket.request.handler.bookmarkablepagerequesthandler.getpageparameters()", "org.apache.wicket.request.handler.bufferedresponserequesthandler.respond(irequestcycle)", "org.apache.wicket.request.resource.resourcereference.getvariation()", "org.apache.wicket.request.mapper.parameter.pageparameters$entry.access$002(entry;string)", "org.apache.wicket.request.handler.renderpagerequesthandler.getpageparameters()", "org.apache.wicket.request.mapper.parameter.pageparameters.overwritewith(pageparameters)", "org.apache.wicket.request.cycle.requestcycle.requestcycle(requestcyclecontext)", "org.apache.wicket.request.mapper.pageinstancemapper.maphandler(irequesthandler)", "org.apache.wicket.request.mapper.parameter.pageparameters.pageparameters()", "org.apache.wicket.request.urlencoder.encode(string;string)", "org.apache.wicket.request.mapper.parameter.pageparameters$entry.access$000(entry)", "org.apache.wicket.request.mapper.parameter.pageparameters$namedpair.getvalue()", "org.apache.wicket.request.resource.resourcereference$key.resourcereference$key(string;string;locale;string;string)", "org.apache.wicket.request.cycle.requestcyclecontext.requestcyclecontext(request;response;irequestmapper;iexceptionmapper)", "org.apache.wicket.request.handler.pageprovider.pageprovider(class;pageparameters)", "org.apache.wicket.request.cycle.requestcycle.setmetadata(metadatakey;object)", "org.apache.wicket.request.mapper.info.componentinfo.decodecomponentpath(string)", "org.apache.wicket.request.mapper.basicresourcereferencemapper.getclassname(class)", "org.apache.wicket.request.cycle.requestcycle.setcleanupfeedbackmessagesondetach(boolean)", "org.apache.wicket.request.mapper.bufferedresponsemapper.maphandler(irequesthandler)", "org.apache.wicket.request.handler.renderpagerequesthandler.getpageclass()", "org.apache.wicket.request.mapper.parameter.pageparameters.pageparameters(pageparameters)", "org.apache.wicket.request.mapper.parentpathreferencerewriter.maprequest(request)", "org.apache.wicket.request.mapper.parentpathreferencerewriter.maphandler(irequesthandler)", "org.apache.wicket.request.mapper.parameter.pageparameters.isempty()", "org.apache.wicket.request.mapper.bufferedresponsemapper.getcompatibilityscore(request)", "org.apache.wicket.request.handler.pageprovider.pageprovider(class)", "org.apache.wicket.request.http.webrequest.isajax()", "org.apache.wicket.request.mapper.compoundrequestmapper$encoderwithsegmentscount.compoundrequestmapper$encoderwithsegmentscount(irequestmapper;int)", "org.apache.wicket.request.http.webrequest.webrequest()", "org.apache.wicket.request.handler.pageprovider.pageprovider(int;integer)", "org.apache.wicket.request.handler.pageprovider.getpagesource()", "org.apache.wicket.request.url.access$000(string;charset)", "org.apache.wicket.request.cycle.requestcycle.getrequestcycle()", "org.apache.wicket.request.url.getcharset()", "org.apache.wicket.request.handler.render.webpagerenderer.getpage()", "org.apache.wicket.request.mapper.bufferedresponsemapper.getrequest(request)", "org.apache.wicket.request.mapper.basicresourcereferencemapper.maprequest(request)", "org.apache.wicket.request.mapper.parameter.pageparameters.getallnamed()", "org.apache.wicket.request.handler.renderpagerequesthandler.getredirectpolicy()", "org.apache.wicket.request.mapper.abstractmapper.urlstartswith(url;string[])", "org.apache.wicket.request.handler.pageprovider.getpageinstance(integer;class;pageparameters;integer)", "org.apache.wicket.request.mapper.abstractcomponentmapper.getpageclass(string)", "org.apache.wicket.request.requesthandlerstack.requesthandlerstack(response)", "org.apache.wicket.request.mapper.parameter.pageparameters$entry.pageparameters$entry()", "org.apache.wicket.request.mapper.parameter.pageparameters$entry.access$100(entry)", "org.apache.wicket.request.mapper.info.pageinfo.pageinfo(integer)", "org.apache.wicket.request.handler.render.webpagerenderer.redirectto(url;requestcycle)", "org.apache.wicket.request.url.encodeparameter(string;charset)", "org.apache.wicket.request.mapper.parameter.pageparameters.getindexedcount()", "org.apache.wicket.request.handler.pageprovider.pageprovider(irequestablepage)", "org.apache.wicket.request.handler.render.webpagerenderer.getsessionid()", "org.apache.wicket.request.mapper.info.pagecomponentinfo.getpageinfo()", "org.apache.wicket.request.cycle.requestcycle.resolverequesthandler()", "org.apache.wicket.request.cycle.requestcycle.onbeginrequest()", "org.apache.wicket.request.mapper.abstractcomponentmapper.requestlistenerinterfacefromstring(string)", "org.apache.wicket.request.http.webresponse.webresponse()", "org.apache.wicket.request.resource.resourcereference.getkey()", "org.apache.wicket.request.handler.listenerinterfacerequesthandler.getpage()", "org.apache.wicket.request.handler.renderpagerequesthandler.renderpagerequesthandler(ipageprovider)", "org.apache.wicket.request.handler.pageandcomponentprovider.setcomponentpath(string)", "org.apache.wicket.request.requesthandlerstack.getactiverequesthandler()", "org.apache.wicket.request.handler.render.webpagerenderer.respond(requestcycle)", "org.apache.wicket.request.resource.packageresourcereference.geturlattributes(locale;string;string)", "org.apache.wicket.request.handler.bookmarkablepagerequesthandler.bookmarkablepagerequesthandler(ipageprovider)", "org.apache.wicket.request.mapper.abstractmapper.extractpageparameters(request;int;ipageparametersencoder)", "org.apache.wicket.request.handler.render.webpagerenderer.enableredirectforstatelesspage()", "org.apache.wicket.request.mapper.parameter.pageparameters$entry.access$102(entry;string)", "org.apache.wicket.request.response.close()", "org.apache.wicket.request.cycle.requestcyclecontext.setexceptionmapper(iexceptionmapper)", "org.apache.wicket.request.url.getsegments()", "org.apache.wicket.request.handler.render.webpagerenderer.webpagerenderer(renderpagerequesthandler)", "org.apache.wicket.request.resource.packageresourcereference.lookupstream(iresourcestreamlocator;locale;string;string)", "org.apache.wicket.request.handler.renderpagerequesthandler.getpage()", "org.apache.wicket.request.cycle.requestcycle.urlfor(irequesthandler)", "org.apache.wicket.request.mapper.abstractmapper.encodepageparameters(url;pageparameters;ipageparametersencoder)", "org.apache.wicket.request.url.islastsegmentreal()", "org.apache.wicket.request.resource.packageresource.exists(class;string;locale;string;string)", "org.apache.wicket.request.handler.listenerinterfacerequesthandler.getcomponent()", "org.apache.wicket.request.resource.packageresource.<clinit>()", "org.apache.wicket.request.handler.bookmarkablepagerequesthandler.getpageclass()", "org.apache.wicket.request.handler.listenerinterfacerequesthandler.detach(irequestcycle)", "org.apache.wicket.request.cycle.requestcycle.processrequestanddetach()", "org.apache.wicket.request.handler.listenerinterfacerequesthandler.listenerinterfacerequesthandler(ipageandcomponentprovider;requestlistenerinterface;integer)", "org.apache.wicket.request.urldecoder.decode(string;charset)", "org.apache.wicket.request.handler.renderpagerequesthandler.detach(irequestcycle)", "org.apache.wicket.request.cycle.requestcycle.newurlrenderer()", "org.apache.wicket.request.handler.pageprovider.getpageinstance()", "org.apache.wicket.request.cycle.requestcycle.getoriginalresponse()", "org.apache.wicket.request.resource.packageresourcereference.lookupstream(locale;string;string)", "org.apache.wicket.request.resource.packageresourcereference.packageresourcereference(class;string)", "org.apache.wicket.request.urlencoder.encode(string;charset)", "org.apache.wicket.request.mapper.abstractcomponentmapper.abstractcomponentmapper()", "org.apache.wicket.request.handler.pageprovider.isnewpageinstance()", "org.apache.wicket.request.mapper.bufferedresponsemapper.getandremovebufferedresponse(url)", "org.apache.wicket.request.handler.listenerinterfacerequesthandler.getlistenerinterface()", "org.apache.wicket.request.resource.resourcereference.resourcereference(class;string)", "org.apache.wicket.request.requesthandlerstack.schedulerequesthandleraftercurrent(irequesthandler)", "org.apache.wicket.request.url.tostring()", "org.apache.wicket.request.mapper.bufferedresponsemapper.getsessionid()", "org.apache.wicket.request.cycle.requestcycle.processrequest()", "org.apache.wicket.request.cycle.requestcycle.renderurl(url)"]}, "response": {"distance": 1.0, "methods": ["org.apache.wicket.response.stringresponse.write(charsequence)", "org.apache.wicket.request.response.response()", "org.apache.wicket.response.stringresponse.stringresponse()", "org.apache.wicket.response.stringresponse.encodeurl(charsequence)", "org.apache.wicket.response.stringresponse.getbuffer()", "org.apache.wicket.request.response.close()"]}, "metadatakey": {"distance": 1.25, "methods": ["org.apache.wicket.metadatakey.get(metadataentry[])", "org.apache.wicket.metadatakey.set(metadataentry[];object)", "org.apache.wicket.metadatakey.metadatakey()", "org.apache.wicket.metadatakey.equals(object)"]}, "session": {"distance": 0.9868, "methods": ["org.apache.wicket.session.nextsequencevalue()", "org.apache.wicket.session.getid()", "org.apache.wicket.session.bind()", "org.apache.wicket.session.getsessionstore()", "org.apache.wicket.session.session(request)", "org.apache.wicket.session.dirty()", "org.apache.wicket.session.getauthorizationstrategy()", "org.apache.wicket.session.setstyle(string)", "org.apache.wicket.session.defaultpagefactory.defaultpagefactory()", "org.apache.wicket.session.getapplication()", "org.apache.wicket.session.exists()", "org.apache.wicket.session.get()", "org.apache.wicket.session.getlocale()", "org.apache.wicket.session.defaultpagefactory.processpage(page;pageparameters)", "org.apache.wicket.session.defaultpagefactory.constructor(class;class)", "org.apache.wicket.session.getfeedbackmessages()", "org.apache.wicket.session.istemporary()", "org.apache.wicket.session.defaultpagefactory.newpage(constructor;object)", "org.apache.wicket.session.setlocale(locale)", "org.apache.wicket.session.getstyle()", "org.apache.wicket.session.defaultpagefactory.newpage(class)", "org.apache.wicket.session.getpagemanager()", "org.apache.wicket.session.nextpageid()"]}, "requestcycle": {"distance": 0.9946, "methods": ["org.apache.wicket.request.cycle.requestcycle.set(requestcycle)", "org.apache.wicket.request.cycle.requestcycle.geturlrenderer()", "org.apache.wicket.request.cycle.requestcycle.getmetadata(metadatakey)", "org.apache.wicket.request.cycle.requestcycle.detach()", "org.apache.wicket.request.cycle.requestcycle.onendrequest()", "org.apache.wicket.request.cycle.requestcycle.setrequest(request)", "org.apache.wicket.request.cycle.requestcycle.getrequest()", "org.apache.wicket.request.cycle.requestcycle.register(detachcallback)", "org.apache.wicket.request.cycle.requestcycle.mapurlfor(irequesthandler)", "org.apache.wicket.request.cycle.requestcycle.get()", "org.apache.wicket.request.cycle.requestcycle.urlfor(class;pageparameters)", "org.apache.wicket.request.cycle.requestcycle.mapurlfor(class;pageparameters)", "org.apache.wicket.request.cycle.requestcycle.requestcycle(requestcyclecontext)", "org.apache.wicket.request.cycle.requestcycle.setmetadata(metadatakey;object)", "org.apache.wicket.request.cycle.requestcycle.setcleanupfeedbackmessagesondetach(boolean)", "org.apache.wicket.request.cycle.requestcycle.getrequestcycle()", "org.apache.wicket.request.cycle.requestcycle.resolverequesthandler()", "org.apache.wicket.request.cycle.requestcycle.onbeginrequest()", "org.apache.wicket.request.cycle.requestcycle.urlfor(irequesthandler)", "org.apache.wicket.request.cycle.requestcycle.processrequestanddetach()", "org.apache.wicket.request.cycle.requestcycle.newurlrenderer()", "org.apache.wicket.request.cycle.requestcycle.getoriginalresponse()", "org.apache.wicket.request.cycle.requestcycle.processrequest()", "org.apache.wicket.request.cycle.requestcycle.renderurl(url)"]}, "application": {"distance": 0.9936, "methods": ["org.apache.wicket.application.getmarkupsettings()", "org.apache.wicket.application.getpagerendererprovider()", "org.apache.wicket.application.getencodercontext()", "org.apache.wicket.application.addcomponentinstantiationlistener(icomponentinstantiationlistener)", "org.apache.wicket.application.newsharedresources(resourcereferenceregistry)", "org.apache.wicket.application.createrequestcycle(request;response)", "org.apache.wicket.application.setpagemanagerprovider(iprovider)", "org.apache.wicket.application.validateinit()", "org.apache.wicket.application.application()", "org.apache.wicket.application.getsettings()", "org.apache.wicket.application.notifycomponentinstantiationlisteners(component)", "org.apache.wicket.application.setname(string)", "org.apache.wicket.application.addcomponentonafterrenderlistener(icomponentonafterrenderlistener)", "org.apache.wicket.application.newconverterlocator()", "org.apache.wicket.application.getconverterlocator()", "org.apache.wicket.application.notifypostcomponentonbeforerenderlisteners(component)", "org.apache.wicket.application.getpagefactory()", "org.apache.wicket.application.setrequestcycleprovider(irequestcycleprovider)", "org.apache.wicket.application.callinitializers()", "org.apache.wicket.application.configure()", "org.apache.wicket.application.getpagesettings()", "org.apache.wicket.application.notifyprecomponentonbeforerenderlisteners(component)", "org.apache.wicket.application.getsessionstoreprovider()", "org.apache.wicket.application.getresourcereferenceregistry()", "org.apache.wicket.application.getdebugsettings()", "org.apache.wicket.application.getpagemanagerprovider()", "org.apache.wicket.application.fetchcreateandsetsession(requestcycle)", "org.apache.wicket.application.internaldestroy()", "org.apache.wicket.application.setpagerendererprovider(ipagerendererprovider)", "org.apache.wicket.application.newexceptionmapper()", "org.apache.wicket.application.defaultclassresolver.getresources(string)", "org.apache.wicket.application.getrootrequestmapper()", "org.apache.wicket.application.getpagemanager()", "org.apache.wicket.application.setrootrequestmapper(irequestmapper)", "org.apache.wicket.application.load(properties)", "org.apache.wicket.application.defaultclassresolver.resolveclass(string)", "org.apache.wicket.application.getapplicationsettings()", "org.apache.wicket.application.calldestroyers()", "org.apache.wicket.application.internalinit()", "org.apache.wicket.application.get()", "org.apache.wicket.application.addinitializer(string)", "org.apache.wicket.application.getpagemanagercontext()", "org.apache.wicket.application.initializecomponents()", "org.apache.wicket.application.getsecuritysettings()", "org.apache.wicket.application.notifycomponentonafterrenderlisteners(component)", "org.apache.wicket.application.newresourcereferenceregistry()", "org.apache.wicket.application.exists()", "org.apache.wicket.application.getframeworksettings()", "org.apache.wicket.application.initapplication()", "org.apache.wicket.application.getresourcesettings()", "org.apache.wicket.application.defaultclassresolver.loadresources(enumeration;set)", "org.apache.wicket.application.defaultclassresolver.defaultclassresolver()", "org.apache.wicket.application.getexceptionsettings()", "org.apache.wicket.application.getrequestcycleprovider()", "org.apache.wicket.application.setsessionstoreprovider(iprovider)", "org.apache.wicket.application.getsessionstore()", "org.apache.wicket.application.ondestroy()", "org.apache.wicket.application.newpagefactory()", "org.apache.wicket.application.init()", "org.apache.wicket.application.getname()", "org.apache.wicket.application.removecomponentonafterrenderlistener(icomponentonafterrenderlistener)", "org.apache.wicket.application.getrequestcyclesettings()"]}, "stringresourcestream": {"distance": 1.25, "methods": ["org.apache.wicket.util.resource.stringresourcestream.tostring()", "org.apache.wicket.util.resource.stringresourcestream.getstring()", "org.apache.wicket.util.resource.stringresourcestream.stringresourcestream(charsequence)"]}, "abstractstringresourcestream": {"distance": 1.0417, "methods": ["org.apache.wicket.util.resource.abstractstringresourcestream.getinputstream()", "org.apache.wicket.util.resource.abstractstringresourcestream.abstractstringresourcestream(string)", "org.apache.wicket.util.resource.abstractstringresourcestream.abstractstringresourcestream()"]}, "abstractresourcestream": {"distance": 0.9273, "methods": ["org.apache.wicket.util.resource.abstractresourcestream.getcharset()", "org.apache.wicket.util.resource.abstractresourcestream.setvariation(string)", "org.apache.wicket.util.resource.abstractresourcestream.setstyle(string)", "org.apache.wicket.util.resource.abstractresourcestream.abstractresourcestream()", "org.apache.wicket.util.resource.abstractresourcestream.setlocale(locale)"]}, "abstractconverter": {"distance": 1.3333, "methods": ["org.apache.wicket.util.convert.converter.abstractconverter.abstractconverter()"]}, "sqldateconverter": {"distance": 1.3333, "methods": ["org.apache.wicket.util.convert.converter.sqldateconverter.sqldateconverter()"]}, "sqltimestampconverter": {"distance": 0.8333, "methods": ["org.apache.wicket.util.convert.converter.sqltimestampconverter.sqltimestampconverter()"]}, "abstractdecimalconverter": {"distance": 1.0, "methods": ["org.apache.wicket.util.convert.converter.abstractdecimalconverter.abstractdecimalconverter()"]}, "dateconverter": {"distance": 1.3333, "methods": ["org.apache.wicket.util.convert.converter.dateconverter.dateconverter()"]}, "abstractnumberconverter": {"distance": 1.5, "methods": ["org.apache.wicket.util.convert.converter.abstractnumberconverter.abstractnumberconverter()"]}, "metapattern": {"distance": 1.2325, "methods": ["org.apache.wicket.util.parse.metapattern.parsers.variableassignmentparser.getvalue()", "org.apache.wicket.util.parse.metapattern.parsers.metapatternparser.matcher()", "org.apache.wicket.util.parse.metapattern.metapattern.matcher(charsequence)", "org.apache.wicket.util.parse.metapattern.parsers.variableassignmentparser.getkey()", "org.apache.wicket.util.parse.metapattern.metapattern.matcher(charsequence;int)", "org.apache.wicket.util.parse.metapattern.optionalmetapattern.tostring()", "org.apache.wicket.util.parse.metapattern.optionalmetapattern.optionalmetapattern(metapattern)", "org.apache.wicket.util.parse.metapattern.parsers.variableassignmentparser.variableassignmentparser(charsequence;metapattern)", "org.apache.wicket.util.parse.metapattern.parsers.variableassignmentparser.variableassignmentparser(charsequence)", "org.apache.wicket.util.parse.metapattern.metapattern.tostring()", "org.apache.wicket.util.parse.metapattern.parsers.metapatternparser.metapatternparser(metapattern;charsequence)", "org.apache.wicket.util.parse.metapattern.parsers.tagnameparser.getname()", "org.apache.wicket.util.parse.metapattern.metapattern.metapattern(list)", "org.apache.wicket.util.parse.metapattern.metapattern.metapattern(metapattern)", "org.apache.wicket.util.parse.metapattern.group.group(metapattern)", "org.apache.wicket.util.parse.metapattern.metapattern.bind(int)", "org.apache.wicket.util.parse.metapattern.metapattern.compile(int)", "org.apache.wicket.util.parse.metapattern.parsers.tagnameparser.tagnameparser(charsequence)", "org.apache.wicket.util.parse.metapattern.parsers.metapatternparser.setpattern(metapattern)", "org.apache.wicket.util.parse.metapattern.metapattern.metapattern(metapattern[])", "org.apache.wicket.util.parse.metapattern.parsers.tagnameparser.getnamespace()", "org.apache.wicket.util.parse.metapattern.group.bind(int)", "org.apache.wicket.util.parse.metapattern.parsers.metapatternparser.metapatternparser(charsequence)", "org.apache.wicket.util.parse.metapattern.group.tostring()", "org.apache.wicket.util.parse.metapattern.group.get(matcher)"]}, "group": {"distance": 1.0, "methods": ["org.apache.wicket.util.parse.metapattern.group.group(metapattern)", "org.apache.wicket.util.parse.metapattern.group.bind(int)", "org.apache.wicket.util.parse.metapattern.group.tostring()", "org.apache.wicket.util.parse.metapattern.group.get(matcher)"]}, "fullybufferedreader": {"distance": 0.8214, "methods": ["org.apache.wicket.util.io.fullybufferedreader.find(char;int)", "org.apache.wicket.util.io.fullybufferedreader.getsubstring(int)", "org.apache.wicket.util.io.fullybufferedreader.getposition()", "org.apache.wicket.util.io.fullybufferedreader.setposition(int)", "org.apache.wicket.util.io.fullybufferedreader.charat(int)", "org.apache.wicket.util.io.fullybufferedreader.countlinesto(int)", "org.apache.wicket.util.io.fullybufferedreader.find(string;int)", "org.apache.wicket.util.io.fullybufferedreader.find(char)", "org.apache.wicket.util.io.fullybufferedreader.getsubstring(int;int)", "org.apache.wicket.util.io.fullybufferedreader.getcolumnnumber()", "org.apache.wicket.util.io.fullybufferedreader.getlinenumber()", "org.apache.wicket.util.io.fullybufferedreader.fullybufferedreader(reader)", "org.apache.wicket.util.io.fullybufferedreader.size()", "org.apache.wicket.util.io.fullybufferedreader.setpositionmarker(int)"]}, "classvisitfilter": {"distance": 1.0, "methods": ["org.apache.wicket.util.visit.classvisitfilter.visitobject(object)", "org.apache.wicket.util.visit.classvisitfilter.visitchildren(object)", "org.apache.wicket.util.visit.classvisitfilter.classvisitfilter(class)"]}, "variableinterpolator": {"distance": 1.0, "methods": ["org.apache.wicket.util.string.interpolator.variableinterpolator.tostring()", "org.apache.wicket.util.string.interpolator.variableinterpolator.lowerpositive(int;int)", "org.apache.wicket.util.string.interpolator.variableinterpolator.variableinterpolator(string)"]}, "task": {"distance": 0.8095, "methods": ["org.apache.wicket.util.thread.task.access$100(task)", "org.apache.wicket.util.thread.task.interrupt()", "org.apache.wicket.util.thread.task.access$302(task;boolean)", "org.apache.wicket.util.thread.task.stop()", "org.apache.wicket.util.thread.task.access$000(task)", "org.apache.wicket.util.thread.task.task(string)", "org.apache.wicket.util.thread.task.run(duration;icode)", "org.apache.wicket.util.thread.task.getlog()"]}, "abstractstringlist": {"distance": 1.1111, "methods": ["org.apache.wicket.util.string.abstractstringlist.join(int;int;string)", "org.apache.wicket.util.string.abstractstringlist.join(string)", "org.apache.wicket.util.string.abstractstringlist.abstractstringlist()"]}, "file": {"distance": 1.0714, "methods": ["org.apache.wicket.util.file.webapplicationpath.webapplicationpath(servletcontext)", "org.apache.wicket.util.file.path.path()", "org.apache.wicket.util.file.webapplicationpath.find(class;string)", "org.apache.wicket.util.file.filecleaner.destroy()"]}, "tagnameparser": {"distance": 1.3333, "methods": ["org.apache.wicket.util.parse.metapattern.parsers.tagnameparser.getname()", "org.apache.wicket.util.parse.metapattern.parsers.tagnameparser.tagnameparser(charsequence)", "org.apache.wicket.util.parse.metapattern.parsers.tagnameparser.getnamespace()"]}}