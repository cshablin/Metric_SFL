{"abstractbookmarkablemapper": {"distance": 1.0, "methods": ["org.apache.wicket.core.request.mapper.abstractbookmarkablemapper.checkpageinstance(irequestablepage)", "org.apache.wicket.core.request.mapper.abstractbookmarkablemapper.maprequest(request)", "org.apache.wicket.core.request.mapper.abstractbookmarkablemapper.abstractbookmarkablemapper()", "org.apache.wicket.core.request.mapper.abstractbookmarkablemapper.checkpageclass(class)", "org.apache.wicket.core.request.mapper.abstractbookmarkablemapper.maphandler(irequesthandler)", "org.apache.wicket.core.request.mapper.abstractbookmarkablemapper.processbookmarkable(class;pageparameters)"]}, "basicresourcereferencemapper": {"distance": 1.0, "methods": ["org.apache.wicket.core.request.mapper.basicresourcereferencemapper.canbehandled(url)", "org.apache.wicket.core.request.mapper.basicresourcereferencemapper.maphandler(irequesthandler)", "org.apache.wicket.core.request.mapper.basicresourcereferencemapper.getcompatibilityscore(request)", "org.apache.wicket.core.request.mapper.basicresourcereferencemapper.basicresourcereferencemapper(ipageparametersencoder;iprovider)"]}, "mountedmapper": {"distance": 0.925, "methods": ["org.apache.wicket.core.request.mapper.mountedmapper.maphandler(irequesthandler)", "org.apache.wicket.core.request.mapper.mountedmapper.checkpageclass(class)", "org.apache.wicket.core.request.mapper.mountedmapper.getpageclass()", "org.apache.wicket.core.request.mapper.mountedmapper.mountedmapper(string;iprovider)", "org.apache.wicket.core.request.mapper.mountedmapper.mountedmapper(string;iprovider;ipageparametersencoder)", "org.apache.wicket.core.request.mapper.mountedmapper.getpathsegments(string[])"]}, "mountedmapper$mountpathsegment": {"distance": 0.9167, "methods": ["org.apache.wicket.core.request.mapper.mountedmapper$mountpathsegment.mountedmapper$mountpathsegment(int)"]}, "abstractbookmarkablemapper$urlinfo": {"distance": 1.0, "methods": ["org.apache.wicket.core.request.mapper.abstractbookmarkablemapper$urlinfo.getpagecomponentinfo()", "org.apache.wicket.core.request.mapper.abstractbookmarkablemapper$urlinfo.getpageparameters()", "org.apache.wicket.core.request.mapper.abstractbookmarkablemapper$urlinfo.abstractbookmarkablemapper$urlinfo(pagecomponentinfo;class;pageparameters)", "org.apache.wicket.core.request.mapper.abstractbookmarkablemapper$urlinfo.cleanpageparameters(pageparameters)", "org.apache.wicket.core.request.mapper.abstractbookmarkablemapper$urlinfo.getpageclass()"]}, "resourcereferenceregistry": {"distance": 0.9444, "methods": ["org.apache.wicket.request.resource.resourcereferenceregistry.resourcereferenceregistry(iresourcereferencefactory)", "org.apache.wicket.request.resource.resourcereferenceregistry.setautoaddedcapacity(int)", "org.apache.wicket.request.resource.resourcereferenceregistry.resourcereferenceregistry()"]}, "storedresponsesmap": {"distance": 1.0, "methods": ["org.apache.wicket.protocol.http.storedresponsesmap.storedresponsesmap(int;duration)", "org.apache.wicket.protocol.http.storedresponsesmap.remove(object)"]}, "webapplication": {"distance": 0.9775, "methods": ["org.apache.wicket.protocol.http.webapplication.init()", "org.apache.wicket.protocol.http.webapplication.getservletcontext()", "org.apache.wicket.protocol.http.webapplication.setajaxrequesttargetprovider(icontextprovider)", "org.apache.wicket.protocol.http.webapplication.newwebrequest(httpservletrequest;string)", "org.apache.wicket.protocol.http.webapplication.setservletcontext(servletcontext)", "org.apache.wicket.protocol.http.webapplication.getandremovebufferedresponse(string;url)", "org.apache.wicket.protocol.http.webapplication.webapplication()", "org.apache.wicket.protocol.http.webapplication.internaldestroy()", "org.apache.wicket.protocol.http.webapplication.getajaxrequesttargetlisteners()", "org.apache.wicket.protocol.http.webapplication.getapplicationkey()", "org.apache.wicket.protocol.http.webapplication.newsession(request;response)", "org.apache.wicket.protocol.http.webapplication.get()", "org.apache.wicket.protocol.http.webapplication.setwicketfilter(wicketfilter)", "org.apache.wicket.protocol.http.webapplication.internalinit()"]}, "websession": {"distance": 1.25, "methods": ["org.apache.wicket.protocol.http.websession.websession(request)"]}, "wicketfilter": {"distance": 0.9572, "methods": ["org.apache.wicket.protocol.http.wicketfilter.wicketfilter()"]}, "requestloggerrequestcyclelistener": {"distance": 1.0, "methods": ["org.apache.wicket.protocol.http.requestloggerrequestcyclelistener.onendrequest(requestcycle)", "org.apache.wicket.protocol.http.requestloggerrequestcyclelistener.onrequesthandlerresolved(requestcycle;irequesthandler)", "org.apache.wicket.protocol.http.requestloggerrequestcyclelistener.requestloggerrequestcyclelistener()", "org.apache.wicket.protocol.http.requestloggerrequestcyclelistener.onbeginrequest(requestcycle)", "org.apache.wicket.protocol.http.requestloggerrequestcyclelistener.isrequestloggingenabled()"]}, "pagecomponentinfo": {"distance": 0.8333, "methods": ["org.apache.wicket.request.mapper.info.pagecomponentinfo.tostring()", "org.apache.wicket.request.mapper.info.pagecomponentinfo.pagecomponentinfo(pageinfo;componentinfo)"]}, "pageinfo": {"distance": 1.0, "methods": ["org.apache.wicket.request.mapper.info.pageinfo.pageinfo(integer)", "org.apache.wicket.request.mapper.info.pageinfo.tostring()", "org.apache.wicket.request.mapper.info.pageinfo.pageinfo()", "org.apache.wicket.request.mapper.info.pageinfo.getpageid()"]}, "feedbackmessages": {"distance": 0.8095, "methods": ["org.apache.wicket.feedback.feedbackmessages.clear(ifeedbackmessagefilter)", "org.apache.wicket.feedback.feedbackmessages.detach()", "org.apache.wicket.feedback.feedbackmessages.feedbackmessages()"]}, "abstractconverter": {"distance": 1.3333, "methods": ["org.apache.wicket.util.convert.converter.abstractconverter.abstractconverter()"]}, "bigdecimalconverter": {"distance": 2.0, "methods": ["org.apache.wicket.util.convert.converter.bigdecimalconverter.bigdecimalconverter()"]}, "sqltimestampconverter": {"distance": 0.8333, "methods": ["org.apache.wicket.util.convert.converter.sqltimestampconverter.sqltimestampconverter()"]}, "javaserializer": {"distance": 1.0, "methods": ["org.apache.wicket.serialize.java.javaserializer.javaserializer(string)"]}, "filecleaningtracker": {"distance": 1.0333, "methods": ["org.apache.wicket.util.file.filecleaningtracker.filecleaningtracker()", "org.apache.wicket.util.file.filecleaningtracker.exitwhenfinished()"]}, "file": {"distance": 1.0714, "methods": ["org.apache.wicket.util.file.filecleaner.destroy()", "org.apache.wicket.core.util.file.webapplicationpath.webapplicationpath(servletcontext;string)", "org.apache.wicket.util.file.filecleaner.filecleaner()", "org.apache.wicket.util.file.filecleaningtracker.filecleaningtracker()", "org.apache.wicket.util.file.filecleaningtracker.exitwhenfinished()"]}, "urldecoder": {"distance": 1.5, "methods": ["org.apache.wicket.util.encoding.urldecoder.decode(string;charset)", "org.apache.wicket.util.encoding.urldecoder.decode(string;string)"]}, "urlencoder": {"distance": 1.6667, "methods": ["org.apache.wicket.util.encoding.urlencoder.encode(string;string)", "org.apache.wicket.util.encoding.urlencoder.encode(string;charset)"]}, "initializer": {"distance": 1.0, "methods": ["org.apache.wicket.initializer.destroy(application)", "org.apache.wicket.initializer.initializer()", "org.apache.wicket.initializer.init(application)", "org.apache.wicket.initializer.tostring()"]}, "markupfactory": {"distance": 0.9444, "methods": ["org.apache.wicket.markup.markupfactory.hasmarkupcache()", "org.apache.wicket.markup.markupfactory.markupfactory()"]}, "markup": {"distance": 0.8333, "methods": ["org.apache.wicket.markup.parser.filter.wicketlinktaghandler.setautomaticlinking(boolean)", "org.apache.wicket.markup.parser.filter.inlineenclosurehandler.inlineenclosurehandler()", "org.apache.wicket.markup.html.securepackageresourceguard.clearcache()", "org.apache.wicket.markup.html.webpage$1.webpage$1(webpage)", "org.apache.wicket.markup.html.webpage.dirty(boolean)", "org.apache.wicket.markup.html.decoratingheaderresponse.wasrendered(object)", "org.apache.wicket.markup.html.decoratingheaderresponse.decoratingheaderresponse(iheaderresponse)", "org.apache.wicket.markup.html.image.resource.defaultbuttonimageresourcefactory.defaultbuttonimageresourcefactory()", "org.apache.wicket.markup.renderstrategy.childfirstheaderrenderstrategy.childfirstheaderrenderstrategy()", "org.apache.wicket.markup.parser.filter.wicketlinktaghandler.wicketlinktaghandler()", "org.apache.wicket.markup.renderstrategy.childfirstheaderrenderstrategy$1.component(component;ivisit)", "org.apache.wicket.markup.renderstrategy.abstractheaderrenderstrategy.get()", "org.apache.wicket.markup.renderstrategy.abstractheaderrenderstrategy.abstractheaderrenderstrategy()", "org.apache.wicket.markup.html.securepackageresourceguard$searchpattern.securepackageresourceguard$searchpattern(string)", "org.apache.wicket.markup.html.webpage.validateheaders()", "org.apache.wicket.markup.head.resourceaggregator.wasrendered(object)", "org.apache.wicket.markup.head.resourceaggregator.resourceaggregator(iheaderresponse)", "org.apache.wicket.markup.renderstrategy.childfirstheaderrenderstrategy.renderchildheaders(htmlheadercontainer;component)", "org.apache.wicket.markup.resolver.autolinkresolver$anchorresolverdelegate.autolinkresolver$anchorresolverdelegate()", "org.apache.wicket.markup.parser.filter.wicketmessagetaghandler.wicketmessagetaghandler()", "org.apache.wicket.markup.parser.filter.enclosurehandler.enclosurehandler(markupresourcestream)", "org.apache.wicket.markup.html.packageresourceguard.packageresourceguard()", "org.apache.wicket.markup.resolver.htmlheaderresolver.htmlheaderresolver()", "org.apache.wicket.markup.renderstrategy.childfirstheaderrenderstrategy.renderheader(htmlheadercontainer;headerstreamstate;component)", "org.apache.wicket.markup.head.resourceaggregator.markrendered(object)", "org.apache.wicket.markup.renderstrategy.deepchildfirstvisitor.deepchildfirstvisitor()", "org.apache.wicket.markup.parser.filter.relativepathprefixhandler.relativepathprefixhandler(markupresourcestream)", "org.apache.wicket.markup.html.webpage.onafterrender()", "org.apache.wicket.markup.html.internal.htmlheadercontainer$1.htmlheadercontainer$1(htmlheadercontainer)", "org.apache.wicket.markup.head.internal.headerresponse.headerresponse()", "org.apache.wicket.markup.resolver.fragmentresolver.fragmentresolver()", "org.apache.wicket.markup.html.internal.htmlheadercontainer.renderheadertagbody(headerstreamstate)", "org.apache.wicket.markup.resolver.wicketcontainerresolver.wicketcontainerresolver()", "org.apache.wicket.markup.html.securepackageresourceguard$searchpattern.setpattern(string)", "org.apache.wicket.markup.html.internal.htmlheadercontainer.newheaderresponse()", "org.apache.wicket.markup.head.internal.headerresponse.markrendered(object)", "org.apache.wicket.markup.parser.filter.wicketmessagetaghandler.wicketmessagetaghandler(markupresourcestream)", "org.apache.wicket.markup.html.webmarkupcontainer.webmarkupcontainer(string)", "org.apache.wicket.markup.html.securepackageresourceguard$searchpattern.converttoregex(string)", "org.apache.wicket.markup.html.securepackageresourceguard.securepackageresourceguard(concurrentmap)", "org.apache.wicket.markup.parser.filter.inlineenclosurehandler.inlineenclosurehandler(markupresourcestream)", "org.apache.wicket.markup.html.securepackageresourceguard.addpattern(string)", "org.apache.wicket.markup.renderstrategy.deepchildfirstvisitor.visit(component;visit)", "org.apache.wicket.markup.renderstrategy.abstractheaderrenderstrategy.renderrootcomponent(htmlheadercontainer;headerstreamstate;component)", "org.apache.wicket.markup.html.internal.htmlheadercontainer.getheaderresponse()", "org.apache.wicket.markup.html.decoratingheaderresponse.markrendered(object)", "org.apache.wicket.markup.parser.filter.wicketlinktaghandler.wicketlinktaghandler(markupresourcestream)", "org.apache.wicket.markup.renderstrategy.deepchildfirstvisitor.visit(component)", "org.apache.wicket.markup.renderstrategy.childfirstheaderrenderstrategy$1.childfirstheaderrenderstrategy$1(childfirstheaderrenderstrategy;component;htmlheadercontainer)", "org.apache.wicket.markup.html.webpage.webpage()", "org.apache.wicket.markup.renderstrategy.abstractheaderrenderstrategy.renderapplicationlevelheaders(htmlheadercontainer)", "org.apache.wicket.markup.head.priorityfirstcomparator.priorityfirstcomparator(boolean)", "org.apache.wicket.markup.html.internal.htmlheadercontainer.ondetach()", "org.apache.wicket.markup.html.webmarkupcontainer.webmarkupcontainer(string;imodel)", "org.apache.wicket.markup.html.panel.abstractmarkupsourcingstrategy.renderhead(component;htmlheadercontainer)", "org.apache.wicket.markup.resolver.autolinkresolver$abstractautolinkresolverdelegate.autolinkresolver$abstractautolinkresolverdelegate()", "org.apache.wicket.markup.markupfactory.hasmarkupcache()", "org.apache.wicket.markup.html.transparentwebmarkupcontainer.transparentwebmarkupcontainer(string)", "org.apache.wicket.markup.html.form.autolabelresolver.autolabelresolver()", "org.apache.wicket.markup.html.securepackageresourceguard$simplecache.securepackageresourceguard$simplecache(int)", "org.apache.wicket.markup.resolver.autolinkresolver$tagreferenceresolver.autolinkresolver$tagreferenceresolver(string)", "org.apache.wicket.markup.resolver.autolinkresolver.autolinkresolver()", "org.apache.wicket.markup.html.form.autolabeltextresolver.autolabeltextresolver()", "org.apache.wicket.markup.resolver.markupinheritanceresolver.markupinheritanceresolver()", "org.apache.wicket.markup.html.internal.htmlheadercontainer.htmlheadercontainer(string)", "org.apache.wicket.markup.resolver.autolinkresolver$resourcereferenceresolverdelegate.autolinkresolver$resourcereferenceresolverdelegate(string)", "org.apache.wicket.markup.parser.abstractmarkupfilter.abstractmarkupfilter(markupresourcestream)", "org.apache.wicket.markup.parser.filter.enclosurehandler.enclosurehandler()", "org.apache.wicket.markup.renderstrategy.childfirstheaderrenderstrategy$1.precheck(component)", "org.apache.wicket.markup.html.panel.defaultmarkupsourcingstrategy.get()", "org.apache.wicket.markup.head.internal.headerresponse.wasrendered(object)", "org.apache.wicket.markup.resolver.wicketmessageresolver.wicketmessageresolver()", "org.apache.wicket.markup.html.webpage.commoninit()", "org.apache.wicket.markup.markupfactory.markupfactory()", "org.apache.wicket.markup.parser.filter.relativepathprefixhandler.relativepathprefixhandler()"]}, "defaultpagefactory": {"distance": 1.3333, "methods": ["org.apache.wicket.session.defaultpagefactory.newpage(constructor;pageparameters)", "org.apache.wicket.session.defaultpagefactory.isbookmarkable(class)", "org.apache.wicket.session.defaultpagefactory.newpage(class)", "org.apache.wicket.session.defaultpagefactory.defaultpagefactory()"]}, "relativepathprefixhandler": {"distance": 1.6, "methods": ["org.apache.wicket.markup.parser.filter.relativepathprefixhandler.relativepathprefixhandler(markupresourcestream)", "org.apache.wicket.markup.parser.filter.relativepathprefixhandler.relativepathprefixhandler()"]}, "enclosurehandler": {"distance": 1.6, "methods": ["org.apache.wicket.markup.parser.filter.enclosurehandler.enclosurehandler(markupresourcestream)", "org.apache.wicket.markup.parser.filter.enclosurehandler.enclosurehandler()"]}, "wicketmessagetaghandler": {"distance": 2.0, "methods": ["org.apache.wicket.markup.parser.filter.wicketmessagetaghandler.wicketmessagetaghandler()", "org.apache.wicket.markup.parser.filter.wicketmessagetaghandler.wicketmessagetaghandler(markupresourcestream)"]}, "wicketlinktaghandler": {"distance": 1.1333, "methods": ["org.apache.wicket.markup.parser.filter.wicketlinktaghandler.setautomaticlinking(boolean)", "org.apache.wicket.markup.parser.filter.wicketlinktaghandler.wicketlinktaghandler()", "org.apache.wicket.markup.parser.filter.wicketlinktaghandler.wicketlinktaghandler(markupresourcestream)"]}, "inlineenclosurehandler": {"distance": 1.6, "methods": ["org.apache.wicket.markup.parser.filter.inlineenclosurehandler.inlineenclosurehandler()", "org.apache.wicket.markup.parser.filter.inlineenclosurehandler.inlineenclosurehandler(markupresourcestream)"]}, "duration": {"distance": 1.1111, "methods": ["org.apache.wicket.util.time.duration.milliseconds(long)", "org.apache.wicket.util.time.duration.days(int)", "org.apache.wicket.util.time.duration.seconds(int)", "org.apache.wicket.util.time.duration.<clinit>()", "org.apache.wicket.util.time.duration.hours(int)", "org.apache.wicket.util.time.duration.minutes(int)", "org.apache.wicket.util.time.duration.duration(long)"]}, "time": {"distance": 1.0171, "methods": ["org.apache.wicket.util.time.abstracttimevalue.abstracttimevalue(long)", "org.apache.wicket.util.time.time.millis(long)", "org.apache.wicket.util.time.time.time(long)", "org.apache.wicket.util.time.abstracttimevalue.getmilliseconds()", "org.apache.wicket.util.time.duration.milliseconds(long)", "org.apache.wicket.util.time.duration.days(int)", "org.apache.wicket.util.time.time.now()", "org.apache.wicket.util.time.duration.seconds(int)", "org.apache.wicket.util.time.time.subtract(time)", "org.apache.wicket.util.time.duration.<clinit>()", "org.apache.wicket.util.time.abstracttime.abstracttime(long)", "org.apache.wicket.util.time.duration.hours(int)", "org.apache.wicket.util.time.duration.minutes(int)", "org.apache.wicket.util.time.time.elapsedsince()", "org.apache.wicket.util.time.duration.duration(long)"]}, "abstracttime": {"distance": 1.0833, "methods": ["org.apache.wicket.util.time.abstracttime.abstracttime(long)"]}, "pageaccesssynchronizer": {"distance": 1.0, "methods": ["org.apache.wicket.page.pageaccesssynchronizer.unlockallpages()", "org.apache.wicket.page.pageaccesssynchronizer.pageaccesssynchronizer(duration)", "org.apache.wicket.page.pageaccesssynchronizer.lockpage(int)", "org.apache.wicket.page.pageaccesssynchronizer.internalunlockpages(integer)", "org.apache.wicket.page.pageaccesssynchronizer.adapt(ipagemanager)"]}, "webpagerenderer": {"distance": 1.0, "methods": ["org.apache.wicket.request.handler.render.webpagerenderer.getandremovebufferedresponse(url)", "org.apache.wicket.request.handler.render.webpagerenderer.respond(requestcycle)", "org.apache.wicket.request.handler.render.webpagerenderer.webpagerenderer(renderpagerequesthandler)", "org.apache.wicket.request.handler.render.webpagerenderer.isajax(requestcycle)", "org.apache.wicket.request.handler.render.webpagerenderer.renderpage(url;requestcycle)"]}, "debugsettings": {"distance": 0.9231, "methods": ["org.apache.wicket.settings.def.debugsettings.setajaxdebugmodeenabled(boolean)", "org.apache.wicket.settings.def.debugsettings.setcomponentusecheck(boolean)", "org.apache.wicket.settings.def.debugsettings.isoutputmarkupcontainerclassname()", "org.apache.wicket.settings.def.debugsettings.debugsettings()", "org.apache.wicket.settings.def.debugsettings.islineprecisereportingonnewcomponentenabled()", "org.apache.wicket.settings.def.debugsettings.setdevelopmentutilitiesenabled(boolean)", "org.apache.wicket.settings.def.debugsettings.islineprecisereportingonaddcomponentenabled()", "org.apache.wicket.settings.def.debugsettings.getcomponentusecheck()"]}, "frameworksettings": {"distance": 0.8333, "methods": ["org.apache.wicket.settings.def.frameworksettings.getdetachlistener()", "org.apache.wicket.settings.def.frameworksettings.frameworksettings(application)"]}, "exceptionsettings": {"distance": 1.0, "methods": ["org.apache.wicket.settings.def.exceptionsettings.exceptionsettings()", "org.apache.wicket.settings.def.exceptionsettings.setunexpectedexceptiondisplay(unexpectedexceptiondisplay)"]}, "applicationsettings": {"distance": 0.9231, "methods": ["org.apache.wicket.settings.def.applicationsettings.setinternalerrorpage(class)", "org.apache.wicket.settings.def.applicationsettings.setpageexpirederrorpage(class)", "org.apache.wicket.settings.def.applicationsettings.setaccessdeniedpage(class)", "org.apache.wicket.settings.def.applicationsettings.getfeedbackmessagecleanupfilter()", "org.apache.wicket.settings.def.applicationsettings.checkpageclass(class)", "org.apache.wicket.settings.def.applicationsettings.applicationsettings()", "org.apache.wicket.settings.def.applicationsettings.setfeedbackmessagecleanupfilter(ifeedbackmessagefilter)", "org.apache.wicket.settings.def.applicationsettings.getclassresolver()"]}, "markupsettings": {"distance": 0.9231, "methods": ["org.apache.wicket.settings.def.markupsettings.setstripwickettags(boolean)", "org.apache.wicket.settings.def.markupsettings.markupsettings()", "org.apache.wicket.settings.def.markupsettings.getmarkupfactory()", "org.apache.wicket.settings.def.markupsettings.getautomaticlinking()"]}, "requestcyclesettings": {"distance": 0.9231, "methods": ["org.apache.wicket.settings.def.requestcyclesettings.requestcyclesettings()", "org.apache.wicket.settings.def.requestcyclesettings.getrenderstrategy()", "org.apache.wicket.settings.def.requestcyclesettings.addresponsefilter(iresponsefilter)", "org.apache.wicket.settings.def.requestcyclesettings.gettimeout()"]}, "resourcesettings": {"distance": 0.9749, "methods": ["org.apache.wicket.settings.def.resourcesettings.setresourcepollfrequency(duration)", "org.apache.wicket.settings.def.resourcesettings.setfilecleaner(ifilecleaner)", "org.apache.wicket.settings.def.resourcesettings.getresourcewatcher(boolean)", "org.apache.wicket.settings.def.resourcesettings.resourcesettings(application)", "org.apache.wicket.settings.def.resourcesettings.getresourcefinders()", "org.apache.wicket.settings.def.resourcesettings.addresourcefactory(string;iresourcefactory)", "org.apache.wicket.settings.def.resourcesettings.setjavascriptcompressor(ijavascriptcompressor)", "org.apache.wicket.settings.def.resourcesettings.setcachingstrategy(iresourcecachingstrategy)", "org.apache.wicket.settings.def.resourcesettings.setuseminifiedresources(boolean)", "org.apache.wicket.settings.def.resourcesettings.getfilecleaner()"]}, "securitysettings": {"distance": 0.9495, "methods": ["org.apache.wicket.settings.def.securitysettings.getenforcemounts()", "org.apache.wicket.settings.def.securitysettings.getauthorizationstrategy()", "org.apache.wicket.settings.def.securitysettings.securitysettings()"]}, "pagelogdata": {"distance": 1.0, "methods": ["org.apache.wicket.core.request.handler.logger.pagelogdata.pagelogdata(ipageprovider)", "org.apache.wicket.core.request.handler.logger.pagelogdata.trytogetpageclass(ipageprovider)"]}, "webapplicationpath": {"distance": 1.25, "methods": ["org.apache.wicket.core.util.file.webapplicationpath.webapplicationpath(servletcontext;string)"]}, "initializerstringresourceloader": {"distance": 1.5, "methods": ["org.apache.wicket.resource.loader.initializerstringresourceloader.initializerstringresourceloader(list)"]}, "abstractclassresolver": {"distance": 1.0, "methods": ["org.apache.wicket.application.abstractclassresolver.getresources(string)", "org.apache.wicket.application.abstractclassresolver.loadresources(enumeration;set)", "org.apache.wicket.application.abstractclassresolver.resolveclass(string)", "org.apache.wicket.application.abstractclassresolver.abstractclassresolver()"]}, "basewickettester$testfilterconfig": {"distance": 1.0, "methods": ["org.apache.wicket.util.tester.basewickettester$testfilterconfig.getservletcontext()", "org.apache.wicket.util.tester.basewickettester$testfilterconfig.basewickettester$testfilterconfig(basewickettester)"]}, "wickettester": {"distance": 0.8529, "methods": ["org.apache.wicket.util.tester.wickettester.assertredirecturl(string)", "org.apache.wicket.util.tester.wickettester.wickettester(webapplication)"]}, "autolinkresolver": {"distance": 0.9, "methods": ["org.apache.wicket.markup.resolver.autolinkresolver.autolinkresolver()"]}, "htmlheaderresolver": {"distance": 2.0, "methods": ["org.apache.wicket.markup.resolver.htmlheaderresolver.htmlheaderresolver()"]}, "defaultmarkupsourcingstrategy": {"distance": 1.25, "methods": ["org.apache.wicket.markup.html.panel.defaultmarkupsourcingstrategy.get()"]}, "webresponse": {"distance": 1.0, "methods": ["org.apache.wicket.request.http.webresponse.<clinit>()", "org.apache.wicket.request.http.webresponse.webresponse()", "org.apache.wicket.request.http.webresponse.disablecaching()"]}, "webrequest": {"distance": 1.125, "methods": ["org.apache.wicket.request.http.webrequest.isajax()", "org.apache.wicket.request.http.webrequest.webrequest()"]}, "abstractmarkupfilter": {"distance": 0.9583, "methods": ["org.apache.wicket.markup.parser.abstractmarkupfilter.abstractmarkupfilter(markupresourcestream)"]}, "requestcyclecontext": {"distance": 0.8571, "methods": ["org.apache.wicket.request.cycle.requestcyclecontext.getresponse()", "org.apache.wicket.request.cycle.requestcyclecontext.getrequest()", "org.apache.wicket.request.cycle.requestcyclecontext.setrequestmapper(irequestmapper)", "org.apache.wicket.request.cycle.requestcyclecontext.setexceptionmapper(iexceptionmapper)", "org.apache.wicket.request.cycle.requestcyclecontext.getrequestmapper()", "org.apache.wicket.request.cycle.requestcyclecontext.getexceptionmapper()", "org.apache.wicket.request.cycle.requestcyclecontext.requestcyclecontext(request;response;irequestmapper;iexceptionmapper)"]}, "requestcyclelistenercollection": {"distance": 1.0625, "methods": ["org.apache.wicket.request.cycle.requestcyclelistenercollection.onrequesthandlerexecuted(requestcycle;irequesthandler)", "org.apache.wicket.request.cycle.requestcyclelistenercollection.onendrequest(requestcycle)", "org.apache.wicket.request.cycle.requestcyclelistenercollection.onrequesthandlerresolved(requestcycle;irequesthandler)", "org.apache.wicket.request.cycle.requestcyclelistenercollection.ondetach(requestcycle)", "org.apache.wicket.request.cycle.requestcyclelistenercollection.onurlmapped(requestcycle;irequesthandler;url)", "org.apache.wicket.request.cycle.requestcyclelistenercollection.onbeginrequest(requestcycle)", "org.apache.wicket.request.cycle.requestcyclelistenercollection.requestcyclelistenercollection()"]}, "requestcycle": {"distance": 0.9608, "methods": ["org.apache.wicket.request.cycle.requestcycle.onendrequest()", "org.apache.wicket.request.cycle.requestcycle.execute(irequesthandler)", "org.apache.wicket.request.cycle.requestcycle.set(requestcycle)", "org.apache.wicket.request.cycle.requestcycle.setrequest(request)", "org.apache.wicket.request.cycle.requestcycle.ondetach()", "org.apache.wicket.request.cycle.requestcycle.geturlrenderer()", "org.apache.wicket.request.cycle.requestcycle.getresponse()", "org.apache.wicket.request.cycle.requestcycle.getrequesthandlerscheduledaftercurrent()", "org.apache.wicket.request.cycle.requestcycle.resolverequesthandler()", "org.apache.wicket.request.cycle.requestcycle.onbeginrequest()", "org.apache.wicket.request.cycle.requestcycle.getactiverequesthandler()", "org.apache.wicket.request.cycle.requestcycle.getrequest()", "org.apache.wicket.request.cycle.requestcycle.schedulerequesthandleraftercurrent(irequesthandler)", "org.apache.wicket.request.cycle.requestcycle.detach()", "org.apache.wicket.request.cycle.requestcycle.requestcycle(requestcyclecontext)", "org.apache.wicket.request.cycle.requestcycle.mapurlfor(irequesthandler)", "org.apache.wicket.request.cycle.requestcycle.get()", "org.apache.wicket.request.cycle.requestcycle.processrequestanddetach()", "org.apache.wicket.request.cycle.requestcycle.getlisteners()", "org.apache.wicket.request.cycle.requestcycle.newurlrenderer()", "org.apache.wicket.request.cycle.requestcycle.oninternaldetach()", "org.apache.wicket.request.cycle.requestcycle.setresponse(response)", "org.apache.wicket.request.cycle.requestcycle.processrequest()"]}, "requesthandlerstack": {"distance": 0.8125, "methods": ["org.apache.wicket.request.requesthandlerstack.requesthandlerstack()", "org.apache.wicket.request.requesthandlerstack.getactive()", "org.apache.wicket.request.requesthandlerstack.schedule(irequesthandler)", "org.apache.wicket.request.requesthandlerstack.detach()", "org.apache.wicket.request.requesthandlerstack.execute(irequesthandler)", "org.apache.wicket.request.requesthandlerstack.next()"]}, "url$queryparameter": {"distance": 1.0667, "methods": ["org.apache.wicket.request.url$queryparameter.url$queryparameter(string;string)"]}, "url": {"distance": 0.9593, "methods": ["org.apache.wicket.request.url.setcharset(charset)", "org.apache.wicket.request.url.parse(charsequence)", "org.apache.wicket.request.url.url(url)", "org.apache.wicket.request.url.setport(integer)", "org.apache.wicket.request.url.getcharset()", "org.apache.wicket.request.url.isabsolute()", "org.apache.wicket.request.url.url()", "org.apache.wicket.request.url.getquerystring(charset)", "org.apache.wicket.request.url.getprotocol()", "org.apache.wicket.request.url.getport()", "org.apache.wicket.request.url.sethost(string)", "org.apache.wicket.request.url.url(charset)", "org.apache.wicket.request.url.getqueryparametervalue(string)", "org.apache.wicket.request.url.tostring(charset)", "org.apache.wicket.request.url.getsegments()", "org.apache.wicket.request.url.encodesegment(string;charset)", "org.apache.wicket.request.url.tostring(stringmode;charset)", "org.apache.wicket.request.url.equals(object)", "org.apache.wicket.request.url.gethost()", "org.apache.wicket.request.url.getpath(charset)", "org.apache.wicket.request.url.setprotocol(string)", "org.apache.wicket.request.url.getdefaultportforprotocol(string)", "org.apache.wicket.request.url.getqueryparameter(string)", "org.apache.wicket.request.url.parse(charsequence;charset)", "org.apache.wicket.request.url.decodesegment(string;charset)", "org.apache.wicket.request.url.tostring()", "org.apache.wicket.request.url.getqueryparameters()"]}, "redirectrequesthandler": {"distance": 0.8333, "methods": ["org.apache.wicket.request.http.handler.redirectrequesthandler.respond(irequestcycle)", "org.apache.wicket.request.http.handler.redirectrequesthandler.redirectrequesthandler(string;int)", "org.apache.wicket.request.http.handler.redirectrequesthandler.detach(irequestcycle)"]}, "servletwebrequest": {"distance": 0.9136, "methods": ["org.apache.wicket.protocol.http.servlet.servletwebrequest.getcontextrelativeurl(string;string)", "org.apache.wicket.protocol.http.servlet.servletwebrequest.getcontainerrequest()", "org.apache.wicket.protocol.http.servlet.servletwebrequest.geturl()", "org.apache.wicket.protocol.http.servlet.servletwebrequest.access$000(servletwebrequest)", "org.apache.wicket.protocol.http.servlet.servletwebrequest.getcharset()", "org.apache.wicket.protocol.http.servlet.servletwebrequest.getpostrequestparameters()", "org.apache.wicket.protocol.http.servlet.servletwebrequest.getclienturl()", "org.apache.wicket.protocol.http.servlet.servletwebrequest.getpostparameters()", "org.apache.wicket.protocol.http.servlet.servletwebrequest.servletwebrequest(httpservletrequest;string)", "org.apache.wicket.protocol.http.servlet.servletwebrequest.getheader(string)", "org.apache.wicket.protocol.http.servlet.servletwebrequest.generatepostparameters()", "org.apache.wicket.protocol.http.servlet.servletwebrequest.shouldpreserveclienturl()", "org.apache.wicket.protocol.http.servlet.servletwebrequest.servletwebrequest(httpservletrequest;string;url)", "org.apache.wicket.protocol.http.servlet.servletwebrequest.getlocale()", "org.apache.wicket.protocol.http.servlet.servletwebrequest.setparameters(url)"]}, "errorattributes": {"distance": 0.8333, "methods": ["org.apache.wicket.protocol.http.servlet.errorattributes.of(httpservletrequest;string)"]}, "renderpagerequesthandler": {"distance": 0.825, "methods": ["org.apache.wicket.core.request.handler.renderpagerequesthandler.renderpagerequesthandler(ipageprovider)", "org.apache.wicket.core.request.handler.renderpagerequesthandler.renderpagerequesthandler(ipageprovider;redirectpolicy)", "org.apache.wicket.core.request.handler.renderpagerequesthandler.getpageprovider()", "org.apache.wicket.core.request.handler.renderpagerequesthandler.getpageclass()", "org.apache.wicket.core.request.handler.renderpagerequesthandler.detach(irequestcycle)", "org.apache.wicket.core.request.handler.renderpagerequesthandler.getredirectpolicy()", "org.apache.wicket.core.request.handler.renderpagerequesthandler.respond(irequestcycle)", "org.apache.wicket.core.request.handler.renderpagerequesthandler.getpage()"]}, "dateconverter": {"distance": 0.9167, "methods": ["org.apache.wicket.util.convert.converter.dateconverter.dateconverter()"]}, "mockhttpservletrequest": {"distance": 0.9804, "methods": ["org.apache.wicket.protocol.http.mock.mockhttpservletrequest.issecure()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getfilterprefix()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getrequesturi()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.setserverport(int)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.setscheme(string)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getlocale(string)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getheader(string)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.setdefaultheaders()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getserverport()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getcharacterencoding()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.seturl(string)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getquerystring()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getscheme()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.addcookies(iterable)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getcharset()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getcookies()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getlocales()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.setservername(string)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.setpath(string)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getservletpath()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getlocale()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getcontextpath()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.mockhttpservletrequest(application;httpsession;servletcontext)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.initialize()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.geturl()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getservername()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.addheader(string;string)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getparametermap()", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.setsecure(boolean)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.seturl(url)", "org.apache.wicket.protocol.http.mock.mockhttpservletrequest.getattribute(string)"]}, "mockhttpservletresponse": {"distance": 0.9568, "methods": ["org.apache.wicket.protocol.http.mock.mockhttpservletresponse.getredirectlocation()", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.sendredirect(string)", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.formatdate(long)", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.isredirect()", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.mockhttpservletresponse(mockhttpservletrequest)", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.setheader(string;string)", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.encoderedirecturl(string)", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.append2digits(stringbuilder;int)", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.getcookies()", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.initialize()", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.setdateheader(string;long)", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.formatdate(stringbuilder;calendar;boolean)", "org.apache.wicket.protocol.http.mock.mockhttpservletresponse.getstatus()"]}, "mockservletcontext": {"distance": 0.9615, "methods": ["org.apache.wicket.protocol.http.mock.mockservletcontext.mockservletcontext(application;string)"]}, "mockhttpsession": {"distance": 0.9549, "methods": ["org.apache.wicket.protocol.http.mock.mockhttpsession.mockhttpsession(servletcontext)"]}, "form": {"distance": 1.0023, "methods": ["org.apache.wicket.markup.html.form.autolabelresolver.autolabelresolver()", "org.apache.wicket.markup.html.form.autolabeltextresolver.autolabeltextresolver()"]}, "priorityfirstcomparator": {"distance": 1.0, "methods": ["org.apache.wicket.markup.head.priorityfirstcomparator.priorityfirstcomparator(boolean)"]}, "resourceaggregator": {"distance": 1.0, "methods": ["org.apache.wicket.markup.head.resourceaggregator.wasrendered(object)", "org.apache.wicket.markup.head.resourceaggregator.resourceaggregator(iheaderresponse)", "org.apache.wicket.markup.head.resourceaggregator.markrendered(object)"]}, "application": {"distance": 0.9918, "methods": ["org.apache.wicket.application.destroyinitializers()", "org.apache.wicket.application.load(properties)", "org.apache.wicket.application.newconverterlocator()", "org.apache.wicket.application.addinitializer(string)", "org.apache.wicket.application.getcomponentinstantiationlisteners()", "org.apache.wicket.application.componentinitializationlistenercollection.componentinitializationlistenercollection()", "org.apache.wicket.application.getmarkupsettings()", "org.apache.wicket.application.getframeworksettings()", "org.apache.wicket.application.getpagerendererprovider()", "org.apache.wicket.application.abstractclassresolver.getresources(string)", "org.apache.wicket.application.defaultclassresolver.getclassloader()", "org.apache.wicket.application.decorateheaderresponse(iheaderresponse)", "org.apache.wicket.application.getheadercontributorlistenercollection()", "org.apache.wicket.application.initapplication()", "org.apache.wicket.application.abstractclassresolver.loadresources(enumeration;set)", "org.apache.wicket.application.getcomponentinitializationlisteners()", "org.apache.wicket.application.getpagesettings()", "org.apache.wicket.application.setsessionstoreprovider(iprovider)", "org.apache.wicket.application.abstractclassresolver.resolveclass(string)", "org.apache.wicket.application.defaultclassresolver.defaultclassresolver()", "org.apache.wicket.application.getpagefactory()", "org.apache.wicket.application.headercontributorlistenercollection.headercontributorlistenercollection()", "org.apache.wicket.application.getrequestcycleprovider()", "org.apache.wicket.application.newsharedresources(resourcereferenceregistry)", "org.apache.wicket.application.getrequestlogger()", "org.apache.wicket.application.setrequestcycleprovider(irequestcycleprovider)", "org.apache.wicket.application.checksettingsavailable()", "org.apache.wicket.application.getcomponentonafterrenderlisteners()", "org.apache.wicket.application.internalgetpagemanager()", "org.apache.wicket.application.configure()", "org.apache.wicket.application.componentinstantiationlistenercollection$1.notify(object)", "org.apache.wicket.application.setpagerendererprovider(ipagerendererprovider)", "org.apache.wicket.application.componentonbeforerenderlistenercollection.componentonbeforerenderlistenercollection()", "org.apache.wicket.application.componentonafterrenderlistenercollection.onafterrender(component)", "org.apache.wicket.application.getexceptionsettings()", "org.apache.wicket.application.newpagefactory()", "org.apache.wicket.application.componentinstantiationlistenercollection$1.componentinstantiationlistenercollection$1(componentinstantiationlistenercollection;component)", "org.apache.wicket.application.componentinstantiationlistenercollection$1.notify(icomponentinstantiationlistener)", "org.apache.wicket.application.createrequestcycle(request;response)", "org.apache.wicket.application.getapplicationsettings()", "org.apache.wicket.application.usesdevelopmentconfig()", "org.apache.wicket.application.getsessionstore()", "org.apache.wicket.application.ondestroy()", "org.apache.wicket.application.abstractclassresolver.abstractclassresolver()", "org.apache.wicket.application.getexceptionmapperprovider()", "org.apache.wicket.application.setpagemanagerprovider(ipagemanagerprovider)", "org.apache.wicket.application.getrequestcyclelisteners()", "org.apache.wicket.application.getsessionstoreprovider()", "org.apache.wicket.application.getrequestloggersettings()", "org.apache.wicket.application.getdebugsettings()", "org.apache.wicket.application.get()", "org.apache.wicket.application.newmappercontext()", "org.apache.wicket.application.getpagemanagerprovider()", "org.apache.wicket.application.validateinit()", "org.apache.wicket.application.fetchcreateandsetsession(requestcycle)", "org.apache.wicket.application.setrootrequestmapper(irequestmapper)", "org.apache.wicket.application.initializecomponents()", "org.apache.wicket.application.componentinitializationlistenercollection.oninitialize(component)", "org.apache.wicket.application.componentonafterrenderlistenercollection.componentonafterrenderlistenercollection()", "org.apache.wicket.application.getrootrequestmapper()", "org.apache.wicket.application.internaldestroy()", "org.apache.wicket.application.componentinitializationlistenercollection$1.componentinitializationlistenercollection$1(componentinitializationlistenercollection;component)", "org.apache.wicket.application.newresourcebundles(resourcereferenceregistry)", "org.apache.wicket.application.componentinstantiationlistenercollection.componentinstantiationlistenercollection()", "org.apache.wicket.application.getsecuritysettings()", "org.apache.wicket.application.init()", "org.apache.wicket.application.application()", "org.apache.wicket.application.getpagemanagercontext()", "org.apache.wicket.application.componentonafterrenderlistenercollection$1.componentonafterrenderlistenercollection$1(componentonafterrenderlistenercollection;component)", "org.apache.wicket.application.getname()", "org.apache.wicket.application.initinitializers()", "org.apache.wicket.application.getmappercontext()", "org.apache.wicket.application.newresourcereferenceregistry()", "org.apache.wicket.application.getresourcesettings()", "org.apache.wicket.application.componentinstantiationlistenercollection.oninstantiation(component)", "org.apache.wicket.application.internalinit()", "org.apache.wicket.application.getrequestcyclesettings()", "org.apache.wicket.application.setname(string)", "org.apache.wicket.application.getinitializers()", "org.apache.wicket.application.exists()"]}, "page": {"distance": 0.9841, "methods": ["org.apache.wicket.page.getstatelesshint()", "org.apache.wicket.page.page(pageparameters;imodel)", "org.apache.wicket.page.setnumericid(int)", "org.apache.wicket.page.pageaccesssynchronizer.unlockallpages()", "org.apache.wicket.page.renderpage()", "org.apache.wicket.page.getrendercount()", "org.apache.wicket.page.getpageid()", "org.apache.wicket.page.pageaccesssynchronizer$pagelock.pageaccesssynchronizer$pagelock(int;thread)", "org.apache.wicket.page.setstatelesshint(boolean)", "org.apache.wicket.page.pageaccesssynchronizer$1.createinstance()", "org.apache.wicket.page.wascreatedbookmarkable()", "org.apache.wicket.page.pageaccesssynchronizer$2.pageaccesssynchronizer$2(pageaccesssynchronizer;ipagemanager)", "org.apache.wicket.page.onafterrender()", "org.apache.wicket.page.pageaccesssynchronizer$1.pageaccesssynchronizer$1(pageaccesssynchronizer)", "org.apache.wicket.page.setnextavailableid()", "org.apache.wicket.page.defaultpagemanagercontext.defaultpagemanagercontext()", "org.apache.wicket.page.componentremoved(component)", "org.apache.wicket.page.ondetach()", "org.apache.wicket.page.internalprepareforrender(boolean)", "org.apache.wicket.page.pageaccesssynchronizer$2.touchpage(imanageablepage)", "org.apache.wicket.page.init()", "org.apache.wicket.page.pageaccesssynchronizer.pageaccesssynchronizer(duration)", "org.apache.wicket.page.checkrendering(markupcontainer)", "org.apache.wicket.page.page()", "org.apache.wicket.page.componentadded(component)", "org.apache.wicket.page.pagemanagerdecorator.pagemanagerdecorator(ipagemanager)", "org.apache.wicket.page.pagemanagerdecorator.supportsversioning()", "org.apache.wicket.page.pageaccesssynchronizer.lockpage(int)", "org.apache.wicket.page.pageaccesssynchronizer.internalunlockpages(integer)", "org.apache.wicket.page.getpageparameters()", "org.apache.wicket.page.dirty(boolean)", "org.apache.wicket.page.defaultpagemanagercontext$1.defaultpagemanagercontext$1(defaultpagemanagercontext)", "org.apache.wicket.page.pagemanagerdecorator.touchpage(imanageablepage)", "org.apache.wicket.page.pageaccesssynchronizer.adapt(ipagemanager)", "org.apache.wicket.page.pageaccesssynchronizer$pagelock.access$000(pagelock)", "org.apache.wicket.page.pagemanagerdecorator.commitrequest()", "org.apache.wicket.page.ispagestateless()", "org.apache.wicket.page.isbookmarkable()", "org.apache.wicket.page.pageaccesssynchronizer$2.commitrequest()", "org.apache.wicket.page.setfreezepageid(boolean)", "org.apache.wicket.page.detachmodels()"]}, "converterlocator": {"distance": 0.8333, "methods": ["org.apache.wicket.converterlocator.set(class;iconverter)", "org.apache.wicket.converterlocator.converterlocator()"]}, "component": {"distance": 1.001, "methods": ["org.apache.wicket.component.detach()", "org.apache.wicket.component.internalprepareforrender(boolean)", "org.apache.wicket.component.onremove()", "org.apache.wicket.component.getmarkupsourcingstrategy()", "org.apache.wicket.component.isversioned()", "org.apache.wicket.component.renderhead(iheaderresponse)", "org.apache.wicket.component.detachmodels()", "org.apache.wicket.component.setauto(boolean)", "org.apache.wicket.component.getmodelimpl()", "org.apache.wicket.component.getrequest()", "org.apache.wicket.component.getsession()", "org.apache.wicket.component.detachchildren()", "org.apache.wicket.component.internaldetach()", "org.apache.wicket.component.isvisibilityallowed()", "org.apache.wicket.component.beforerender()", "org.apache.wicket.component.getid()", "org.apache.wicket.component.findpage()", "org.apache.wicket.component.internalbeforerender()", "org.apache.wicket.component.getpage()", "org.apache.wicket.component.fireinitialize()", "org.apache.wicket.component.getrequestflag(short)", "org.apache.wicket.component.onafterrender()", "org.apache.wicket.component.removechildren()", "org.apache.wicket.component.renderhead(htmlheadercontainer)", "org.apache.wicket.component.getapplication()", "org.apache.wicket.component.determinevisibility()", "org.apache.wicket.component.isinitialized()", "org.apache.wicket.component.render()", "org.apache.wicket.component.isrenderallowed()", "org.apache.wicket.component.setid(string)", "org.apache.wicket.component.checkhierarchychange(component)", "org.apache.wicket.component.detachfeedback()", "org.apache.wicket.component.getparent()", "org.apache.wicket.component.ondetach()", "org.apache.wicket.component.internalonremove()", "org.apache.wicket.component.detachmodel()", "org.apache.wicket.component.isvisible()", "org.apache.wicket.component.onafterrenderchildren()", "org.apache.wicket.component.getbehaviors()", "org.apache.wicket.component.getrequestcycle()", "org.apache.wicket.component.afterrender()", "org.apache.wicket.component.configure()", "org.apache.wicket.component.isvisibleinhierarchy()", "org.apache.wicket.component.getbehaviors(class)", "org.apache.wicket.component.data_start()", "org.apache.wicket.component.component(string;imodel)", "org.apache.wicket.component.clearenabledinhierarchycache()", "org.apache.wicket.component.data_length()", "org.apache.wicket.component.setflag(int;boolean)", "org.apache.wicket.component.setrequestflag(short;boolean)", "org.apache.wicket.component.renderhead(component;iheaderresponse)", "org.apache.wicket.component.setversioned(boolean)", "org.apache.wicket.component.newmarkupsourcingstrategy()", "org.apache.wicket.component.setrenderbodyonly(boolean)", "org.apache.wicket.component.getmetadata(metadatakey)", "org.apache.wicket.component.oninitialize()", "org.apache.wicket.component.isauto()", "org.apache.wicket.component.getflag(int)", "org.apache.wicket.component.findparent(class)", "org.apache.wicket.component.getmetadata()", "org.apache.wicket.component.getresponse()", "org.apache.wicket.component.ispreparedforrender()", "org.apache.wicket.component.setparent(markupcontainer)", "org.apache.wicket.component.clearvisibleinhierarchycache()"]}, "session": {"distance": 0.9875, "methods": ["org.apache.wicket.session.session(request)", "org.apache.wicket.session.detachfeedback()", "org.apache.wicket.session.getid()", "org.apache.wicket.session.istemporary()", "org.apache.wicket.session.updateid()", "org.apache.wicket.session.getapplication()", "org.apache.wicket.session.getpagemanager()", "org.apache.wicket.session.defaultpagefactory.newpage(constructor;pageparameters)", "org.apache.wicket.session.detach()", "org.apache.wicket.session.defaultpagefactory.isbookmarkable(class)", "org.apache.wicket.session.get()", "org.apache.wicket.session.exists()", "org.apache.wicket.session.getmetadata(metadatakey)", "org.apache.wicket.session.defaultpagefactory.newpage(class)", "org.apache.wicket.session.getauthorizationstrategy()", "org.apache.wicket.session.getsessionstore()", "org.apache.wicket.session.internaldetach()", "org.apache.wicket.session.defaultpagefactory.defaultpagefactory()", "org.apache.wicket.session.nextpageid()"]}, "restartresponseatinterceptpageexception$interceptdata": {"distance": 1.6, "methods": ["org.apache.wicket.restartresponseatinterceptpageexception$interceptdata.get()"]}, "markupcontainer": {"distance": 0.9561, "methods": ["org.apache.wicket.markupcontainer.iterator()", "org.apache.wicket.markupcontainer.children_remove(int)", "org.apache.wicket.markupcontainer.children_add(component)", "org.apache.wicket.markupcontainer.visitchildren(ivisitor)", "org.apache.wicket.markupcontainer.children_remove(component)", "org.apache.wicket.markupcontainer.children_get(int)", "org.apache.wicket.markupcontainer.markupcontainer(string;imodel)", "org.apache.wicket.markupcontainer.access$100(markupcontainer;int)", "org.apache.wicket.markupcontainer.children_indexof(component)", "org.apache.wicket.markupcontainer.children_size()", "org.apache.wicket.markupcontainer.access$000(markupcontainer)", "org.apache.wicket.markupcontainer.removedcomponent(component)", "org.apache.wicket.markupcontainer.addedcomponent(component)", "org.apache.wicket.markupcontainer.detachchildren()", "org.apache.wicket.markupcontainer.getid(object)", "org.apache.wicket.markupcontainer.add(component[])", "org.apache.wicket.markupcontainer.removechildren()", "org.apache.wicket.markupcontainer.children_get(int;boolean)", "org.apache.wicket.markupcontainer.remove(component)", "org.apache.wicket.markupcontainer.onafterrenderchildren()", "org.apache.wicket.markupcontainer.put(component)", "org.apache.wicket.markupcontainer.internalinitialize()"]}, "resourcebundles": {"distance": 0.875, "methods": ["org.apache.wicket.resourcebundles.resourcebundles(resourcereferenceregistry)"]}, "metadatakey": {"distance": 1.25, "methods": ["org.apache.wicket.metadatakey.get(metadataentry[])", "org.apache.wicket.metadatakey.metadatakey()"]}, "requestlistenerinterface": {"distance": 0.9143, "methods": ["org.apache.wicket.requestlistenerinterface.registerrequestlistenerinterface(requestlistenerinterface)", "org.apache.wicket.requestlistenerinterface.register()", "org.apache.wicket.requestlistenerinterface.forname(string)", "org.apache.wicket.requestlistenerinterface.getname()", "org.apache.wicket.requestlistenerinterface.getmethod()"]}, "mocksessionstore": {"distance": 0.8533, "methods": ["org.apache.wicket.mock.mocksessionstore.mocksessionstore()", "org.apache.wicket.mock.mocksessionstore.registerunboundlistener(unboundlistener)", "org.apache.wicket.mock.mocksessionstore.cleanup()", "org.apache.wicket.mock.mocksessionstore.getsessionid(request;boolean)", "org.apache.wicket.mock.mocksessionstore.destroy()", "org.apache.wicket.mock.mocksessionstore.lookup(request)"]}, "listenercollection": {"distance": 0.8333, "methods": ["org.apache.wicket.util.listener.listenercollection.add(object)", "org.apache.wicket.util.listener.listenercollection.reversednotify(inotifier)", "org.apache.wicket.util.listener.listenercollection.isallowingduplicates()", "org.apache.wicket.util.listener.listenercollection.reversednotifyignoringexceptions(inotifier)", "org.apache.wicket.util.listener.listenercollection.iterator()", "org.apache.wicket.util.listener.listenercollection.listenercollection()", "org.apache.wicket.util.listener.listenercollection.notify(inotifier)"]}, "htmlheadercontainer": {"distance": 0.9524, "methods": ["org.apache.wicket.markup.html.internal.htmlheadercontainer.renderheadertagbody(headerstreamstate)", "org.apache.wicket.markup.html.internal.htmlheadercontainer.newheaderresponse()", "org.apache.wicket.markup.html.internal.htmlheadercontainer.getheaderresponse()", "org.apache.wicket.markup.html.internal.htmlheadercontainer.ondetach()", "org.apache.wicket.markup.html.internal.htmlheadercontainer.htmlheadercontainer(string)"]}, "packageresourceguard": {"distance": 0.8333, "methods": ["org.apache.wicket.markup.html.packageresourceguard.packageresourceguard()"]}, "webmarkupcontainer": {"distance": 1.3333, "methods": ["org.apache.wicket.markup.html.webmarkupcontainer.webmarkupcontainer(string)", "org.apache.wicket.markup.html.webmarkupcontainer.webmarkupcontainer(string;imodel)"]}, "securepackageresourceguard": {"distance": 0.8125, "methods": ["org.apache.wicket.markup.html.securepackageresourceguard.clearcache()", "org.apache.wicket.markup.html.securepackageresourceguard.securepackageresourceguard(concurrentmap)", "org.apache.wicket.markup.html.securepackageresourceguard.addpattern(string)"]}, "webpage": {"distance": 1.1429, "methods": ["org.apache.wicket.markup.html.webpage.dirty(boolean)", "org.apache.wicket.markup.html.webpage.validateheaders()", "org.apache.wicket.markup.html.webpage.onafterrender()", "org.apache.wicket.markup.html.webpage.webpage()", "org.apache.wicket.markup.html.webpage.commoninit()"]}}